# OpenAPI version identifier - required for OpenAPI 3.0 domains
openapi: 3.0.3

#######################
# Optional info section
#######################

info:
  title: DCSA - Documentation Components
  description: |
    Common components for eDocumentation APIs. This domain is used by
    - Electronic Bill of Lading ([EBL](https://app.swaggerhub.com/apis-docs/dcsaorg/DCSA_EBL))
    - Booking ([BKG](https://app.swaggerhub.com/apis-docs/dcsaorg/DCSA_BKG))
    
    For a history of changes in this domain - please check [GitHub](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/domain/documentation#v202). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Digital Container Shipping Association (DCSA)
    url: https://dcsa.org
    email: info@dcsa.org
  version: 3.0.0

components:
  schemas:
  
    ########################
    # Booking Request object
    ########################

    bookingShallow:
      description: |
        The shallow structure of the booking
      type: object
      allOf:
        - type: object
          properties:
            receiptTypeAtOrigin:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/receiptTypeAtOrigin'
        - type: object
          properties:
            deliveryTypeAtDestination:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryTypeAtDestination'
        - type: object
          properties:
            cargoMovementTypeAtOrigin:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtOrigin'
        - type: object
          properties:
            cargoMovementTypeAtDestination:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtDestination'
        - type: object
          properties:
            serviceContractReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/serviceContractReference'
        - type: object
          properties:
            contractQuotationReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contractQuotationReference'
        - type: object
          properties:
            vessel:
              type: object
              properties:
                vesselName:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselName'
                vesselIMONumber:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselIMONumber'
              required:
                - vesselName
        - type: object
          properties:
            carrierServiceName:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierServiceName'
        - type: object
          properties:
            carrierServiceCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierServiceCode'
        - type: object
          properties:
            universalServiceReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalServiceReference'
        - type: object
          properties:
            carrierExportVoyageNumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierExportVoyageNumber'
        - type: object
          properties:
            universalExportVoyageReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalExportVoyageReference'
        - type: object
          properties:
            declaredValue:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/declaredValue'
        - type: object
          properties:
            declaredValueCurrency:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/declaredValueCurrency'
        - type: object
          properties:
            paymentTermCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/paymentTermCode'
        - type: object
          properties:
            isPartialLoadAllowed:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isPartialLoadAllowed'
        - type: object
          properties:
            isExportDeclarationRequired:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isExportDeclarationRequired'
        - type: object
          properties:
            exportDeclarationReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/exportDeclarationReference'
        - type: object
          properties:
            isImportLicenseRequired:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isImportLicenseRequired'
        - type: object
          properties:
            importLicenseReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/importLicenseReference'
        # - type: object
        #   properties:
        #     contractQuotationReference:
        #       $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contractQuotationReference'
        - type: object
          properties:
            expectedDepartureDate:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/expectedDepartureDate'
        - type: object
          properties:
            expectedArrivalAtPlaceOfDeliveryStartDate:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/expectedArrivalAtPlaceOfDeliveryStartDate'
        - type: object
          properties:
            expectedArrivalAtPlaceOfDeliveryEndDate:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/expectedArrivalAtPlaceOfDeliveryEndDate'
        - type: object
          properties:
            transportDocumentTypeCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentTypeCode'
        - type: object
          properties:
            transportDocumentReference:
              type: string
              pattern: '^\S+(\s+\S+)*$'
              maxLength: 20
              # Extended description of transportDocumentReference compared to DCSA_DOMAIN description
              description: |
                A unique reference allocated by the shipping line to the Transport Document that the booking concerns.
              example: 'reserved-HHL123'
        - type: object
          properties:
            bookingChannelReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/bookingChannelReference'
        - type: object
          properties:
            incoTerms:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/incoTerms'
        - type: object
          properties:
            communicationChannelCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/communicationChannelCode'
        - type: object
          properties:
            isEquipmentSubstitutionAllowed:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isEquipmentSubstitutionAllowed'
        - type: object
          properties:
            preCarriageUnderShippersResponsibility:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/preCarriageModeOfTransportCode'
      required:
        - receiptTypeAtOrigin
        - deliveryTypeAtDestination
        - cargoMovementTypeAtOrigin
        - cargoMovementTypeAtDestination
        - isPartialLoadAllowed
        - isExportDeclarationRequired
        - isImportLicenseRequired
        - communicationChannelCode
        - isEquipmentSubstitutionAllowed

    bookingDeep:
      description: |
        The deep structure of the booking
      type: object
      allOf:
        - type: object
          properties:
            invoicePayableAt:
              type: object
              description: |
                General purpose object to capture `Invoice Payable At` location.
                
                The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
              example:
                locationName: "Eiffel Tower"
                UNLocationCode: "FRPAR"
              oneOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
              discriminator:
                propertyName: locationType
                mapping:
                  ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                  UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        - type: object
          properties:
            placeOfBLIssue:
              type: object
              description: |
                General purpose object to capture `Place of B/L Issue` location.
                
                The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
              example:
                locationName: "DCSA Headquarters"
                UNLocationCode: "NLAMS"
              oneOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
              discriminator:
                propertyName: locationType
                mapping:
                  ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                  UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        - $ref: '#/components/schemas/commodities'
        - $ref: '#/components/schemas/references'
        - $ref: '#/components/schemas/documentParties'
        # The below lines are for testing new documentParties structure
        # - type: object
        #   properties:
        #     documentParties_Response:
        #       $ref: '#/components/schemas/documentParties_Response'
        # - type: object
        #   properties:
        #     documentParties_Request:
        #       $ref: '#/components/schemas/documentParties_Request'
        - $ref: '#/components/schemas/shipmentLocations'
      required:
        - commodities

    bookingSummary:
      description: |
        Includes the information requested in a booking, service terms and types as well as the assigned booking reference by the carrier.
      type: object
      allOf:
        - $ref: '#/components/schemas/bookingRefStatus'
        - $ref: '#/components/schemas/bookingShallow'

    bookingRequest:
      description: |
        includes the information requested in a booking, service terms and types as well as the assigned booking reference by the carrier.
      type: object
      allOf:
        - $ref: '#/components/schemas/bookingShallow'
        - $ref: '#/components/schemas/bookingDeep'

    booking:
      description: |
        Includes the information requested in a booking, service terms and types as well as the assigned booking reference by the carrier.
      type: object
      allOf:
        - type: object
          properties:
            carrierBookingRequestReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierBookingRequestReference'
        - $ref: '#/components/schemas/bookingShallow'
        - $ref: '#/components/schemas/bookingDeep'
      required:
        - carrierBookingRequestReference

    bookingResponse:
      description: |
        includes the information requested in a booking, service terms and types as well as the assigned booking reference by the carrier.
      type: object
      allOf:
        - $ref: '#/components/schemas/bookingSummary'
        - $ref: '#/components/schemas/bookingDeep'

    bookingRefStatus:
      description: |
        The `carrierBookingRequestReference` along with the `bookingStatus` is returned
      type: object
      properties:
        carrierBookingRequestReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierBookingRequestReference'
        bookingStatus:
          $ref: '#/components/schemas/bookingStatus'
        bookingRequestDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/bookingRequestDateTime'
        bookingUpdatedDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/bookingUpdatedDateTime'
      required:
        - carrierBookingRequestReference
        - bookingStatus
        - bookingRequestDateTime
        - bookingUpdatedDateTime

    bookingRefCancelledStatus:
      description: |
        The `carrierBookingRequestReference` along with the `bookingStatus` is returned
      type: object
      properties:
        carrierBookingRequestReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierBookingRequestReference'
        bookingStatus:
          $ref: '#/components/schemas/bookingStatusCancelled'
        bookingRequestDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/bookingRequestDateTime'
        bookingUpdatedDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/bookingUpdatedDateTime'
      required:
        - carrierBookingRequestReference
        - bookingStatus
        - bookingRequestDateTime
        - bookingUpdatedDateTime


    #############################
    # Booking Confirmation object
    #############################


    shipmentSummary:
      description: |
        Shipment 'metadata'
      type: object
      allOf:
        - type: object
          properties:
            carrierBookingReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierBookingReference'
        - $ref: '#/components/schemas/bookingRefStatus'
        - type: object
          properties:
            termsAndConditions:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/termsAndConditions'
        - type: object
          properties:
            confirmationDateTime:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/confirmationDateTime'
      required:
        - carrierBookingReference

    shipment:
      description: |
        Shipment
      type: object
      allOf:
        - $ref: '#/components/schemas/shipmentSummary'
        - $ref: '#/components/schemas/bookingShallow'
        - $ref: '#/components/schemas/bookingDeep'
        - $ref: '#/components/schemas/transportPlan'
        - $ref: '#/components/schemas/shipmentCutOffTimes'
        - type: object
          properties:
            confirmedShipmentLocations:
              type: array
              minLength: 1
              items:
                $ref: '#/components/schemas/shipmentLocation'
        - $ref: '#/components/schemas/confirmedEquipments'
        - $ref: '#/components/schemas/advanceManifestFilings_BKG'
        - $ref: '#/components/schemas/charges'
        - $ref: '#/components/schemas/carrierClauses'
      required:
        - carrierBookingReference
        - booking
        - transportPlan


    ############################
    # Objects needed for booking
    ############################

    commodities:
      type: object
      properties:
        commodities:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/commodity'

    commodity:
      type: object
      description: |
        Type of goods in the booking, defined by its commodity type
      allOf:
        - type: object
          properties:
            commodityType:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/commodityType'
        - type: object
          properties:
            HSCodes:
              type: array
              minLength: 1
              description: |
                A list of `HS Codes` that apply to this `commodity`
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/HSCode'
        - type: object
          properties:
            cargoGrossWeight:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoGrossWeight'
        - type: object
          properties:
            cargoGrossWeightUnit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        - type: object
          properties:
            cargoGrossVolume:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoGrossVolume'
        - type: object
          properties:
            cargoGrossVolumeUnit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
        - type: object
          properties:
            exportLicenseIssueDate:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/exportLicenseIssueDate'
        - type: object
          properties:
            exportLicenseExpiryDate:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/exportLicenseExpiryDate'
        - $ref: '#/components/schemas/requestedEquipments'
        - type: object
          properties:
            outerPackaging:
              $ref: '#/components/schemas/outerPackaging'
        - $ref: '#/components/schemas/references'
      required:
        - commodityType
        - cargoGrossWeight
        - cargoGrossWeightUnit
        - requestedEquipments

    dangerousGoods_BKG:
      type: object
      description: |
        Specification for `Dangerous Goods`. It is mandatory to either provide the `unNumber` or the `naNumber`
      allOf:
        - $ref: '#/components/schemas/dangerousGoods_Base'
        - type: object
          properties:
            specialCertificateNumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/specialCertificateNumber'
        - type: object
          properties:
            additionalContainerCargoHandling:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/additionalContainerCargoHandling'
      required:
        - properShippingName
        - imoClass
        - isMarinePollutant
        - isLimitedQuantity
        - isExceptedQuantity
        - isSalvagePackings
        - isEmptyUncleanedResidue
        - isWaste
        - isHot
        - isCompetentAuthorityApprovalProvided
        - isReportableQuantity
        - emergencyContactDetails

    dangerousGoods_EBL:
      type: object
      description: |
        Specification for `Dangerous Goods`. It is mandatory to either provide the `unNumber` or the `naNumber`
      allOf:
        - $ref: '#/components/schemas/dangerousGoods_Base'
      required:
        - properShippingName
        - imoClass

    dangerousGoods_Base:
      type: object
      oneOf:
        - type: object
          title: UN Number
          properties:
            unNumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/unNumber'
          required:
            - unNumber
        - type: object
          title: NA Number
          properties:
            naNumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/naNumber'
          required:
            - naNumber
      properties:
        codedVariantList:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/codedVariantList'
        properShippingName:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/properShippingName'
        technicalName:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/technicalName'
        imoClass:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/imoClass'
        subsidiaryRisk1:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/subsidiaryRisk'
        subsidiaryRisk2:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/subsidiaryRisk'
        isMarinePollutant:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isMarinePollutant'
        packingGroup:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/packingGroup'
        isLimitedQuantity:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isLimitedQuantity'
        isExceptedQuantity:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isExceptedQuantity'
        isSalvagePackings:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isSalvagePackings'
        isEmptyUncleanedResidue:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isEmptyUncleanedResidue'
        isWaste:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isWaste'
        isHot:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isHot'
        isCompetentAuthorityApprovalProvided:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isCompetentAuthorityApprovalProvided'
        competentAuthorityApproval:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/competentAuthorityApproval'
        segregationGroups:
          type: array
          minLength: 1
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/segregationGroup'
        innerPackagings:
          type: array
          minLength: 1
          description: |
            A list of `Inner Packings` contained inside this `outer packaging/overpack`.
          items:
            $ref: '#/components/schemas/innerPackaging'
        emergencyContactDetails:
          $ref: '#/components/schemas/emergencyContactDetails'
        EMSNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/EMSNumber'
        endOfHoldingDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/endOfHoldingDateTime'
        fumigationDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/fumigationDateTime'
        isReportableQuantity:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isReportableQuantity'
        inhalationZone:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/inhalationZone'
        grossWeight:
          type: object
          description: |
            Total weight of the goods carried, including packaging.
          properties:
            value:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/dgGrossWeight'
            unit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
          required:
            - value
            - unit
        netWeight:
          type: object
          description: |
            Total weight of the goods carried, excluding packaging.
          properties:
            value:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/netWeight'
            unit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/netWeightUnit'
          required:
            - value
            - unit
        netExplosiveContent:
          type: object
          description: |
            The total weight of the explosive substances, without the packaging’s, casings, etc.
          properties:
            value:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/netExplosiveContent'
            unit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/netExplosiveContentUnit'
          required:
            - value
            - unit
        volume:
          type: object
          description: |
            The volume of the referenced dangerous goods.
            
            **Condition:** only applicable to liquids and gas.
          properties:
            value:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/dgVolume'
            unit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
        limits:
          $ref: '#/components/schemas/limits'
    
    limits:
      type: object
      description: |
        Limits for the Dangerous Goods. The same `Temperature Unit` needs to apply to all attributes in this structure.
      properties:
        temperatureUnit:
          type: string
          description: |
            The unit for **all attributes in the limits structure** in Celsius or Fahrenheit
            
            - CEL (Celsius)
            - FAH (Fahrenheit)
          enum:
            - CEL
            - FAH
          example: 'CEL'
        flashPoint:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/flashPoint'
        transportControlTemperature:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportControlTemperature'
        transportEmergencyTemperature:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportEmergencyTemperature'
        SADT:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sadt'
        SAPT:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sapt'
      required:
        - temperatureUnit

    emergencyContactDetails:
      type: object
      description: |
        24 hr emergency contact details
      properties:
        contact:
          type: string
          maxLength: 255
          description: |
            Name of the Contact person during an emergency.
          example: 'Henrik Larsen'
        provider:
          type: string
          maxLength: 255
          description: |
            Name of the third party vendor providing emergency support
          example: 'GlobeTeam'
        phone:
          allOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contactPhone'
        referenceNumber:
          type: string
          maxLength: 255
          description: |
            Contract reference for the emergency support provided by an external third party vendor.
          example: '12234'
      required:
        - contact
        - phone
    innerPackaging:
      type: object
      description: |
        Object for inner packaging specification
      properties:
        quantity:
          type: number
          description: |
            Count of `Inner Packagings` of the referenced `Dangerous Goods`.
          example: 20
        material:
          type: string
          maxLength: 100
          description: |
            The `material` used for the `Inner Packaging` of the referenced `Dangerous Goods`.
          example: 'Plastic'
        description:
          type: string
          maxLength: 100
          description: |
            Description of the packaging.
          example: 'Wowen plastic water resistant Bag'
      required:
        - quantity
        - material
        - description

    outerPackaging:
      type: object
      description: |
        Object for outer packaging/overpack specification. Examples of overpacks are a number of packages stacked on to a pallet and secured by strapping or placed in a protective outer packaging such as a box or crate to form one unit for the convenience of handling and stowage during transport. It is an array of the attributes below.
        
        In case of DG (Dangerous Goods) this object is required to specify.
      properties:
        numberOfPackages:
          type: integer
          format: int32
          minimum: 1
          # Extended description of numberOfPackages compared to DCSA_DOMAIN description
          description: |
            Specifies the number of outer packagings/overpacks associated with this `Commodity`.
          example: 18
        imoPackagingCode:
          type: string
          pattern: '^[A-Z0-9]{3}$'
          description: |
            The code of the packaging as per IMO.
            
            **Condition:** only applicable to dangerous goods if specified in the IMO IMDG code.
          example: 1A2
        unRecomemendation21PackingCode:
          type: string
          pattern: '^[A-Z0-9]{2}$'
          description: |
            The code of the packaging as per UN recommendation 21.
            
            **Condition:** only applicable to dangerous goods if the IMO packaging code is not available.
          example: 1A
        description:
          type: string
          maxLength: 100
          description: |
            Description of the packaging 
          example: Drum, steel
        dangerousGoods:
          type: array
          minLength: 1
          description: |
            A list of `Dangerous Goods` related to the `Commodity`
          items:
            $ref: '#/components/schemas/dangerousGoods_BKG'

    # Object used for the POST Shipping Instruction - here it is **not** possible to modify DG attributes
    # Compared to the outerPackaging of the Booking - this object also contains the `packageCode`
    outerPackaging_Shipper:
      type: object
      description: |
        Object for outer packaging/overpack specification. Examples of overpacks are a number of packages stacked on to a pallet and secured by strapping or placed in a protective outer packaging such as a box or crate to form one unit for the convenience of handling and stowage during transport. It is an array of the attributes below.
      properties:
        packageCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/packageCode'
        numberOfPackages:
          type: integer
          format: int32
          minimum: 1
          # Extended description of numberOfPackages compared to DCSA_DOMAIN description
          description: |
            Specifies the number of outer packagings/overpacks associated with this `Cargo Item`.
          example: 18
        description:
          type: string
          maxLength: 100
          description: |
            Description of the packaging 
          example: Drum, steel
      required:
        - packageCode
        - numberOfPackages

    # Object used for the GET SI (Shipping Instruction) - carrier echoes the `outerPackaging` including DG attibutes
    outerPackaging_Carrier:
      type: object
      description: |
        Object for outer packaging/overpack specification. Examples of overpacks are a number of packages stacked on to a pallet and secured by strapping or placed in a protective outer packaging such as a box or crate to form one unit for the convenience of handling and stowage during transport. It is an array of the attributes below.
      properties:
        packageCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/packageCode'
        numberOfPackages:
          type: integer
          format: int32
          minimum: 1
          # Extended description of numberOfPackages compared to DCSA_DOMAIN description
          description: |
            Specifies the number of outer packagings/overpacks associated with this `Cargo Item`.
          example: 18
        imoPackagingCode:
          type: string
          pattern: '^[A-Z0-9]{3}$'
          description: |
            The code of the packaging as per IMO.
            
            **Condition:** only applicable to dangerous goods if specified in the IMO IMDG code.
          example: 1A2
        unRecomemendation21PackingCode:
          type: string
          pattern: '^[A-Z0-9]{2}$'
          description: |
            The code of the packaging as per UN recommendation 21.
            
            **Condition:** only applicable to dangerous goods if the IMO packaging code is not available.
          example: 1A
        description:
          type: string
          maxLength: 100
          description: |
            Description of the packaging 
          example: Drum, steel
        dangerousGoods:
          type: array
          minLength: 1
          description: |
            A list of `Dangerous Goods`
          items:
            $ref: '#/components/schemas/dangerousGoods_EBL'
      required:
        - packageCode
        - numberOfPackages
    vessel:
      type: object
      description: |
        describes a floating, sea going structure (mother vessels and feeder vessels) with either an internal or external mode of propulsion designed for the transport of cargo and/or passengers. Ocean vessels are uniquely identified by an IMO number consisting of 7 digits, or alternatively by their AIS signal with an MMSI number. 
      properties:
        vesselIMONumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselIMONumber'
        vesselName:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselName'
        vesselFlag:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselFlag'
        vesselCallSignNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselCallSignNumber'
        vesselOperatorCarrierCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselOperatorCarrierCode'
        vesselOperatorCarrierCodeListProvider:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselOperatorCarrierCodeListProvider'
      required:
        - vesselIMONumber

    requestedEquipments:
      type: object
      properties:
        requestedEquipments:
          type: array
          minLength: 1
          description: |
            A list of `Requested Equipments` for this `Commodity`
          items:
            $ref: '#/components/schemas/requestedEquipment'

    socEquipment:
      type: object
      title: 'Shipper owned Equipment'
      properties:
        tareWeight:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/tareWeight'
        tareWeightUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        isShipperOwned:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isShipperOwned'
      required:
        - tareWeight
        - tareWeightUnit
        - isShipperOwned
      
    nonSocEquipment:
      type: object
      title: 'Carrier owned Equipment'
      properties:
        isShipperOwned:
          type: boolean
          description: 'Indicates whether the container is shipper owned (SOC).'
          # Extended example of isShipperOwned compared to DCSA_DOMAIN description (use false value)
          example: false
      required:
        - isShipperOwned

    requestedEquipment:
      type: object
      description: |
        The requested equipments for the booking. If needed - it is **only** possible to specify a single Reefer setting. If multiple settings are required for the same `equipmentSizeType` then multiple `requestedEquipment` should be specified (one for each Reefer setting).
      allOf:
        - type: object
          properties:
            ISOEquipmentCode:
              type: string
              pattern: '^\S+(\s+\S+)*$'
              maxLength: 4
              description: 'Unique code for the different equipment size/type used for transporting commodities. The code is a concatenation of ISO Equipment Size Code and ISO Equipment Type Code A and follows the ISO 6346 standard.'
              # Extended example of ISOEquipmentCode compared to DCSA_DOMAIN description (use Reefer code)
              example: '22RT'
        - type: object
          oneOf:
            - $ref: '#/components/schemas/socEquipment'
            - $ref: '#/components/schemas/nonSocEquipment'
          discriminator:
            propertyName: isShipperOwned
            mapping:
              true: '#/components/schemas/socEquipment'
              false: '#/components/schemas/nonSocEquipment'
        - type: object
          properties:
            units:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/requestedEquipmentUnits'
        - type: object
          properties:
            equipmentReferences:
              description: |
                A list of equipments to be used by the shipper if known at the time of booking
              type: array
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
        - type: object
          properties:
            isNonOperatingReefer:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isNonOperatingReefer'
        - type: object
          properties:
            activeReeferSettings:
              description: |
                The specifications for a Reefer equipment. This object is conditionally based on `isNonOperatingReefer` being set to `FALSE`. In case `isNonOperatingReefer` is set to `TRUE` this object will be **ignored**.
              allOf:
                - $ref: '#/components/schemas/activeReeferSettings_BKG'
              required:
                - temperatureSetpoint
                - temperatureUnit
        - $ref: '#/components/schemas/references'
      required:
        - ISOEquipmentCode
        - units

    activeReeferSettings:
      type: object
      properties:
        temperatureSetpoint:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/temperatureSetpoint'
        temperatureUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/temperatureUnit'
        o2Setpoint:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/o2Setpoint'
        co2Setpoint:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/co2Setpoint'
        humiditySetpoint:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/humiditySetpoint'
        airExchangeSetpoint:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/airExchangeSetpoint'
        airExchangeUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/airExchangeUnit'
        isVentilationOpen:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isVentilationOpen'
        isDrainholesOpen:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isDrainholesOpen'
        isBulbMode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isBulbMode'
        isColdTreatmentRequired:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isColdTreatmentRequired'
        isControlledAtmosphereRequired:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isControlledAtmosphereRequired'

    activeReeferSettings_BKG:
      type: object
      allOf:
        - $ref: '#/components/schemas/activeReeferSettings'
        - type: object
          properties:
            isPreCoolingRequired:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isPreCoolingRequired'
        - type: object
          properties:
            isGeneratorSetRequired:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isGeneratorSetRequired'

    confirmedEquipments:
      type: object
      properties:
        confirmedEquipments:
          type: array
          items:
            $ref: '#/components/schemas/confirmedEquipment'

    confirmedEquipment:
      type: object
      description: |
        The confirmed equipments for the booking
      properties:
        ISOEquipmentCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/ISOEquipmentCode'
        units:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/confirmedEquipmentUnits'
      required:
        - confirmedEquipmentSizeType
        - confirmedEquipmentUnits

    shipmentCutOffTimes:
      type: object
      properties:
        shipmentCutOffTimes:
          type: array
          items:
            $ref: '#/components/schemas/shipmentCutOffTime'

    shipmentCutOffTime:
      type: object
      description: |
        Cut off times
      properties:
        cutOffDateTimeCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cutOffDateTimeCode'
        cutOffDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cutOffDateTime'
      required:
        - cutOffDateTimeCode
        - cutOffDateTime

    ######################################
    # Shipping Instruction Related objects
    ######################################


    shippingInstructionShallow:
      description: |
        The part of the ShippingInstruction that contains simple fields (no nested objects)
      type: object
      allOf:
        - type: object
          properties:
            amendToTransportDocument:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/amendToTransportDocument'
        - type: object
          properties:
            transportDocumentTypeCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentTypeCode'
        - type: object
          properties:
            numberOfCopiesWithCharges:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfCopiesWithCharges'
        - type: object
          properties:
            numberOfCopiesWithoutCharges:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfCopiesWithoutCharges'
        - type: object
          properties:
            numberOfOriginalsWithCharges:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfOriginalsWithCharges'
        - type: object
          properties:
            numberOfOriginalsWithoutCharges:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfOriginalsWithoutCharges'
        - type: object
          properties:
            preCarriageUnderShippersResponsibility:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/preCarriageUnderShippersResponsibility'
        - type: object
          properties:
            invoicePayableAt:
              type: object
              description: |
                General purpose object to capture `Invoice Payable At` location specified as: location where payment by the customer will take place. Usually refers to Basic Ocean Freight alone.
                
                The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
              example:
                locationName: "Eiffel Tower"
                UNLocationCode: "FRPAR"
              oneOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
              discriminator:
                propertyName: locationType
                mapping:
                  ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                  UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        - type: object
          properties:
            isElectronic:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isElectronic'
        - type: object
          properties:
            isToOrder:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isToOrder'
        - type: object
          properties:
            displayedNameForPlaceOfReceipt:
              description: |
                The name to be used in order to specify how the `Place of Receipt` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
              type: array
              minItems: 1
              maxItems: 5
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        - type: object
          properties:
            displayedNameForPortOfLoad:
              description: |
                The name to be used in order to specify how the `Port of Load` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
              type: array
              minItems: 1
              maxItems: 5
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        - type: object
          properties:
            displayedNameForPortOfDischarge:
              description: |
                The name to be used in order to specify how the `Port of Discharge` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
              type: array
              minItems: 1
              maxItems: 5
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        - type: object
          properties:
            displayedNameForPlaceOfDelivery:
              description: |
                The name to be used in order to specify how the `Place of Delivery` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
              type: array
              minItems: 1
              maxItems: 5
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
      required:
        - transportDocumentTypeCode
        - isShippedOnBoardType
        - invoicePayableAt
        - isElectronic
        - isToOrder
    
    shippingInstructionSummary:
      description: |
        A 'shallow' representation of the Shipping Instruction. This version of the Shipping Instruction does not contain nested objects. For a 'rich' version of the Shipping Instruction please use the `GET` endPoint.
      type: object
      allOf:
        - $ref: '#/components/schemas/shippingInstructionRefStatus'
        - $ref: '#/components/schemas/shippingInstructionShallow'
        - $ref: '#/components/schemas/carrierBookingReferences'
      required:
        - shippingInstructionReference

    shippingInstructionRequest:
      description: |
        The Shipping Instruction is an enrichment to the original booking shared by the shipper to the carrier. The shipping instruction includes volume or weight, cargo items, shipping dates, origin, destination, and other special instructions. The information given by the shipper through the shipping instruction is the information required to create a Transport Document.
      type: object
      allOf:
        - $ref: '#/components/schemas/shippingInstructionShallow'
        # - type: object
        #   properties:
        #     carrierBookingReference:
        #       type: string
        #       pattern: '^\S+(\s+\S+)*$'
        #       maxLength: 35
        #       # Extended description of carrierBookingReference compared to DCSA_DOMAIN description
        #       description: |
        #         The associated booking number provided by the carrier. To be used if **all** `Consignment Items` belong to the same Booking.
                
        #         **Cannot** be used in combination with `Consignment Item` carrierBookingReference
        #       example: 'ABC709951'
        - type: object
          properties:
            placeOfIssue:
              type: object
              description: |
                General purpose object to capture where the original Transport Document (`Bill of Lading`) will be issued.
                
                The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
              example:
                locationName: "DCSA Headquarters"
                UNLocationCode: "NLAMS"
              oneOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
              discriminator:
                propertyName: locationType
                mapping:
                  ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                  UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        - $ref: '#/components/schemas/consignmentItems'
        - $ref: '#/components/schemas/utilizedTransportEquipments'
        - $ref: '#/components/schemas/documentParties'
        - $ref: '#/components/schemas/references'
        - $ref: '#/components/schemas/customsReferences'
        - $ref: '#/components/schemas/advanceManifestFilings_EBL'
      required:
        - consignmentItems
        - utilizedTransportEquipments
        
    shippingInstruction:
      description: |
        The Shipping Instruction is an enrichment to the original booking shared by the shipper to the carrier. The shipping instruction includes volume or weight, cargo items, shipping dates, origin, destination, and other special instructions. The information given by the shipper through the shipping instruction is the information required to create a Transport Document.
      type: object
      allOf:
        - type: object
          properties:
            shippingInstructionReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shippingInstructionReference'
        - $ref: '#/components/schemas/shippingInstructionRequest'

    shippingInstructionResponse:
      description: |
        The entire Shipping Instruction object with all nested objects.
      type: object
      allOf:
        - $ref: '#/components/schemas/shippingInstructionRefStatus'
        - $ref: '#/components/schemas/shippingInstructionShallow'
        # - type: object
        #   properties:
            # carrierBookingReference:
            #   type: string
            #   pattern: '^\S+(\s+\S+)*$'
            #   maxLength: 35
            #   # Extended description of carrierBookingReference compared to DCSA_DOMAIN description
            #   description: |
            #     The associated booking number provided by the carrier. To be used if **all** `Consignment Items` belong to the same Booking.
                
            #     **Cannot** be used in combination with `Consignment Item` carrierBookingReference
            #   example: 'ABC709951'
        - type: object
          properties:
            placeOfIssue:
              type: object
              description: |
                General purpose object to capture where the original Transport Document (`Bill of Lading`) will be issued.
                
                The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
              example:
                locationName: "DCSA Headquarters"
                UNLocationCode: "NLAMS"
              oneOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
              discriminator:
                propertyName: locationType
                mapping:
                  ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                  UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        - $ref: '#/components/schemas/consignmentItems_Carrier'
        - $ref: '#/components/schemas/utilizedTransportEquipments_Carrier'
        - $ref: '#/components/schemas/documentParties'
        - $ref: '#/components/schemas/references'
        - $ref: '#/components/schemas/customsReferences'
        - $ref: '#/components/schemas/advanceManifestFilings_EBL'
      required:
        - consignmentItems
        - utilizedTransportEquipments

    shippingInstructionRefStatus:
      description: |
        The `shippingInstructionReference` along with the `documentStatus`, created and updated timestamps is returned
      type: object
      allOf:
        - type: object
          properties:
            shippingInstructionReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shippingInstructionReference'
        - type: object
          properties:
            documentStatus:
              type: string
              description: |
                The status of the Bill of Lading. Possible values are:
                - RECE (Received)
                - PENU (Pending Update)
                - DRFT (Draft)
                - PENA (Pending Approval)
                - APPR (Approved)
                - ISSU (Issued)
                - SURR (Surrendered)
                - VOID (Void)
        
                More details can be found on <a href="https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `documentStatus`, the list is a subset of the possible values.
              enum:
                - RECE
                - PENU
                - DRFT
                - PENA
                - APPR
                - ISSU
                - SURR
                - VOID
              # Extended example of documentStatus to include value RECE
              example:
                RECE
      required:
        - shippingInstructionReference
        - documentStatus

    ############################
    # Cargo Item Related objects
    ############################
  
    cargoItems_Carrier:
      type: object
      properties:
        cargoItems:
          type: array
          minItems: 1
          description: |
            A list of all `cargoItems`
          items:
            $ref: '#/components/schemas/cargoItem_Carrier'

    cargoItem_Carrier:
      type: object
      description: |
        A `cargoItem` is the smallest unit used by stuffing. A `cargoItem` cannot be split across containers.
      allOf:
        - $ref: '#/components/schemas/shippingMarks'
        - type: object
          properties:
            equipmentReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
        - type: object
          properties:
            weight:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weight'
        - type: object
          properties:
            volume:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volume'
        - type: object
          properties:
            weightUnit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        - type: object
          properties:
            volumeUnit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
        - type: object
          properties:
            outerPackaging:
              $ref: '#/components/schemas/outerPackaging_Carrier'
      required:
        - equipmentReference
        - weight
        - weightUnit
        - outerPackaging

    cargoItems:
      type: object
      properties:
        cargoItems:
          type: array
          minItems: 1
          description: |
            A list of all `cargoItems`
          items:
            $ref: '#/components/schemas/cargoItem'

    cargoItem:
      type: object
      description: |
        A `cargoItem` is the smallest unit used by stuffing. A `cargoItem` cannot be split across containers.
      allOf:
        - $ref: '#/components/schemas/shippingMarks'
        - type: object
          properties:
            equipmentReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
        - type: object
          properties:
            weight:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weight'
        - type: object
          properties:
            volume:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volume'
        - type: object
          properties:
            weightUnit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        - type: object
          properties:
            volumeUnit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
        - type: object
          properties:
            outerPackaging:
              $ref: '#/components/schemas/outerPackaging_Shipper'
      required:
        - equipmentReference
        - weight
        - weightUnit
        - outerPackaging

    #################################
    # Shipping Marks Related objects
    #################################

    shippingMarks:
      type: object
      properties:
        shippingMarks: 
          type: array
          minItems: 1
          description: |
            List of `ShippingMarks`
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shippingMark'

    ###################
    # Consignment Items
    ###################

    consignmentItem_Base:
      type: object
      description: |
        Defines a list of `CargoItems` belonging together and the associated `Booking`. A `ConsignmentItem` can be split across multiple containers (`UtilizedTransportEquipment`) by referencing multiple `CargoItems`
      allOf:
        - type: object
          properties:
            carrierBookingReference:
              type: string
              pattern: '^\S+(\s+\S+)*$'
              maxLength: 35
              # Extended description of carrierBookingReference compared to DCSA_DOMAIN description
              description: |
                The associated booking number provided by the carrier for this `Consignment Item`.
                
                When multiple `carrierBookingReferences` are used then the bookings referred to must all contain the same:
                - transportPlan
                - shipmentLocations
                - receiptTypeAtOrigin
                - deliveryTypeAtDestination
                - cargoMovementTypeAtOrigin
                - cargoMovementTypeAtDestination
                - serviceContractReference
                - termsAndConditions
              example: 'ABC709951'
        - type: object
          properties:
            weight:
              type: number
              format: float
              minimum: 0
              exclusiveMinimum: true
              # Extended description of weight compared to DCSA_DOMAIN description
              description: |
                The total weight of all the `CargoItems` listed in the `ConsignmentItem`. Excludes the tare weight of the container(s).
              example: 13000.3
        - type: object
          properties:
            volume:
              type: number
              format: float
              minimum: 0
              exclusiveMinimum: true
              # Extended description of volume compared to DCSA_DOMAIN description
              description: |
                The total volume of all the `CargoItems` listed in the `ConsignmentItem`.
              example: 12.0
        - type: object
          properties:
            weightUnit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        - type: object
          properties:
            volumeUnit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
        - type: object
          properties:
            descriptionOfGoods:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/descriptionOfGoods'
        - type: object
          properties:
            HSCodes:
              type: array
              minLength: 1
              description: |
                A list of `HS Codes` that apply to this `consignmentItem`
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/HSCode'
        - $ref: '#/components/schemas/references'
        - $ref: '#/components/schemas/customsReferences'
      required:
        - weight
        - weightUnit
        - descriptionOfGoods
        - HSCodes
        - cargoItems

    consignmentItems_Carrier:
      type: object
      properties:
        consignmentItems:
          minItems: 1
          type: array
          description: |
            A list of `ConsignmentItems`.
          items:
            $ref: '#/components/schemas/consignmentItem_Carrier'

    consignmentItem_Carrier:
      type: object
      description: |
        Defines a list of `CargoItems` belonging together and the associated `Booking`. A `ConsignmentItem` can be split across multiple containers (`UtilizedTransportEquipment`) by referencing multiple `CargoItems`
      allOf:
        - $ref: '#/components/schemas/consignmentItem_Base'
        - $ref: '#/components/schemas/cargoItems_Carrier'
      required:
        - cargoItems

    consignmentItems:
      type: object
      properties:
        consignmentItems:
          minItems: 1
          type: array
          description: |
            A list of `ConsignmentItems`.
          items:
            $ref: '#/components/schemas/consignmentItem'

    consignmentItem:
      type: object
      description: |
        Defines a list of `CargoItems` belonging together and the associated `Booking`. A `ConsignmentItem` can be split across multiple containers (`UtilizedTransportEquipment`) by referencing multiple `CargoItems`
      allOf:
        - $ref: '#/components/schemas/consignmentItem_Base'
        - $ref: '#/components/schemas/cargoItems'
      required:
        - cargoItems

    ####################################
    # Shipment Equipment Related objects
    ####################################

    utilizedTransportEquipments_Carrier:
      type: object
      properties:
        utilizedTransportEquipments:
          type: array
          minItems: 1
          description: |
            A list of `Utilized Transport Equipments` describing the equipment being used.
          items:
            $ref: '#/components/schemas/utilizedTransportEquipment_Carrier'

    utilizedTransportEquipment_Carrier:
      type: object
      description: |
        Specifies the container (`equipment`), the total `weight`, total `volume`, `numberOfPacakges`, possible `ActiveReeferSettings` and the `seals` used
      allOf:
        - type: object
          properties:
            equipment:
              allOf:
                - $ref: '#/components/schemas/equipment'
        - type: object
          properties:
            cargoGrossWeight:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoGrossWeight'
        - type: object
          properties:
            cargoGrossWeightUnit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        - type: object
          properties:
            cargoGrossVolume:
              type: number
              format: float
              minimum: 0
              exclusiveMinimum: true
              # Extended description of cargoGrossVolume compared to DCSA_DOMAIN description
              description: |
                The grand total volume of the cargo per container, which can be expressed in imperial or metric terms, as provided by the carrier.
              example: 120.0
        - type: object
          properties:
            cargoGrossVolumeUnit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
        - type: object
          properties:
            numberOfPackages:
              type: integer
              format: int32
              minimum: 1
              # Extended description of numberOfPackages compared to DCSA_DOMAIN description
              description: |
                Specifies the number of packages associated with an equipment (container)
              example: 18
        - type: object
          properties:
            isShipperOwned:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isShipperOwned'
        - type: object
          properties:
            isNonOperatingReefer:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isNonOperatingReefer'
        - type: object
          properties:
            activeReeferSettings:
              description: |
                The specifications for a Reefer equipment. If this object is provided then the equipment linked to this Reefer object should be concidered an `Operated Reefer`.

                If not provided the equipment should be concidered a `Non Operated Reefer` in case the `ISOEquipmentCode` indicates a reefer container.
              allOf:
                - $ref: '#/components/schemas/activeReeferSettings'
        - $ref: '#/components/schemas/seals'
        - $ref: '#/components/schemas/references'
        - $ref: '#/components/schemas/customsReferences'
      required:
        - equipment
        - cargoGrossWeightUnit
        - cargoGrossWeight
        - isShipperOwned
        - seals


    utilizedTransportEquipments:
      type: object
      properties:
        utilizedTransportEquipments:
          type: array
          minItems: 1
          description: |
            A list of `Utilized Transport Equipments` describing the equipment being used.
          items:
            $ref: '#/components/schemas/utilizedTransportEquipment'

    utEquipment:
      type: object
      title: 'Shipper Owned Equipment (SoC)'
      description: |
        To be used for SoC (Shipper owned Containers). If `isShipperOwned` is true then the equipment used needs to be specified
      properties:
        isShipperOwned:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isShipperOwned'
        equipment:
          $ref: '#/components/schemas/equipment'
      required:
        - isShipperOwned
        - equipment
    
    utEquipmentReference:
      type: object
      title: 'Carrier Owned Equipment'
      description: |
        To be used when referring to carrier owned containers (`isShipperOwned` is false). In this case it is only necessary to provide `equipmentReference`
      properties:
        isShipperOwned:
          type: boolean
          description: 'Indicates whether the container is shipper owned (SOC).'
          # Extended example of isShipperOwned compared to DCSA_DOMAIN description (use false value)
          example: false
        equipmentReference:
          allOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
      required:
        - isShipperOwned
        - equipmentReference

    utilizedTransportEquipment:
      type: object
      description: |
        Specifies the container (`equipment`), the total weight and the `seals` used
      allOf:
        - type: object
          oneOf:
            - $ref: '#/components/schemas/utEquipment'
            - $ref: '#/components/schemas/utEquipmentReference'
          discriminator:
            propertyName: isShipperOwned
            mapping:
              true: '#/components/schemas/utEquipment'
              false: '#/components/schemas/utnonEquipment'
        - type: object
          properties:
            cargoGrossWeight:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoGrossWeight'
        - type: object
          properties:
            cargoGrossWeightUnit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        - type: object
          properties:
            cargoGrossVolume:
              type: number
              format: float
              example: 120.0
              minimum: 0
              exclusiveMinimum: true
              # Extended description of cargoGrossVolume compared to DCSA_DOMAIN description
              description: |
                The grand total volume of the cargo per container, which can be expressed in imperial or metric terms, as provided by the carrier.
        - type: object
          properties:
            cargoGrossVolumeUnit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
        - type: object
          properties:
            numberOfPackages:
              type: integer
              format: int32
              minimum: 1
              # Extended description of numberOfPackages compared to DCSA_DOMAIN description
              description: |
                Specifies the number of packages associated with an equipment (container)
              example: 18
        - $ref: '#/components/schemas/seals'
        - $ref: '#/components/schemas/references'
        - $ref: '#/components/schemas/customsReferences'
      required:
        - cargoGrossWeightUnit
        - cargoGrossWeight
        - seals

    ######################
    # Seal Related objects
    ######################

    seals:
      type: object
      properties:
        seals:
          type: array
          minLength: 1
          description: |
            A list of `Seals`
          items:
            $ref: '#/components/schemas/seal'
    seal:
      type: object
      description: |
        Addresses the seal-related information associated with the shipment equipment. A seal is put on a shipment equipment once it is loaded. This seal is meant to stay on until the shipment equipment reaches its final destination.
      properties:
        number:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sealNumber'
        source:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sealSource'
        type:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sealType'
      required:
        - number

    ################################
    # Document Party Related objects
    ################################

    carrierPartyReference:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 100
      description: |
        The carrier specific reference to a `Party`
      example: '1003000HHL'

    legalName:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 100
      description: |
        Legal name of the Party.
      example: 'IKEA'

    leiCode:
      type: string
      minLength: 20
      maxLength: 20
      pattern: '^[0-9A-Z]{18}[0-9]{2}$'
      description: |
        A Legal Entity Identifier (LEI), is a code that is unique to a legal entity such as a Limited Company, Fund or trust or any organisation.
      example: '89450073R2PZATKEBZ08'

    displayedAddress:
      description: |
        If switch to paper is needed then the `displayedAddress` object **MUST** be provided. In case it is missing it is not possible to switch the B/L to paper later in the process.
      type: array
      minItems: 1
      maxItems: 5
      items:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/addressLine'

    bookingParty:
      description: |
        A party handling the booking
      type: object
      allOf:
        - type: object
          properties:
            legalName:
              $ref: '#/components/schemas/legalName'
        - type: object
          properties:
            address:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/address'
      required:
        - legalName
        - address

    invoiceParty:
      description: |
        A party handling the invoice
      type: object
      allOf:
        - $ref: '#/components/schemas/bookingParty'
        - type: object
          properties:
            displayedAddress:
              $ref: '#/components/schemas/displayedAddress'

    notifyParty:
      description: |
        A party which is to be notified. A NotifyParty will always be notified about the arrival of the cargo.
      type: object
      allOf:
        - $ref: '#/components/schemas/invoiceParty'
        - type: object
          properties:
            partyContactDetails:
              description: |
                Contact information for a Party
              type: object
              properties:
                name:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contactName'
                phone:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contactPhone'
                email:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/email'
              required:
                - name
        - type: object
          properties:
            identifyingCodes:
              type: object
              description: |
                The identifying codes for the Party.
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
                leiCode:
                  $ref: '#/components/schemas/leiCode'
                taxLegalReferences:
                  type: array
                  description: |
                    A list of tax references for the `Party`
                  items:
                    $ref: '#/components/schemas/taxLegalReference'
      required:
        # - legalName
        # - address
        - partyContactDetails

    generalParty:
      description: |
        A general purpose party
      type: object
      allOf:
        - $ref: '#/components/schemas/notifyParty'
        - type: object
          properties:
            isToBeNotified:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isToBeNotified'
      required:
        - isToBeNotified
        
    specializedParty:
      description: |
        A specialized version of the general purpose party containing EBL Solution Provier information
      type: object
      allOf:
        - $ref: '#/components/schemas/generalParty'
        - type: object
          properties:
            identifyingCodes:
              properties:
                eblPlatformIdentifier:
                  type: string
                  maxLength: 100
                  pattern: '^\S+(\s+\S+)*$'
                  description: |
                    the ebl platform identifier
                  example: 'foo@wave.com'

    originalShipper:
      type: object
      description: |
        The original supplier of the goods.
      allOf:
        - $ref: '#/components/schemas/specializedParty'
      
    shipperForwardingAgent:
      type: object
      description: |
        Identification of freight forwarder giving services to the consignor (shipper).
      allOf:
        - $ref: '#/components/schemas/specializedParty'

    consignee:
      type: object
      description: |
        Party to which goods are consigned
      allOf:
        - $ref: '#/components/schemas/specializedParty'

    consigneeForwardingAgent:
      type: object
      description: |
        Identification of freight forwarder giving services to the consignee
      allOf:
        - $ref: '#/components/schemas/specializedParty'

    shipperInvoiceParty:
      type: object
      description: |
        Invoice payer is a third party acting on behalf of the consignor (shipper).
      allOf:
        - $ref: '#/components/schemas/invoiceParty'

    consigneeInvoiceParty:
      type: object
      description: |
        Invoice payer is a third party acting on behalf of the consignee.
      allOf:
        - $ref: '#/components/schemas/invoiceParty'

    carrierBookingOffice:
      type: object
      description: |
        The carrier office responsible for processing the booking
      allOf:
        - $ref: '#/components/schemas/bookingParty'

    serviceContractOwner:
      type: object
      description: |
        The party signing the service contract with the carrier
      allOf:
        - $ref: '#/components/schemas/generalParty'

    notifyPartyResponse:
      allOf:
        - $ref: '#/components/schemas/notifyParty'
        - $ref: '#/components/schemas/partyResponseRequired'

    envelopeReceiver:
      type: object
      description: |
        The `envelopeReceiver` is a party that will receive the eBL and additional documentation, but is not directly involved in the process (like a broker or forwarder)
      allOf:
        - $ref: '#/components/schemas/generalParty'

    partyResponseRequired:
      type: object
      properties:
        identifyingCodes:
          type: object
          description: |
            The identifying codes for the Party.
          properties:
            carrierPartyReference:
              $ref: '#/components/schemas/carrierPartyReference'
          required:
            - carrierPartyReference
      required:
        - identifyingCodes

    documentParties_Response:
      description: |
        Defines the parties involved. Either the `originalShipper` or the `shipperForwardingAgent` is mandatory to provide
      type: object
      oneOf:
        - type: object
          description: |
            The `originalShipper` is mandatory to provide, the `shipperForwardingAgent` is optional to provide in case both are needed
          properties:
            originalShipper:
              allOf:
                - $ref: '#/components/schemas/originalShipper'
                - $ref: '#/components/schemas/partyResponseRequired'
            shipperForwardingAgent:
              allOf:
                - $ref: '#/components/schemas/shipperForwardingAgent'
                - $ref: '#/components/schemas/partyResponseRequired'
          required:
            - originalShipper
        - type: object
          description: |
            The `shipperForwardingAgent` is mandatory to provide
          properties:
            shipperForwardingAgent:
              allOf:
                - $ref: '#/components/schemas/shipperForwardingAgent'
                - $ref: '#/components/schemas/partyResponseRequired'
          required:
            - shipperForwardingAgent
      allOf:
        - type: object
          properties:
            consignee:
              allOf:
                - $ref: '#/components/schemas/consignee'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            consigneeForwardingAgent:
              allOf:
                - $ref: '#/components/schemas/consigneeForwardingAgent'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            shipperInvoiceParty:
              allOf:
                - $ref: '#/components/schemas/shipperInvoiceParty'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            consigneeInvoiceParty:
              allOf:
                - $ref: '#/components/schemas/consigneeInvoiceParty'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            bookingParty:
              allOf:
                - $ref: '#/components/schemas/bookingParty'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            carrierBookingOffice:
              allOf:
                - $ref: '#/components/schemas/carrierBookingOffice'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            serviceContractOwner:
              allOf:
                - $ref: '#/components/schemas/serviceContractOwner'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            envelopeReceiver:
              allOf:
                - $ref: '#/components/schemas/envelopeReceiver'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            notifyParties:
              type: array
              description: |
                The party/parties which is to be notified. A NotifyParty will always be notified about the arrival of the cargo.
              items:
                allOf:
                  - $ref: '#/components/schemas/notifyPartyResponse'

    documentParties_Request:
      description: |
        Defines the parties involved. Either the `originalShipper` or the `shipperForwardingAgent` is mandatory to provide.
        
        For each party it is possible to either provide:
        
        - a reference to the Party defined by the carrier
        - specify the entire Party object
      type: object
      oneOf:
        - type: object
          description: |
            The `originalShipper` is mandatory to provide, the `shipperForwardingAgent` is optional to provide in case both are needed
          properties:
            originalShipper:
              oneOf:
                - type: object
                  properties:
                    carrierPartyReference:
                      $ref: '#/components/schemas/carrierPartyReference'
                  required:
                    - carrierPartyReference
                - $ref: '#/components/schemas/originalShipper'
            shipperForwardingAgent:
              oneOf:
                - type: object
                  properties:
                    carrierPartyReference:
                      $ref: '#/components/schemas/carrierPartyReference'
                  required:
                    - carrierPartyReference
                - $ref: '#/components/schemas/shipperForwardingAgent'
          required:
            - originalShipper
        - type: object
          description: |
            The `shipperForwardingAgent` is mandatory to provide
          properties:
            shipperForwardingAgent:
              oneOf:
                - type: object
                  properties:
                    carrierPartyReference:
                      $ref: '#/components/schemas/carrierPartyReference'
                  required:
                    - carrierPartyReference
                - $ref: '#/components/schemas/shipperForwardingAgent'
          required:
            - shipperForwardingAgent
      properties:
        consignee:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/consignee'
        consigneeForwardingAgent:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/consigneeForwardingAgent'
        shipperInvoiceParty:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/shipperInvoiceParty'
        consigneeInvoiceParty:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/consigneeInvoiceParty'
        bookingParty:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/bookingParty'
        carrierBookingOffice:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/carrierBookingOffice'
        serviceContractOwner:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/serviceContractOwner'
        # envelopeReceiver:
        #   oneOf:
            # - type: object
            #   properties:
            #     carrierPartyReference:
            #       $ref: '#/components/schemas/carrierPartyReference'
        #     - $ref: '#/components/schemas/envelopeReceiver'
        notifyParties:
          type: array
          description: |
            The party/parties which is to be notified.
          items:
            allOf:
              - type: object
                oneOf:
                  - type: object
                    properties:
                      carrierPartyReference:
                        $ref: '#/components/schemas/carrierPartyReference'
                    required:
                      - carrierPartyReference
                  - $ref: '#/components/schemas/notifyParty'

# - OS (Original shipper)
# - CN (Consignee)
# - COW (Invoice payer on behalf of the consignor (shipper))
# - COX (Invoice payer on behalf of the consignee)
        # - MS (Document/message issuer/sender)
# - N1 (First Notify Party)
# - N2 (Second Notify Party)
# - NI (Other Notify Party)
# - DDR (Consignor's freight forwarder)
# - DDS (Consignee's freight forwarder)
# - HE (Carrier booking office (transportation office)) - BookingParty
  # - SCO (Service contract owner - Defined by DCSA) - PartyNew
        # - BA (Booking Agency)
# - ENR (Envelope Receiver)


    documentParties:
      type: object
      properties:
        documentParties:
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/documentParty'
    
    documentParty:
      description: stores the parties involved in the transport document.
      type: object
      allOf:
        - type: object
          properties:
            party:
              allOf:
                - $ref: '#/components/schemas/party'
        - type: object
          properties:
            partyFunction:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/partyFunction'
        - type: object
          properties:
            partyContactDetails:
              type: array
              minItems: 1
              description: |
                The contact details of the person to contact in relation to the document (changes, notifications etc.).
              items:
                allOf:
                  - $ref: '#/components/schemas/partyContactDetail'
        - type: object
          properties:
            displayedAddress:
              description: |
                If switch to paper is needed then the `displayedAddress` object **MUST** be provided. In case it is missing it is not possible to switch the B/L to paper later in the process.
              type: array
              minItems: 1
              maxItems: 5
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/addressLine'
        - type: object
          properties:
            isToBeNotified:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isToBeNotified'
      required:
        - party
        - partyFunction
        - isToBeNotified

    #######################
    # Party Related objects
    #######################
  
    partyContactDetail:
      description: |
        Contact information for a Party
      type: object
      allOf:
        - type: object
          properties:
            name:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contactName'
        - type: object
          properties:
            phone:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contactPhone'
        - type: object
          properties:
            email:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/email'
      required:
        - name
    DCSAResponsibleAgencyCode:
      type: string
      description: |
        A DCSA provided code for [UN/CEFACT](https://unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred3055.htm) code list providers:
        - ISO (International Standards Organization)
        - UNECE (United Nations Economic Commission for Europe)
        - LLOYD (Lloyd's register of shipping)
        - BIC (Bureau International des Containeurs)
        - IMO (International Maritime Organization)
        - SCAC (Standard Carrier Alpha Code)
        - ITIGG (International Transport Implementation Guidelines Group)
        - ITU (International Telecommunication Union)
        - SMDG (Shipplanning Message Development Group)
        - EXIS (Exis Technologies Ltd.)
        - FMC (Federal Maritime Commission)
        - CBSA (Canada Border Services Agency)
        - DID (Decentralized Identifier)
        - LEI (Legal Entity Identifier)
        - EPI (EBL Platform Identifier)
        - ZZZ (Mutually defined)

        More details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/codelistresponsibleagencycodes.csv).
      enum:
        - ISO
        - UNECE
        - LLOYD
        - BIC
        - IMO
        - SCAC
        - ITIGG
        - ITU
        - SMDG
        - EXIS
        - FMC
        - CBSA
        - DID
        - LEI
        - EPI
        - ZZZ
      example: SMDG
    partyCode:
      type: string
      description: |
        Code to identify the party as provided by the agency
      maxLength: 100
      example: MSK
    codeListName:
      type: string
      description: |
        The name of the list, provided by the responsible agency
      maxLength: 100
      example: LCL
    party:
      description: 'refers to a company or a legal entity.'
      type: object
      allOf:
        - type: object
          properties:
            partyName:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/partyName'
        - type: object
          properties:
            address:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/address'
        - type: object
          properties:
            partyContactDetails:
              type: array
              minItems: 1
              description: |
                A list of contact details - the list cannot be empty
              items:
                allOf:
                  - $ref: '#/components/schemas/partyContactDetail'
        - type: object
          properties:
            identifyingCodes:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/identifyingCode'
        - $ref: '#/components/schemas/taxLegalReferences'
      required:
        - partyName
        - partyContactDetails
    identifyingCode:
      type: object
      allOf:
        - type: object
          properties:
            DCSAResponsibleAgencyCode:
              $ref: '#/components/schemas/DCSAResponsibleAgencyCode'
        - type: object
          properties:
            partyCode:
              $ref: '#/components/schemas/partyCode'
        - type: object
          properties:
            codeListName:
              $ref: '#/components/schemas/codeListName'
      required:
        - DCSAResponsibleAgencyCode
        - partyCode
    partyWithID:
      description: 'refers to a company or a legal entity.'
      type: object
      allOf:
        - type: object
          properties:
            partyID:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/partyID'
        - $ref: '#/components/schemas/party'

    ###################################
    # Shipment Location Related objects
    ###################################

    shipmentLocations:
      type: object
      properties:
        shipmentLocations:
          type: array
          items:
            $ref: '#/components/schemas/shipmentLocation'
    
    shipmentLocation:
      type: object
      description: |
        maps the relationship between Shipment and Location, e.g., the `Place of Receipt` and the `Place of Delivery` for a specific shipment. This is a reusable object between `Booking` and `Transport Document`
      properties:
        location:
          description: |
            General purpose object to capture the location in the `ShipmentLocation`.
            
            The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
          example:
            locationName: "CMP Container Terminal Copenhagen"
            UNLocationCode: "DKCPH"
            facilityCode: "CMPDK"
            facilityCodeListProvider: "SMDG"
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
              FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        locationTypeCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shipmentLocationTypeCode'
        eventDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/eventLocationDateTime'
      required:
        - location
        - locationTypeCode

    ###########################
    # Reference Related objects
    ###########################
  
    references:
      type: object
      properties:
        references:
          type: array
          minLength: 1
          description: |
            A list of `General Prurpose References`
          items:
            $ref: '#/components/schemas/reference'
    reference:
      type: object
      description: |
        References provided by the shipper or freight forwarder at the time of booking or at the time of providing shipping instruction. Carriers share it back when providing track and trace event updates, some are also printed on the B/L. Customers can use these references to track shipments in their internal systems.
      properties:
        type:
          $ref: '#/components/schemas/referenceType'
        value:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/referenceValue'
      required:
        - type
        - value
    referenceType:
      type: string
      description: |
        The reference type codes defined by DCSA.
        - FF (Freight Forwarder’s Reference)
        - SI (Shipper’s Reference)
        - SPO (Shippers Purchase Order Reference)
        - CPO (Consignees Purchase Order Reference)
        - CR (Customer’s Reference)
        - AAO (Consignee’s Reference)
        - ECR (Empty container release reference)
        - CSI (Customer shipment ID)
        - BPR (Booking party reference number)
        - BID (Booking Request ID)

        More details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/referencetypes.csv). Be aware that the list is a subset of the possible values.
      enum:
        - FF
        - SI
        - SPO
        - CPO
        - CR
        - AAO
        - ECR
        - CSI
        - BPR
        - BID
      example: FF


    ###########################
    # Customs Reference objects
    ###########################
  
    customsReferences:
      type: object
      properties:
        customsReferences:
          type: array
          minLength: 1
          description: |
            A list of `Customs references`
          items:
            $ref: '#/components/schemas/customsReference'
    customsReference:
      type: object
      description: |
        Reference associated with customs and/or excise purposes required by the relevant authorities for the import, export, or transit of the goods.

        A (small) list of examples:
        
        | Type  | Country | Description |
        |-------|:-------:|-------------|
        |ACID|EG|Advance Cargo Information Declaration in Egypt|
        |CERS|CA|Canadian Export Reporting System|
        |ITN|US|Internal Transaction Number in US|
        |PEB|ID|PEB reference number|
        |CSN|IN|Cargo Summary Notification (CSN)|
        
        Allowed combinations of `type` and `country` are maintained in [GitHub *{to be updated}*](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/customsreferences.csv).
      properties:
        type:
          $ref: '#/components/schemas/customsReferenceType'
        countryCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/countryCode'
        value:
          $ref: '#/components/schemas/customsReferenceValue'
      required:
        - type
        - countryCode
        - value
    customsReferenceType:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 50
      description: |
        The reference type code as defined in the relevant customs jurisdiction.
      example: 'ACID'
    customsReferenceValue:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 100
      description: |
        The value of the `customsReference`
      example: '4988470982020120017'


    #######################
    # Tax Reference objects
    #######################
  
    taxLegalReferences:
      type: object
      properties:
        taxLegalReferences:
          type: array
          minLength: 1
          description: |
            A list of `Tax References` for a `Party`
          items:
            $ref: '#/components/schemas/taxLegalReference'
    taxLegalReference:
      type: object
      description: |
        Reference that uniquely identifies a party for tax and/or legal purposes in accordance with the relevant jurisdiction.
        
        A list of examples:
        
        | Type  | Country | Description |
        |-------|:-------:|-------------|
        |PAN|IN|Goods and Services Tax Identification Number in India|
        |GSTIN|IN|Goods and Services Tax Identification Number in India|
        |IEC|IN|Importer-Exported Code in India|
        |RUC|EC|Registro Único del Contribuyente in Ecuador|
        |RUC|PE|Registro Único del Contribuyente in Peru|
        |NIF|MG|Numéro d’Identification Fiscal in Madagascar|
        |NIF|DZ|Numéro d’Identification Fiscal in Algeria|
        
        Allowed combinations of `type` and `country` are maintained in [GitHub *{to be updated}*](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/taxandlegalreferences.csv).
      properties:
        type:
          $ref: '#/components/schemas/taxLegalReferenceType'
        countryCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/countryCode'
        value:
          $ref: '#/components/schemas/taxLegalReferenceValue'
      required:
        - type
        - country
        - value
    taxLegalReferenceType:
      type: string
      pattern: '^\S+$'
      maxLength: 10
      description: |
        The reference type code as defined by the relevant tax and/or legal authority.
      example: 'PAN'
    taxLegalReferenceValue:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 100
      description: |
        The value of the `taxLegalReference`
      example: 'AAAAA0000A'


    #########################
    # Party Reference objects
    #########################
  
    partyReferences:
      type: object
      properties:
        partyReferences:
          type: array
          description: |
            A list of references identifying a `Party`
          items:
            $ref: '#/components/schemas/partyReference'
    partyReference:
      type: object
      description: |
        Reference associated with a provider to identify a Party.
      properties:
        provider:
          $ref: '#/components/schemas/partyReferenceProvider'
        reference:
          $ref: '#/components/schemas/partyReferenceReference'
      required:
        - provider
        - reference
    partyReferenceProvider:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 30
      description: |
        The provider 'owning' the reference to the `Party`.
      example: 'Hapag Lloyd'
    partyReferenceReference:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 100
      description: |
        The reference of the `provider` to the `Party`
      example: '4988470982020120017'


    ####################################
    # Transport Document Related objects
    ####################################

    transportDocumentRefStatus:
      type: object
      properties:
        transportDocumentReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentReference'
        # transportDocumentCreatedDateTime:
        #   $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentCreatedDateTime'
        # transportDocumentUpdatedDateTime:
        #   $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentUpdatedDateTime'
        documentStatus:
          type: string
          description: |
            The status of the Bill of Lading. Possible values are:
            - RECE (Received)
            - PENU (Pending Update)
            - DRFT (Draft)
            - PENA (Pending Approval)
            - APPR (Approved)
            - ISSU (Issued)
            - SURR (Surrendered)
            - VOID (Void)
    
            More details can be found on <a href="https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `documentStatus`, the list is a subset of the possible values.
          enum:
            - RECE
            - PENU
            - DRFT
            - PENA
            - APPR
            - ISSU
            - SURR
            - VOID
          # Extended example of documentStatus to include value PENA
          example:
            PENA

    transportDocumentRoot:
      type: object
      allOf:
        - type: object
          properties:
            transportDocumentReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentReference'
        # - type: object
        #   properties:
        #     transportDocumentCreatedDateTime:
        #       $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentCreatedDateTime'
        # - type: object
        #   properties:
        #     transportDocumentUpdatedDateTime:
        #       $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentUpdatedDateTime'
        - type: object
          properties:
            issueDate:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/issueDate'
        - type: object
          properties:
            shippedOnBoardDate:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shippedOnBoardDate'
        - type: object
          properties:
            receivedForShipmentDate:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/receivedForShipmentDate'
        - type: object
          properties:
            carrierCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCode'
        - type: object
          properties:
            carrierCodeListProvider:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCodeListProvider'
        - type: object
          properties:
            issuingParty:
              allOf:
                - $ref: '#/components/schemas/party'
        - type: object
          properties:
            numberOfRiderPages:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfRiderPages'
      required:
        - transportDocumentReference
        - carrierCode
        - carrierCodeListProvider
        - issuingParty

    transportDocumentSummary:
      description: |
        A 'shallow' representation of the Transport Document. This version of the Transport Document does not contain nested objects. For a 'rich' version of the Transport Document please use the `GET` endPoint.
      type: object
      allOf:
        - $ref: '#/components/schemas/transportDocumentRoot'
        - type: object
          properties:
            shippingInstructionReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shippingInstructionReference'
        - type: object
          properties:
            documentStatus:
              type: string
              description: |
                The status of the Bill of Lading. Possible values are:
                - RECE (Received)
                - PENU (Pending Update)
                - DRFT (Draft)
                - PENA (Pending Approval)
                - APPR (Approved)
                - ISSU (Issued)
                - SURR (Surrendered)
                - VOID (Void)
        
                More details can be found on <a href="https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `documentStatus`, the list is a subset of the possible values.
              enum:
                - RECE
                - PENU
                - DRFT
                - PENA
                - APPR
                - ISSU
                - SURR
                - VOID
              # Extended example of documentStatus to include value PENA
              example:
                PENA
        - $ref: '#/components/schemas/carrierBookingReferences'
      required:
        - shippingInstructionReference

    transportDocument:
      type: object
      description: |
        The document that governs the terms of carriage between shipper and carrier for maritime transportation. Two distinct types of transport documents exist:
        - Bill of Lading
        - Sea Waybill. 
      allOf:
        - type: object
          properties:
            transportDocumentReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentReference'
        - type: object
          properties:
            transportDocumentTypeCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentTypeCode'
        - type: object
          properties:
            documentStatus:
              type: string
              description: |
                The status of the Bill of Lading. Possible values are:
                - RECE (Received)
                - PENU (Pending Update)
                - DRFT (Draft)
                - PENA (Pending Approval)
                - APPR (Approved)
                - ISSU (Issued)
                - SURR (Surrendered)
                - VOID (Void)
        
                More details can be found on <a href="https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `documentStatus`, the list is a subset of the possible values.
              enum:
                - RECE
                - PENU
                - DRFT
                - PENA
                - APPR
                - ISSU
                - SURR
                - VOID
              # Extended example of documentStatus to include value PENA
              example:
                PENA
        # - type: object
        #   properties:
        #     transportDocumentCreatedDateTime:
        #       $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentCreatedDateTime'
        # - type: object
        #   properties:
        #     transportDocumentUpdatedDateTime:
        #       $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentUpdatedDateTime'
        - type: object
          properties:
            shippingInstructionReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shippingInstructionReference'
        - type: object
          properties:
            issueDate:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/issueDate'
        - type: object
          properties:
            shippedOnBoardDate:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shippedOnBoardDate'
        - type: object
          properties:
            receivedForShipmentDate:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/receivedForShipmentDate'
        - type: object
          properties:
            carrierCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCode'
        - type: object
          properties:
            carrierCodeListProvider:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCodeListProvider'
        - type: object
          properties:
            issuingParty:
              allOf:
                - $ref: '#/components/schemas/party'
        - type: object
          properties:
            numberOfRiderPages:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfRiderPages'
        - type: object
          properties:
            termsAndConditions:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/termsAndConditions'



        - type: object
          properties:
            receiptTypeAtOrigin:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/receiptTypeAtOrigin'
        - type: object
          properties:
            deliveryTypeAtDestination:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryTypeAtDestination'
        - type: object
          properties:
            cargoMovementTypeAtOrigin:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtOrigin'
        - type: object
          properties:
            cargoMovementTypeAtDestination:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtDestination'
        - type: object
          properties:
            serviceContractReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/serviceContractReference'
        - type: object
          properties:
            contractQuotationReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contractQuotationReference'
        - type: object
          properties:
            declaredValue:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/declaredValue'
        - type: object
          properties:
            declaredValueCurrency:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/declaredValueCurrency'




        - type: object
          properties:
            invoicePayableAt:
              type: object
              description: |
                General purpose object to capture `Invoice Payable At` location specified as: location where payment by the customer will take place. Usually refers to Basic Ocean Freight alone.
                
                The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
              example:
                locationName: "Eiffel Tower"
                UNLocationCode: "FRPAR"
              oneOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
              discriminator:
                propertyName: locationType
                mapping:
                  ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                  UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        - type: object
          properties:
            numberOfCopiesWithCharges:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfCopiesWithCharges'
        - type: object
          properties:
            numberOfCopiesWithoutCharges:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfCopiesWithoutCharges'
        - type: object
          properties:
            numberOfOriginalsWithCharges:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfOriginalsWithCharges'
        - type: object
          properties:
            numberOfOriginalsWithoutCharges:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfOriginalsWithoutCharges'
        - type: object
          properties:
            preCarriageUnderShippersResponsibility:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/preCarriageUnderShippersResponsibility'
        - type: object
          properties:
            isElectronic:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isElectronic'
        - type: object
          properties:
            isToOrder:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isToOrder'
        - type: object
          properties:
            displayedNameForPlaceOfReceipt:
              description: |
                The name to be used in order to specify how the `Place of Receipt` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
              type: array
              minItems: 1
              maxItems: 5
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        - type: object
          properties:
            displayedNameForPortOfLoad:
              description: |
                The name to be used in order to specify how the `Port of Load` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
              type: array
              minItems: 1
              maxItems: 5
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        - type: object
          properties:
            displayedNameForPortOfDischarge:
              description: |
                The name to be used in order to specify how the `Port of Discharge` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
              type: array
              minItems: 1
              maxItems: 5
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        - type: object
          properties:
            displayedNameForPlaceOfDelivery:
              description: |
                The name to be used in order to specify how the `Place of Delivery` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
              type: array
              minItems: 1
              maxItems: 5
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        # - type: object
        #   properties:
        #     carrierBookingReference:
        #       type: string
        #       pattern: '^\S+(\s+\S+)*$'
        #       maxLength: 35
        #       # Extended description of carrierBookingReference compared to DCSA_DOMAIN description
        #       description: |
        #         The associated booking number provided by the carrier. To be used if **all** `Consignment Items` belong to the same Booking.
                
        #         **Cannot** be used in combination with `Consignment Item` carrierBookingReference
        #       example: 'ABC709951'
        - type: object
          properties:
            placeOfIssue:
              type: object
              description: |
                General purpose object to capture where the original Transport Document (`Bill of Lading`) will be issued.
                
                The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
              example:
                locationName: "DCSA Headquarters"
                UNLocationCode: "NLAMS"
              oneOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
              discriminator:
                propertyName: locationType
                mapping:
                  ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                  UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        - $ref: '#/components/schemas/consignmentItems_Carrier'
        - $ref: '#/components/schemas/utilizedTransportEquipments_Carrier'
        - $ref: '#/components/schemas/documentParties'
        - type: object
          properties:
            transportLeg:
              type: object
              properties:
                vesselName:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselName'
                carrierServiceCode:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierServiceCode'
                universalServiceReference:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalServiceReference'
                carrierImportVoyageNumber:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierImportVoyageNumber'
                universalImportVoyageReference:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalImportVoyageReference'
                carrierExportVoyageNumber:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierExportVoyageNumber'
                universalExportVoyageReference:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalExportVoyageReference'
                loadLocation:
                  $ref: '#/components/schemas/loadLocation'
                dischargeLocation:
                  $ref: '#/components/schemas/loadLocation'
              required:
                - vesselName
                - carrierImportVoyageNumber
                - carrierExportVoyageNumber
                - loadLocation
                - dischargeLocation
        - type: object
          properties:
            transports:
              type: object
              properties:
                plannedArrivalDate:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/plannedArrivalDate'
                plannedDepartureDate:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/plannedDepartureDate'
                preCarriedBy:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/modeOfTransport'
                placeOfReceipt:
                  $ref: '#/components/schemas/placeOfReceipt'
                portOfLoading:
                  $ref: '#/components/schemas/portOfLoading'
                portOfDischarge:
                  $ref: '#/components/schemas/portOfDischarge'
                placeOfDelivery:
                  $ref: '#/components/schemas/placeOfDelivery'
                onwardInlandRouting:
                  $ref: '#/components/schemas/onwardInlandRouting'
              required:
                - plannedArrivalDate
                - plannedDepartureDate
                - portOfLoading
                - portOfDischarge
        - $ref: '#/components/schemas/references'
        - $ref: '#/components/schemas/customsReferences'
        - $ref: '#/components/schemas/charges'
        - $ref: '#/components/schemas/carrierClauses'
      required:
        - transportDocumentReference
        - transportDocumentTypeCode
        - isElectronic
        - isToOrder
        - receiptTypeAtOrigin
        - deliveryTypeAtDestination
        - cargoMovementTypeAtOrigin
        - cargoMovementTypeAtDestination
        - termsAndConditions
        - carrierCode
        - carrierCodeListProvider
        - invoicePayableAt
        - transports
        - consignmentItems
        - utilizedTransportEquipments
        - shippingInstruction
        - issuingParty
        - shippingInstructionReference
        - documentStatus
        - transportLeg
    
    ##########################################
    # Advance Manifest Filing Related objects
    ##########################################

    advanceManifestFilings_BKG:
      type: object
      properties:
        advanceManifestFilings:
          type: array
          minLength: 1
          description: |
            A list of `Advance Manifest Filings` provided by the carrier
          items:
            $ref: '#/components/schemas/advanceManifestFiling_BKG'
    
    advanceManifestFilings_EBL:
      type: object
      properties:
        advanceManifestFilings:
          type: array
          minLength: 1
          description: |
            A list of `Advance Manifest Filings` specified by the Shipper to indicate whom is to do the Filing
          items:
            $ref: '#/components/schemas/advanceManifestFiling_EBL'
    
    advanceManifestFiling_BKG:
      type: object
      description: |
        An Advance Maifest Filing defined by a Manifest type code in combination with a country code. Some examples
        
        A list of `manifestTypeCodes` together with `countryCode` is maintained in [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/filingsystems.csv). A (small) subset can be seen here:
        
        | manifestTypeCode | countryCode | Description |
        |-----------------------|:-------------:|-------------|
        |ACI|EG|Advance Cargo Information in Egypt|
        |ACE|US|Automated Commercial Environment in the United States|
        |AFR|JP|Cargo Summary Notification (CSN)|
      properties:
        manifestTypeCode:
          $ref: '#/components/schemas/manifestTypeCode'
        countryCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/countryCode'
      example:
        maifestTypeCode: ACE
        countryCode: US
      required:
        - manifestTypeCode
        - countryCode
    advanceManifestFiling_EBL:
      type: object
      allOf:
        - $ref: '#/components/schemas/advanceManifestFiling_BKG'
        - type: object
          oneOf:
            - $ref: '#/components/schemas/advanceManifestFilingsHouseBLPerformedByCarrier'
            - $ref: '#/components/schemas/advanceManifestFilingsHouseBLPerformedByShipper'
          discriminator:
            propertyName: advanceManifestFilingsHouseBLPerformedBy
            mapping:
              CARRIER: '#/components/schemas/advanceManifestFilingsHouseBLPerformedByCarrier'
              SHIPPER: '#/components/schemas/advanceManifestFilingsHouseBLPerformedByShipper'
    advanceManifestFilingsHouseBLPerformedByCarrier:
      type: object
      title: 'Advanced Manifest Filings House B/L performed by Carrier'
      description: |
        The `Advanced Manifest Filings House B/L` is performed by the **Carrier**
      properties:
        advanceManifestFilingsHouseBLPerformedBy:
          type: string
          description: |
            Indicates whether the shipper (`SHIPPER`) will perform the advance manifest filing(s) for the House BL directly or if the carrier (`CARRIER`) should file them on their behalf. Allowed values are:
            
            - `SHIPPER` (the shipper does the filing)
            - `CARRIER` (the carrier does the filing)
            
            In case this should be done by the carrier - `CARRIER` should be chosen
          enum:
            - CARRIER
          example: 'CARRIER'
      required:
        - advanceManifestFilingsHouseBLPerformedBy
    advanceManifestFilingsHouseBLPerformedByShipper:
      type: object
      title: 'Advanced Manifest Filings House B/L performed by Shipper'
      description: |
        The `Advanced Manifest Filings House B/L` is performed by the **Shipper**
      properties:
        advanceManifestFilingsHouseBLPerformedBy:
          type: string
          description: |
            Indicates whether the shipper (`SHIPPER`) will perform the advance manifest filing(s) for the House BL directly or if the carrier (`CARRIER`) should file them on their behalf. Allowed values are:
            
            - `SHIPPER` (the shipper does the filing)
            - `CARRIER` (the carrier does the filing)
            
            In case of self-filing (`SHIPPER`), the shipper must provide their `selfFilerCode` for each manifest.
          enum:
            - SHIPPER
          example: 'SHIPPER'
        selfFilerCode:
          $ref: '#/components/schemas/selfFilerCode'
      required:
        - advanceManifestFilingsHouseBLPerformedBy
        - selfFilerCode

    manifestTypeCode:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 10
      description: |
        The Manifest type code as defined by the provider. A list of `manifestTypeCodes` together with `countryCode` is maintained in [GitHub (to be created)]()
      example: 'ACE'

    selfFilerCode:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 100
      description: |
        Code identifying the party who will submit the advance manifest filing(s) for the House BL. 
        
        Mandatory if `manifestTypeCode` is either `ACE` (US) or (ACI) `Canada`
      example: 'FLXP'

    ########################
    # Charge Related objects
    ########################

    charges:
      type: object
      properties:
        charges:
          type: array
          maxLength: 1
          description: |
            A list of `Charges`
          items:
            $ref: '#/components/schemas/charge'
  
    charge:
      type: object
      description: |
        addresses the monetary value of freight and other service charges for a transport document.
      properties:
        chargeType:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/chargeType'
        currencyAmount:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/currencyAmount'
        currencyCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/currencyCode'
        paymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/paymentTermCode'
        calculationBasis:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/calculationBasis'
        unitPrice:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/unitPrice'
        quantity:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/quantity'
      required:
        - chargeType
        - currencyAmount
        - currencyCode
        - paymentTermCode
        - calculationBasis
        - unitPrice
        - quantity

    ########################
    # Clause Related objects
    ########################

    carrierClauses:
      type: object
      properties:
        carrierClauses:
          type: array
          maxLength: 1
          description: |
            Additional clauses for a specific shipment added by the carrier to the Bill of Lading, subject to local rules / guidelines or certain mandatory information required to be shared with the customer.
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/clauseContent'


    ################################
    # Transport Plan Related objects
    ################################

    transportPlan:
      type: object
      properties:
        transportPlan:
          type: array
          description: |
            A list of `transport` objects describing the entire transport plan including transshipments.
          items:
            $ref: '#/components/schemas/transport'

    transport:
      type: object
      description: |
        A list of `transport` objects sorted by ShipmentTransport sequenceNumber
      properties:
        transportPlanStage:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportPlanStage'
        transportPlanStageSequenceNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportPlanStageSequenceNumber'
        loadLocation:
          $ref: '#/components/schemas/loadLocation'
        dischargeLocation:
          $ref: '#/components/schemas/dischargeLocation'
        plannedDepartureDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/plannedDepartureDate'
        plannedArrivalDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/plannedArrivalDate'
        modeOfTransport:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/modeOfTransport'
        vessel:
          type: object
          properties:
            vesselName:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselName'
            vesselIMONumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselIMONumber'
          required:
            - vesselName
        carrierSerivceCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierServiceCode'
        universalServiceReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalServiceReference'
        carrierImportVoyageNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierImportVoyageNumber'
        universalImportVoyageReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalImportVoyageReference'
        carrierExportVoyageNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierExportVoyageNumber'
        universalExportVoyageReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalExportVoyageReference'
        isUnderShippersResponsibility:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isUnderShippersResponsibility'
      required:
        - transportPlanStage
        - transportPlanStageSequenceNumber
        - loadLocation
        - dischargeLocation
        - plannedDepartureDate
        - plannedArrivalDate

    loadLocation:
      description: |
        General purpose object to capture the `Load Location`.
        
        The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
      example:
        locationName: "Shanghai Shengdong International Container Terminal"
        UNLocationCode: "CNSGH"
        facilityCode: "SHENG"
        facilityCodeListProvider: "SMDG"
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
    dischargeLocation:
      description: |
        General purpose object to capture the `Discharge Location`.
        
        The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
      example:
        locationName: "Transnet Port Terminals Cape Town"
        UNLocationCode: "ZACPT"
        facilityCode: "TNCT"
        facilityCodeListProvider: "SMDG"
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'

    ############################
    # Transports related objects
    ############################


    preCarriageFrom:
      description: |
        General purpose object to capture `Pre Carriage from` location specified as the start location of the inland movement that takes place prior to the container(s) being delivered to the place of receipt/port of loading for account and risk of merchant (merchant haulage).
        
        The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
      example:
        locationName: "Hamburg"
        UNLocationCode: "DEHAM"
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'

    placeOfReceipt:
      description: |
        General purpose object to capture `Place of Receipt` location specified as: the location where the cargo is handed over by the shipper, or his agent, to the shipping line. This indicates the point at which the shipping line takes on responsibility for carriage of the container.
        
        **Condition:** Only when pre-carriage is done by the carrier.
        
        The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
      example:
        locationName: "Hamburg"
        UNLocationCode: "DEHAM"
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'

    portOfLoading:
      description: |
        General purpose object to capture `Port of Loading` location specified as: the location where the cargo is loaded onto a first sea-going vessel for water transportation.
        
        The location can be specified in **one** of the following ways: `UN Location Code` or `Facility`.
      example:
        locationName: "Hamburg"
        UNLocationCode: "DEHAM"
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'

    portOfDischarge:
      description: |
        General purpose object to capture `Port of Discharge` location specified as: the location where the cargo is discharged from the last sea-going vessel.
        
        The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
      example:
        locationName: "Hamburg"
        UNLocationCode: "DEHAM"
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'

    placeOfDelivery:
      description: |
        General purpose object to capture `Place of Delivery` location specified as: the location where the cargo is handed over to the consignee, or his agent, by the shipping line and where responsibility of the shipping line ceases.
        
        **Condition:** Only when onward transport is done by the carrier
        
        The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
      example:
        locationName: "Hamburg"
        UNLocationCode: "DEHAM"
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'

    onwardInlandRouting:
      description: |
        General purpose object to capture `Onward Inland Routing` location specified as the end location of the inland movement that takes place after the container(s) being delivered to the port of discharge/place of delivery for account and risk of merchant (merchant haulage).
        
        The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
      example:
        locationName: "Hamburg"
        UNLocationCode: "DEHAM"
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'


    ###########################
    # Equipment Related objects
    ###########################


    equipment:
      type: object
      description: |
        Used for storing cargo in/on during transport. The equipment size/type is defined by the ISO 6346 code. The most common equipment size/type is 20'/40'/45' DRY Freight Container, but several different versions exist.
      properties:
        equipmentReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
        ISOEquipmentCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/ISOEquipmentCode'
        tareWeight:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/tareWeight'
        weightUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
      required:
        - equipmentReference

    ################
    # Arrival Notice
    ################
    
    arrivalNotice:
      type: object
      description: |
        Notification on the estimated arrival time of the shipment for the consignee to initiate customs clearance and other import procedures.
      properties:
        # arrivalNoticeReference:
        #   $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/arrivalNoticeReference'
        etaAtPlaceOfDeliveryDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/etaAtPlaceOfDeliveryDateTime'
        etaAtPortOfDischargeDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/etaAtPortOfDischargeDateTime'
        freetime:
          type: array
          description: |
            List of freetime applicable to this shipment at destination.
          items:
            type: object
            properties:
              freetimeTypeCode:
                type: string
                description: |
                  Description of the freetime type applied. It can be one of the following codes:
                  - DET (Detention)
                  - DEM (Demurrage)
                  - PDM (Per Diem)
                  - STO (Storage)
                  
                  For a complete list of supported `freetimeTypeCodes` please visit [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/freetimetypecodes.csv).
                example: 'DET'
              isoEquipmentCode:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/ISOEquipmentCode'
              modeOfTransportCode:
                type: string
                description: |
                  The mode of transport for which the freetime object appllies to as defined by DCSA. Can be one of the following values:
                  - VESSEL
                  - RAIL
                  - TRUCK
                  - BARGE
                  
                  For a complete list of supported `modeOfTransportCodes` please visit [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/modeoftransportcodes.csv).
                example: 'VESSEL'
              quantity:
                type: number
                description: |
                  The number of units for which this freetime item applies.
              unitOfMeasure:
                type: string
                description: |
                  The unit used for the corresponding freetime item, such as calendar days, working days. Can be one of the following values:
                  - CD (Calendar Days)
                  - WD (Working Days)
                  - HR (Hours)
                  - DOD (Day of discharge)
                  
                  For a complete list of supported `unitOfMeasure` please visit [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/unitofmeasures.csv).
                example: 'WOR'
              calculationBasis:
                type: string
                pattern: '^\S+(\s+\S+)*$'
                maxLength: 1000
                description: |
                  Description of the conditions under which this freetime item applies. It can include reference to carrier website or individual charge as per service contract/agreement.
                example: 'Please see...'
            required:
              - freetimeTypeCode
              - isoEquipmentCode
              - quantity
              - unitOfMeasure
              - calculationBasis
        pickupLocation:
          type: object
          description: |
            General purpose object to capture `Pick-up` location specified as: specific equipment handling facility where container is to be picked up by the consignee or its logistics partners.
            
            The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
          example:
            locationName: "HHLA Altenwerder, Hamburg"
            UNLocationCode: "DEHAM"
            facilityCode: 'CTA'
            facilityCodeListProvider: 'SMDG'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
              FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        returnLocation:
          description: |
            General purpose object to capture `Return` location specified as: specific equipment handling facility where container is to be returned by the consignee.
            
            The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
            
            **Condition:** only applicable if there are Carrier Owned Containers (no SOC).
          example:
            locationName: "Hamburg"
            UNLocationCode: "DEHAM"
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
              FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        returnDescription:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/returnDescription'
        customsImportDeclarationProcedure:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/customsImportDeclarationProcedure'
        additionalInformation:
          type: string
          pattern: '^\S+(\s+\S+)*$'
          maxLength: 500
          description: |
            Free text field to provide additional required information for the consignee to prepare for the shipment arrival e.g. additional required documents to prepare and present for shipment release – country specific.
          example: 'Please also provide...'
        carrierContactInformation:
          $ref: '#/components/schemas/partyContactDetail'
        transportDocument:
          type: object
          properties:
            transportDocumentReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentReference'
            transportDocumentTypeCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentTypeCode'
            isElectronic:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isElectronic'
            deliveryTypeAtDestination:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryTypeAtDestination'
            cargoMovementTypeAtDestination:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtDestination'
            vessel:
              type: object
              properties:
                name:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselName'
                flag:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselFlag'
                vesselIMONumber:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselIMONumber'
              required:
                - name
            carrierImportVoyageNumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierImportVoyageNumber'
            universalImportVoyageReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalImportVoyageReference'
            termsAndConditions:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/termsAndConditions'
            carrierCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCode'
            carrierCodeListProvider:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCodeListProvider'
            transports:
              type: object
              properties:
                plannedArrivalDate:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/plannedArrivalDate'
                departureDate:
                  type: string
                  format: date-time
                  description: |
                    The date of departure from the location where the cargo is handed over by the shipper, or his agent, to the shipping line. This can refer either to the Place of Receipt or the Port of Loading. 
                  example: '2021-11-03T09:41:00-08:30'
                placeOfReceipt:
                  $ref: '#/components/schemas/placeOfReceipt'
                portOfLoading:
                  $ref: '#/components/schemas/portOfLoading'
                portOfDischarge:
                  $ref: '#/components/schemas/portOfDischarge'
                placeOfDelivery:
                  $ref: '#/components/schemas/placeOfDelivery'
              required:
                - plannedArrivalDate
                - departureDate
                - portOfLoading
                - portOfDischarge
            charges:
              $ref: '#/components/schemas/arnCharge'
            invoicePayableAt:
              description: |
                General purpose object to capture `Invoice Payable At` location. The location can be specified in **any** of the following ways: `UN Location Code` or an `Address`.
              example:
                locationName: "Eiffel Tower"
                UNLocationCode: "FRPAR"
              oneOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
              discriminator:
                propertyName: locationType
                mapping:
                  ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
                  UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
            carrierClauses:
              type: array
              maxLength: 1
              description: |
                Additional clauses for a specific shipment added by the carrier to the Bill of Lading, subject to local rules / guidelines or certain mandatory information required to be shared with the customer.
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/clauseContent'
            documentParties:
              type: array
              items:
                $ref: '#/components/schemas/documentParty'
            utilizedTransportEquipments:
              type: array
              minItems: 1
              description: |
                A list of `Utilized Transport Equipments` describing the equipment being used.
              items:
                type: object
                properties:
                  equipmentReference:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
                  cargoGrossWeight:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoGrossWeight'
                  cargoGrossWeightUnit:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
                  isoEquipmentCode:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/ISOEquipmentCode'
                  emptyIndicatorCode:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/emptyIndicatorCode'
                  sealNumbers:
                    type: array
                    minItems: 1
                    items:
                      $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sealNumber'
                required:
                  - equipmentReference
                  - cargoGrossWeight
                  - cargoGrossWeightUnit
                  - emptyIndicatorCode
                  - sealNumbers
            consignmentItems:
              type: array
              minItems: 1
              items:
                type: object
                properties:
                  carrierBookingReference:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierBookingReference'
                  weight:
                    type: number
                    format: float
                    minimum: 0
                    exclusiveMinimum: true
                    # Extended description of weight compared to DCSA_DOMAIN description
                    description: |
                      The total weight of all the `CargoItems` listed in the `ConsignmentItem`. Excludes the tare weight of the container(s).
                    example: 13000.3
                  volume:
                    type: number
                    format: float
                    minimum: 0
                    exclusiveMinimum: true
                    # Extended description of weight compared to DCSA_DOMAIN description
                    description: |
                      The total volume of all the `CargoItems` listed in the `ConsignmentItem`.
                    example: 12.0
                  weightUnit:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
                  volumeUnit:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
                  descriptionOfGoods:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/descriptionOfGoods'
                  HSCodes:
                    type: array
                    minLength: 1
                    description: |
                      A list of `HS Codes` that apply to this `consignmentItem`
                    items:
                      $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/HSCode'
                  cargoItems:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        shippingMarks:
                          type: array
                          minItems: 1
                          description: |
                            List of `ShippingMarks`
                          items:
                            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shippingMark'
                        equipmentReference:
                          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
                        numberOfPackages:
                          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfPackages'
                      required:
                        - equipmentReference
                        - numberOfPackages
                required:
                  - carrierBookingReference
                  - weight
                  - weightUnit
                  - descriptionOfGoods
                  - HSCode
                  - cargoItems
          required:
            - transportDocumentReference
            - transportDocumentTypeCode
            - isElectronic
            - receiptTypeAtOrigin
            - deliveryTypeAtDestination
            - cargoMovementTypeAtOrigin
            - cargoMovementTypeAtDestination
            - vessel
            - termsAndConditions
            - carrierCode
            - carrierCodeListProvider
            - issueDate
            - placeOfIssue
            - invoicePayableAt
            - transportPlan
            - utilizedTransportEquipments
      required:
        - arrivalNoticeReference
        - etaAtPlaceOfDeliveryDateTime
        - etaAtPortOfDischargeDateTime
        - carrierContactInformation
        - transportDocument
      
    arnCharge:
      type: object
      description: |
        Addresses the monetary value of freight and other service charges for a transport document.
      allOf:
        - $ref: '#/components/schemas/charge'
        - type: object
          properties:
            invoiceReference:
              $ref: '#/components/schemas/invoiceReference'

    ######################
    # Delivery Instruction
    ######################
    
    deliveryInstruction:
      type: object
      description: |
        `Delivery Instructions` sent to the carrier.
        
        **TODO**
      properties:
        deliveryInstructionReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryInstructionReference'

    ################
    # Delivery Order
    ################
    
    deliveryOrder:
      type: object
      description: |
        Instructions for the `Delivery Order`
        
        **TODO**
      properties:
        deliveryOrderReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryOrderReference'
        additionalInformation:
          type: string
          pattern: '^\S+(\s+\S+)*$'
          maxLength: 500
          description: |
            Free text field to provide additional required information for the haulier to prepare operational delivery of a shipment to the consignee – country specific.
          example: 'Please also provide...'
        repleaseParty:
          $ref: '#/components/schemas/party'
        transportDocumentReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentReference'
        carrierCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCode'
        carrierCodeListProvider:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCodeListProvider'
        utilizedTransportEquipments:
          type: array
          minItems: 1
          description: |
            A list of `Utilized Transport Equipments` describing the equipment being used.
          items:
            type: object
            properties:
              equipmentReference:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
              totalContainerWeight:
                type: number
                minimum: 0
                description: |
                  Includes Cargo Gross Weight plus Container Tare Weight. It is populated based on data in the fields cargo gross weight and container tare weight.
                example: 10783
              totalContainerWeightUnit:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
            required:
              - equipmentReference
        pickupLocation:
          type: object
          description: |
            General purpose object to capture `Pick-up` location. The location can be specified in **one** of the following ways: `UN Location Code`, `facility` or an `Address`.
          example:
            locationName: "HHLA Altenwerder, Hamburg"
            UNLocationCode: "DEHAM"
            facilityCode: 'CTA'
            facilityCodeListProvider: 'SMDG'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
              FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        returnLocation:
          description: |
            General purpose object to capture `Return` location. The location can be specified in **one** of the following ways: `UN Location Code`, `facility` or an `Address`.
          example:
            locationName: "Hamburg"
            UNLocationCode: "DEHAM"
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/addressLocation'
              FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/facilityLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/3.0.0#/components/schemas/unLocationLocation'
        returnDescription:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/returnDescription'
        customsImportDeclarationProcedure:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/customsImportDeclarationProcedure'
        requestedReleaseDateTime:
          type: string
          format: date-time
          description: |
            Time at which the container is expected to be released from the terminal or another specified destination.
            
            **NB:** This field corresponds with the field called `Requested time of release` in the IFS
          example: '2021-11-03T09:41:00-08:30'
        releasePINCode:
          type: string
          pattern: '^\d+$'
          description: |
            A code that the recipient must provide at the location of release in Order to receive the container (specific per terminal)
          example: '57953'
        deliveryOrderExpiryDateTime:
          type: string
          format: date-time
          description: |
            The date when the delivery order expires. Conditional on local practices
          example: '2021-11-03T09:41:00-08:30'
      required:
        - transportDocumentReference
        - carrierCode
        - carrierCodeListProvider
        - utilizedTransportEquipments
        - pickupLocation
        - returnLocation
        - requestedReleaseDateTime

    ##############
    # Simple types
    ##############

    carrierBookingReferences:
      type: object
      properties:
        carrierBookingReferences:
          type: array
          minLength: 1
          description: |
            A list of all `carrierBookingReferences` used. The `carrierBookingReferences` are sourced from the `CargoItems` or the root object of the SI.
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierBookingReference'
    invoiceReference:
      type: string
      maxLength: 100
      pattern: '^\S+(\s+\S+)*$'
      description: |
        Identifier of the invoice towards the consignee in relation to the shipment. 
      example: 'INV51XX80YY'

    ##################################
    # Booking specialized simple types
    ##################################
    
    bookingStatus:
      type: string
      description: |
        The status of the booking. Possible values are:
        - RECE (Received)
        - PENU (Pending Update)
        - PENC (Pending Confirmation)
        - CONF (Confirmed)
        - REJE (Rejected)
        - CANC (Cancelled)
        - CMPL (Completed)

        More details can be found on <a href="https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `documentStatus`, the list is a subset of the possible values.
      enum:
        - RECE
        - PENU
        - PENC
        - CONF
        - REJE
        - CANC
        - CMPL
      example:
        RECE
    bookingStatusCancelled:
      type: string
      description: |
        The status of the booking can only be set to cancelled:
        - CANC (Cancelled)

        More details can be found on <a href="https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv">GitHub</a>. Be aware that the list linked to is the `ShipmentEventTypeCodes` which is equivalent to `bookingStatus`, the list is a subset of the possible values.
      enum:
        - CANC
      example:
        CANC
    bookingDocumentTypeCode:
      type: string
      maxLength: 3
      description: |
        The code to identify the type of information `documentID` points to. Can be one of the following values
        - CBR (Carrier Booking Request Reference)
        - BKG (Booking)

        More details can be found on <a href="https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/documenttypecodes.csv">GitHub</a>. Be aware that the list provided here is a subset of the possible values.
      example: CBR
      enum:
        - CBR
        - BKG
    bookingShipmentEventTypeCode:
      type: string
      description: |
        The status of the booking in the process. Possible values are
        - RECE (Received)
        - PENU (Pending Update)
        - PENC (Pending Confirmation)
        - CONF (Confirmed)
        - REJE (Rejected)
        - CANC (Cancelled)
        - CMPL (Completed)

        More details can be found on <a href="https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv">GitHub</a>. Be aware that the list provided here is a subset of the possible values.
      enum:
        - RECE
        - PENU
        - PENC
        - CONF
        - REJE
        - CANC
        - CMPL
      example: CONF
      
    ##############################
    # eBL specialized simple types
    ##############################
      
    eblDocumentTypeCode:
      type: string
      maxLength: 3
      description: |
        The code to identify the type of information `documentID` points to. Can be one of the following values
        - SHI (Shipping Instruction)
        - TRD (Transport Document)

        More details can be found on <a href="https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/documenttypecodes.csv">GitHub</a>. Be aware that the list provided here is a subset of the possible values.
      example: SHI
      enum:
        - SHI
        - TRD
    eblShipmentEventTypeCode:
      type: string
      description: |
        The status of the booking in the process. Possible values are
        - RECE (Received)
        - PENU (Pending Update)
        - DRAFT (Draft)
        - PENA (Pending Approval)
        - APPR (Approved)
        - ISSU (Issued)
        - SURR (Surrendered)
        - VOID (Void)

        More details can be found on <a href="https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/shipmenteventtypecodes.csv">GitHub</a>. Be aware that the list provided here is a subset of the possible values.
      enum:
        - RECE
        - PENU
        - DRFT
        - PENA
        - APPR
        - ISSU
        - SURR
        - VOID
      example: RECE

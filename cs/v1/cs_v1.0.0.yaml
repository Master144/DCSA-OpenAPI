openapi: 3.0.3
info:
  version: 1.0.0
  title: DCSA OpenAPI specification for Commercial Schedules - Alpha 1
  description: |
    API specification issued by DCSA.org.
    
    For a changelog please click [here](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/cs/v1#v100). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments.

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Digital Container Shipping Association (DCSA)
    url: https://dcsa.org
    email: info@dcsa.org
paths:
  /v1/point-to-point-routes:
    get:
      summary: Get Point-Point routes
      description: |
        Retrieves the Point-Point routes
      parameters:
        - $ref: '#/components/parameters/placeOfReceiptQueryParam'
#        - $ref: '#/components/parameters/portOfLoadQueryParam'
        - $ref: '#/components/parameters/placeOfDeliveryQueryParam'
#        - $ref: '#/components/parameters/portOfDischargeQueryParam'
        - $ref: '#/components/parameters/earliestDepartureDateTimeQueryParam'
        - $ref: '#/components/parameters/latestDepartureDateTimeQueryParam'
        - $ref: '#/components/parameters/earliestArrivalDateTimeQueryParam'
        - $ref: '#/components/parameters/latestArrivalDateTimeQueryParam'
        - $ref: '#/components/parameters/routingTypeCodeQueryParam'
#        - $ref: '#/components/parameters/specialCargoTypeCodeQueryParam'
#        - $ref: '#/components/parameters/vesselFlagQueryParam'

        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/limit'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/cursor'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/sort'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/parameters/Api-Version-Major'
      responses:
        '200':
          description: Request successful
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/API-Version'
            Current-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Current-Page'
            Next-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Next-Page'
            Prev-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Prev-Page'
            Last-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/Last-Page'
            First-Page:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/First-Page'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pointToPoint'
        default:
          description: Unexpected error
          headers:
            API-Version:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/headers/API-Version'
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/ERROR_DOMAIN/2.0.1#/components/schemas/error'
components:
  schemas:
    dateTime:
      type: string
      format: date-time
      example: '2021-01-09T14:12:56-01:00'      
    pointToPoint:
      type: object
      description: |
        Point to point routing metadata
      allOf:
        - type: object
          properties:
            placeOfReceipt:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'
                - description: |
                    The UN Location code of the `Place of Receipt` of the 1<sup>st</sup> leg. This field is only provided if the queryParameter `placeOfReceipt` has been used.
        - type: object
          properties:
            placeOfReceiptDateTime:
              type: string
              format: date-time
              description: |
                The date and time when the goods will depart the `Place of Reciept`. This field is only provided if the queryParameter `placeOfReceipt` has been used.
        - type: object
          properties:
            placeOfDelivery:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'
                - description: |
                    The UN Location code of the `Place of Delivery` of the last leg. This field is only provided if the queryParameter `placeOfDelivery` has been used.
        - type: object
          properties:
            placeOfDeliveryDateTime:
              type: string
              format: date-time
              description: |
                The date and time when the goods will arrive at the `Place of Delivery`. This field is only provided if the queryParameter `placeOfDelivery` has been used.
        - type: object
          properties:
            portOfLoad:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'
                - description: |
                    The UN Location code of the `Port of Load` if the 1<sup>st</sup> leg is a port. This field is only provided if the queryParameter `portOfLoad` has been used.
        - type: object
          properties:
            portOfLoadDateTime:
              type: string
              format: date-time
              description: |
                The date and time when the goods will depart from the `Port of Load`. This field is only provided if the queryParameter `portOfLoad` has been used.
        - type: object
          properties:
            portOfDischarge:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'
                - description: |
                    The UN Location code of the `Port of Discharge` if the last leg is a port. This field is only provided if the queryParameter `portOfDischarge` has been used.
        - type: object
          properties:
            portOfDischargeDateTime:
              type: string
              format: date-time
              description: |
                The date and time when the goods will arrive at the `Port of Discharge`. This field is only provided if the queryParameter `portOfDischarge` has been used.
        - type: object
          properties:
            transitTime:
              type: integer
              description: |
                The estimated total time in days that it takes a shipment to move from place of receipt to place of delivery. Transit time includes stop-over time during transshipments and waiting time at connection points
        - type: object
          properties:
            gateOpeningDateTime:
              type: string
              format: date-time
              description: |
                Earliest date and time for possible Gate in
        - type: object
          properties:
           gateInCutOffDateTimes:
              type: array
              items:
                $ref: '#/components/schemas/gateInCutOffTime'
        - type: object
          properties:
            legs:
              type: array
              description: |
                Leg of the Point-to-Point routing. Can be either an `intermodal` leg or an `ocean` leg
              items:
                oneOf:
                  - $ref: '#/components/schemas/intermodal'
                  - $ref: '#/components/schemas/ocean'

    gateInCutOffTime:
      type: object
      description: |
        Cut off times
      allOf:
        - type: object
          properties:
            cutOffDateTimeCode:
              type: string
              description: |
                Code for the cut-off time
                - DGD (Dangerous Goods cut-off)
                - REF (Reefer cut-off)
                - VCO (VGM cut-off)
                - FCO (FCL delivery cut-off)
                - LCO (LCL delivery cut-off)
                - OOG (Out of Gauge - BB cut-off)
                - SHI (Shipping Instruction cut-off)
              enum:
                - DGD
                - REF
                - VCO
                - FCO
                - LCO
                - OOG
                - SHI
        - type: object
          properties:
            cutOffDateTime:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/cutOffDateTime'
      required:
        - cutOffDateTimeCode
        - cutOffDateTime

    intermodal:
      type: object
      description: |
         intermodal
      allOf:
        - type: object
          properties:
            modeOfTransport:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/modeOfTransport'
                - example:
                    TRAIN
        - type: object
          properties:
            departureLocation:
              anyOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/addressLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/unLocationLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/facilityLocation'
        - type: object
          properties:
            departurDateTime:
              type: string
              format: date-time
              description: |
                xxx
        - type: object
          properties:
            arrivalLocation:
              anyOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/addressLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/unLocationLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/2.0.0#/components/schemas/facilityLocation'
        - type: object
          properties:
            arrivalDateTime:
              type: string
              format: date-time
              description: |
                yyy
    ocean:
      type: object
      description: |
        ocean
      allOf:
        - $ref: '#/components/schemas/intermodal'
        - type: object
          properties:
            vesselName:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselName'
        - type: object
          properties:
            vesselYearBuilt:
              description: |
                Year the Vessel is built
              type: integer
              example: 1925
        - type: object
          properties:
            vesselCallSign:
              description: |
                Call sign of the Vesel
              type: string
              example: Alpha 1
        - type: object
          properties:
            vesselFlag:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselFlag'
        - type: object
          properties:
            vesselIMONumber:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselIMONumber'
        - type: object
          properties:
            serviceName:
              allOf:
                - $ref: '#/components/schemas/carrierServiceName'
        - type: object
          properties:
            importVoyageNumber:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/importVoyageNumber'
        - type: object
          properties:
            exportVoyageNumber:
              allOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/exportVoyageNumber'
        - example:
            modeOfTransport: VESSEL
            vesselName: 'King of the Seas'
            vesselIMONumber: 9321483
            serviceName: 'Great Lion Service'
            importVoyageNumber: '111'
            exortVoyageNumber: '222'
            departureLocation: FRPAR
            departureDateTime: '2022-04-01T14:12:56-01:00'
            arrivalLocation: DEHAM
            arrivalDateTime: '2022-03-29T14:12:56-01:00'
    specialCargoTypeCode:
      type: string
      enum:
        - DGD
        - REF
        - OOG
    carrierServiceName:
      type: string
      description: |
        The name of the service 
      example: Great Lion Service

  parameters:
  
    ##############
    # Query params
    ##############
    
    placeOfReceiptQueryParam:
      in: query
      name: placeOfReceipt
      description: |
        `Place Of Receipt` defined as a UnLocationCode. Cannot be used in combination with `portOfLoad`
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'
      required: false
    portOfLoadQueryParam:
      in: query
      name: portOfLoad
      description: |
        `Port Of Load` defined as a UnLocationCode. Cannot be used in combination with `placeOfReceipt`
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'
      required: false
    placeOfDeliveryQueryParam:
      in: query
      name: placeOffDelivery
      description: |
        `Place Of fDelivery` defined as a UnLocationCode. Cannot be used in combination with `portOfDischarge`
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'
      required: false
    portOfDischargeQueryParam:
      in: query
      name: portOfDischarge
      description: |
        `Port Of Discharge` defined as a UnLocationCode. Cannot be used in combination with `placeOffDelivery`
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/UNLocationCode'
      required: false
    earliestDepartureDateTimeQueryParam:
      in: query
      name: earliestDepartureDateTime
      description: |
        Limit the result based on the departure start DateTime (earliest departure dateTme). This is a **conditional** field and `required` if `arrivalEndDateTime` is not specified.
        
        It is possible to use this query parameter in combination with the optional `departureEndDateTime`-queryParam. The maximum duration of the period allowed is 12 weeks (=3 months) which is also the default period used if `departureEndDateTime` is **not** defined.
        
        **NB:** A BadRequest is returned if the period exceeds 12 weeks or if this queryParameter is used in combination with either `arrivalStartDateTime` or `arrivalEndDateTime`
      required: false
      example: '2021-04-01T14:12:56-01:00'
      schema:
        $ref: '#/components/schemas/dateTime'
    latestDepartureDateTimeQueryParam:
      in: query
      name: latestDepartureDateTime
      description: |
        Limit the result based on the departure end DateTime. It is not possible to combine this queryParameter with the `arrival`-queryParameters. It can **only** be used in combination with `departureStartDateTime` in which case it defines a period. If omitted the default value of this parameter in combination with `departureStartDateTime` is 12 weeks (=3 months)

        **NB:** A BadRequest is returned if the period exceeds 12 weeks or if this queryParameter is used in combination with either `arrivalStartDateTime` or `arrivalEndDateTime`
      required: false
      example: '2021-04-01T14:12:56-01:00'
      schema:
        $ref: '#/components/schemas/dateTime'
    earliestArrivalDateTimeQueryParam:
      in: query
      name: earliestArrivalDateTime
      description: |
        Limit the result based on the arrival start DateTime. It is not possible to combine this queryParameter with the `departure`-queryParameters. It can **only** be used in combination with `arrivalEndDateTime` in which case it defines a period. If omitted the default value of this parameter in combination with `arrivalEndDateTime` is 12 weeks (=3 months)

        **NB:** A BadRequest is returned if the period exceeds 12 weeks or if this queryParameter is used in combination with either `departureStartDateTime` or `departureEndDateTime`
      required: false
      example: '2021-04-01T14:12:56-01:00'
      schema:
        $ref: '#/components/schemas/dateTime'
    latestArrivalDateTimeQueryParam:
      in: query
      name: arrivalEndDateTime
      description: |
        Limit the result based on the arrival end DateTime (latest arrival dateTme). This is a **conditional** field and `required` if `departureStartDateTime` is not specified.
        
        It is possible to use this query parameter in combination with the optional `arrivalStartDateTime`-queryParam. The maximum duration of the period allowed is 12 weeks (=3 months) which is also the default period used if `arrivalStartDateTime` is **not** defined.
        
        **NB:** A BadRequest is returned if the period exceeds 12 weeks or if this queryParameter is used in combination with either `departureStartDateTime` or `departureEndDateTime`
      required: false
      example: '2021-04-01T14:12:56-01:00'
      schema:
        $ref: '#/components/schemas/dateTime'
    vesselFlagQueryParam:
      in: query
      name: vesselFlag
      description: |
        The flag of the vessel. All Vessels in the results will belong to the specified flag
      schema:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/2.0.0#/components/schemas/vesselFlag'
      required: false
    routingTypeCodeQueryParam:
      in: query
      name: routingTypeCode
      description: |
        Whether to use Direct-routing (`direct`) or Indirect-routing (`indirect`)
      schema:
        type: string
        enum:
          - direct
          - indirect
      required: false
    specialCargoTypeCodeQueryParam:
      in: query
      name: speciaCargoTypeCode
      explode: false
      style: form
      required: false
      description: |
        Specify special cargo requirements:
        
        - DGD (Dangerious Goods)
        - REF (Reefer)
        - OOG (Out of Gauge)
        
        It is possible to select multiple values by comma `,` separating them. For multiple values the AND-operator is used. For example _speciaCargoTypeCode=DGD,REF_ Matches schedules where **both** Dangerous Goods (`DGD`) and Reefers (`REF`) can be provided in the same routing.
      example: [DGD,REF]
      schema:
        default: [DGD,REF,OOG]
        type: array
        items:
          $ref: '#/components/schemas/specialCargoTypeCode'
# OpenAPI version identifier - required for OpenAPI 3.0 domains
openapi: 3.0.3

#######################
# Optional info section
#######################

info:
  title: DCSA - Documentation Components
  description: |
    Common components for eDocumentation APIs. This domain is used by
    - Electronic Bill of Lading ([EBL](https://app.swaggerhub.com/apis-docs/dcsaorg/DCSA_EBL))
    - Booking ([BKG](https://app.swaggerhub.com/apis-docs/dcsaorg/DCSA_BKG))
    
    For a history of changes in this domain - please check [GitHub](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/domain/documentation#v202). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  contact:
    name: Digital Container Shipping Association (DCSA)
    url: https://dcsa.org
    email: info@dcsa.org
  version: 3.0.0

components:
  schemas:
  
    ##################
    # Requested Change
    ##################

    RequestedChange:
      type: object
      title: 'Requested Change'
      description: |
        A change required to the document in order for the carrier to accepted it
      properties:
        field:
          type: string
          maxLength: 500
          description: |
            The field that caused the error, e.g. a failed validation. The field can be expressed as a [JSONpath](https://github.com/json-path/JsonPath) using either the [DOT] Notation or the [Bracket] Notation.
          example: '$.location.facilityCode'
        # property:
        #   type: string
        #   maxLength: 100
        #   description: |
        #     The name of the property causing the error.
        #   example: 'facilityCode'
        # jsonPath:
        #   type: string
        #   maxLength: 500
        #   description: |
        #     A path to the property causing the error, formatted according to [JSONpath](https://github.com/json-path/JsonPath).
        #   example: '$.location.facilityCode'
        message:
          type: string
          maxLength: 500
          description: |
            A description of the problem that needs attention.
          example: 'Spaces not allowed in facility code'
      required:
        - message

    ####################
    # Booking API object
    ####################

    CreateBooking:
      type: object
      title: 'Booking'
      properties:
        receiptTypeAtOrigin:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/receiptTypeAtOrigin'
        deliveryTypeAtDestination:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryTypeAtDestination'
        cargoMovementTypeAtOrigin:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtOrigin'
        cargoMovementTypeAtDestination:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtDestination'
        serviceContractReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/serviceContractReference'
        freightPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/freightPaymentTermCode'
        originChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/originChargesPaymentTermCode'
        destinationChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/destinationChargesPaymentTermCode'
        contractQuotationReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contractQuotationReference'
        vessel:
          type: object
          properties:
            name:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselName'
            vesselIMONumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselIMONumber'
          required:
            - name
        carrierServiceName:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierServiceName'
        carrierServiceCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierServiceCode'
        universalServiceReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalServiceReference'
        carrierExportVoyageNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierExportVoyageNumber'
        universalExportVoyageReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalExportVoyageReference'
        declaredValue:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/declaredValue'
        declaredValueCurrency:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/declaredValueCurrency'
        isPartialLoadAllowed:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isPartialLoadAllowed'
        isExportDeclarationRequired:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isExportDeclarationRequired'
        exportDeclarationReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/exportDeclarationReference'
        isImportLicenseRequired:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isImportLicenseRequired'
        importLicenseReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/importLicenseReference'
        # - type: object
        #   properties:
        #     contractQuotationReference:
        #       $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contractQuotationReference'
        expectedDepartureDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/expectedDepartureDate'
        expectedArrivalAtPlaceOfDeliveryStartDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/expectedArrivalAtPlaceOfDeliveryStartDate'
        expectedArrivalAtPlaceOfDeliveryEndDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/expectedArrivalAtPlaceOfDeliveryEndDate'
        transportDocumentTypeCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentTypeCode'
        transportDocumentReference:
          type: string
          pattern: '^\S+(\s+\S+)*$'
          maxLength: 20
          # Extended description of transportDocumentReference compared to DCSA_DOMAIN description
          description: |
            A unique reference allocated by the shipping line to the Transport Document that the booking concerns.
          example: 'reserved-HHL123'
        bookingChannelReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/bookingChannelReference'
        incoTerms:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/incoTerms'
        communicationChannelCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/communicationChannelCode'
        isEquipmentSubstitutionAllowed:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isEquipmentSubstitutionAllowed'
        invoicePayableAt:
          type: object
          description: |
            General purpose object to capture `Invoice Payable At` location.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'Eiffel Tower'
            locationType: 'UNLO'
            UNLocationCode: 'FRPAR'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        placeOfBLIssue:
          type: object
          description: |
            General purpose object to capture `Place of B/L Issue` location.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'DCSA Headquarters'
            locationType: 'UNLO'
            UNLocationCode: 'NLAMS'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        references:
          type: array
          description: |
            A list of `References`
          items:
            $ref: '#/components/schemas/Reference'
        documentParties:
          type: array
          description: |
            A list of `Document Parties`
          items:
            $ref: '#/components/schemas/DocumentParty'
        partyContactDetails:
          type: array
          description: |
            The contact details of the person(s) to contact in relation to the **Booking** (changes, notifications etc.) 
          items:
            $ref: '#/components/schemas/PartyContactDetail'
        shipmentLocations:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentLocation'
        requestedEquipments:
          type: array
          minLength: 1
          description: |
            List of `Requested Equipments`. Multiple containers can be requested within the same booking. For each Requested Equipment object with 2 or more units, it is a condition that the commodity (or list of commodities) defined within the same Requested Equipment object is the same for each requested unit.
            
            **Example:** 2 x 20' containing 50% shoes and 50% t-shirts can be requested within the same Requested Equipment object only if each 20' will contain 50% shoes and 50% t-shirts. If 1 x 20' will contain 100% shoes and the other 20' will be 100% t-shirts, 2 separate Requested Equipment objects must be defined.
          items:
            $ref: '#/components/schemas/RequestedEquipment_SHI'
      required:
        - receiptTypeAtOrigin
        - deliveryTypeAtDestination
        - cargoMovementTypeAtOrigin
        - cargoMovementTypeAtDestination
        - requestedEquipments
        - isPartialLoadAllowed
        - isExportDeclarationRequired
        - isImportLicenseRequired
        - communicationChannelCode
        - isEquipmentSubstitutionAllowed
        - shipmentLocations
      
    UpdateBooking:
      type: object
      title: 'Booking'
      properties:
        carrierBookingRequestReference:
          $ref: '#/components/schemas/carrierBookingRequestReference'
        carrierBookingReference:
          $ref: '#/components/schemas/carrierBookingReference'
        receiptTypeAtOrigin:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/receiptTypeAtOrigin'
        deliveryTypeAtDestination:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryTypeAtDestination'
        cargoMovementTypeAtOrigin:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtOrigin'
        cargoMovementTypeAtDestination:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtDestination'
        serviceContractReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/serviceContractReference'
        freightPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/freightPaymentTermCode'
        originChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/originChargesPaymentTermCode'
        destinationChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/destinationChargesPaymentTermCode'
        contractQuotationReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contractQuotationReference'
        vessel:
          type: object
          properties:
            name:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselName'
            vesselIMONumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselIMONumber'
          required:
            - name
        carrierServiceName:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierServiceName'
        carrierServiceCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierServiceCode'
        universalServiceReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalServiceReference'
        carrierExportVoyageNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierExportVoyageNumber'
        universalExportVoyageReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalExportVoyageReference'
        declaredValue:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/declaredValue'
        declaredValueCurrency:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/declaredValueCurrency'
        isPartialLoadAllowed:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isPartialLoadAllowed'
        isExportDeclarationRequired:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isExportDeclarationRequired'
        exportDeclarationReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/exportDeclarationReference'
        isImportLicenseRequired:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isImportLicenseRequired'
        importLicenseReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/importLicenseReference'
        # - type: object
        #   properties:
        #     contractQuotationReference:
        #       $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contractQuotationReference'
        expectedDepartureDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/expectedDepartureDate'
        expectedArrivalAtPlaceOfDeliveryStartDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/expectedArrivalAtPlaceOfDeliveryStartDate'
        expectedArrivalAtPlaceOfDeliveryEndDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/expectedArrivalAtPlaceOfDeliveryEndDate'
        transportDocumentTypeCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentTypeCode'
        transportDocumentReference:
          type: string
          pattern: '^\S+(\s+\S+)*$'
          maxLength: 20
          # Extended description of transportDocumentReference compared to DCSA_DOMAIN description
          description: |
            A unique reference allocated by the shipping line to the Transport Document that the booking concerns.
          example: 'reserved-HHL123'
        bookingChannelReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/bookingChannelReference'
        incoTerms:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/incoTerms'
        communicationChannelCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/communicationChannelCode'
        isEquipmentSubstitutionAllowed:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isEquipmentSubstitutionAllowed'
        invoicePayableAt:
          type: object
          description: |
            General purpose object to capture `Invoice Payable At` location.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'Eiffel Tower'
            locationType: 'UNLO'
            UNLocationCode: 'FRPAR'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        placeOfBLIssue:
          type: object
          description: |
            General purpose object to capture `Place of B/L Issue` location.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'DCSA Headquarters'
            locationType: 'UNLO'
            UNLocationCode: 'NLAMS'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        references:
          type: array
          description: |
            A list of `References`
          items:
            $ref: '#/components/schemas/Reference'
        documentParties:
          type: array
          description: |
            A list of `Document Parties`
          items:
            $ref: '#/components/schemas/DocumentParty'
        partyContactDetails:
          type: array
          description: |
            The contact details of the person(s) to contact in relation to the **Booking** (changes, notifications etc.) 
          items:
            $ref: '#/components/schemas/PartyContactDetail'
        shipmentLocations:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentLocation'
        requestedEquipments:
          type: array
          minLength: 1
          description: |
            List of `Requested Equipments`. Multiple containers can be requested within the same booking. For each Requested Equipment object with 2 or more units, it is a condition that the commodity (or list of commodities) defined within the same Requested Equipment object is the same for each requested unit.
            
            **Example:** 2 x 20' containing 50% shoes and 50% t-shirts can be requested within the same Requested Equipment object only if each 20' will contain 50% shoes and 50% t-shirts. If 1 x 20' will contain 100% shoes and the other 20' will be 100% t-shirts, 2 separate Requested Equipment objects must be defined.
          items:
            $ref: '#/components/schemas/RequestedEquipment_SHI'
      required:
        - receiptTypeAtOrigin
        - deliveryTypeAtDestination
        - cargoMovementTypeAtOrigin
        - cargoMovementTypeAtDestination
        - requestedEquipments
        - isPartialLoadAllowed
        - isExportDeclarationRequired
        - isImportLicenseRequired
        - communicationChannelCode
        - isEquipmentSubstitutionAllowed
        - shipmentLocations
    
    Booking:
      type: object
      title: 'Booking'
      properties:
        carrierBookingRequestReference:
          $ref: '#/components/schemas/carrierBookingRequestReference'
        carrierBookingReference:
          $ref: '#/components/schemas/carrierBookingReference'
        bookingStatus:
          $ref: '#/components/schemas/bookingStatus'
        amendedBookingStatus:
          $ref: '#/components/schemas/amendedBookingStatus'
        receiptTypeAtOrigin:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/receiptTypeAtOrigin'
        deliveryTypeAtDestination:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryTypeAtDestination'
        cargoMovementTypeAtOrigin:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtOrigin'
        cargoMovementTypeAtDestination:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtDestination'
        serviceContractReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/serviceContractReference'
        freightPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/freightPaymentTermCode'
        originChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/originChargesPaymentTermCode'
        destinationChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/destinationChargesPaymentTermCode'
        contractQuotationReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contractQuotationReference'
        vessel:
          type: object
          properties:
            name:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselName'
            vesselIMONumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselIMONumber'
          required:
            - name
        carrierServiceName:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierServiceName'
        carrierServiceCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierServiceCode'
        universalServiceReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalServiceReference'
        carrierExportVoyageNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierExportVoyageNumber'
        universalExportVoyageReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalExportVoyageReference'
        declaredValue:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/declaredValue'
        declaredValueCurrency:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/declaredValueCurrency'
        isPartialLoadAllowed:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isPartialLoadAllowed'
        isExportDeclarationRequired:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isExportDeclarationRequired'
        exportDeclarationReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/exportDeclarationReference'
        isImportLicenseRequired:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isImportLicenseRequired'
        importLicenseReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/importLicenseReference'
        # - type: object
        #   properties:
        #     contractQuotationReference:
        #       $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contractQuotationReference'
        expectedDepartureDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/expectedDepartureDate'
        expectedArrivalAtPlaceOfDeliveryStartDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/expectedArrivalAtPlaceOfDeliveryStartDate'
        expectedArrivalAtPlaceOfDeliveryEndDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/expectedArrivalAtPlaceOfDeliveryEndDate'
        transportDocumentTypeCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentTypeCode'
        transportDocumentReference:
          type: string
          pattern: '^\S+(\s+\S+)*$'
          maxLength: 20
          # Extended description of transportDocumentReference compared to DCSA_DOMAIN description
          description: |
            A unique reference allocated by the shipping line to the Transport Document that the booking concerns.
          example: 'reserved-HHL123'
        bookingChannelReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/bookingChannelReference'
        incoTerms:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/incoTerms'
        communicationChannelCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/communicationChannelCode'
        isEquipmentSubstitutionAllowed:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isEquipmentSubstitutionAllowed'
        termsAndConditions:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/termsAndConditions'
        invoicePayableAt:
          type: object
          description: |
            General purpose object to capture `Invoice Payable At` location.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'Eiffel Tower'
            locationType: 'UNLO'
            UNLocationCode: 'FRPAR'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        placeOfBLIssue:
          type: object
          description: |
            General purpose object to capture `Place of B/L Issue` location.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'DCSA Headquarters'
            locationType: 'UNLO'
            UNLocationCode: 'NLAMS'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        references:
          type: array
          description: |
            A list of `References`
          items:
            $ref: '#/components/schemas/Reference'
        documentParties:
          type: array
          description: |
            A list of `Document Parties`
          items:
            $ref: '#/components/schemas/DocumentParty'
        partyContactDetails:
          type: array
          description: |
            A list of contact details of the person(s) to contact in relation to the **Booking** (changes, notifications etc.) 
          items:
            $ref: '#/components/schemas/PartyContactDetail'
        shipmentLocations:
          type: array
          description: |
            A list of `Shipment Locations`
          items:
            $ref: '#/components/schemas/ShipmentLocation'
        requestedEquipments:
          type: array
          minLength: 1
          description: |
            List of `Requested Equipments`. Multiple containers can be requested within the same booking. For each Requested Equipment object with 2 or more units, it is a condition that the commodity (or list of commodities) defined within the same Requested Equipment object is the same for each requested unit.
            
            **Example:** 2 x 20' containing 50% shoes and 50% t-shirts can be requested within the same Requested Equipment object only if each 20' will contain 50% shoes and 50% t-shirts. If 1 x 20' will contain 100% shoes and the other 20' will be 100% t-shirts, 2 separate Requested Equipment objects must be defined.
          items:
            $ref: '#/components/schemas/RequestedEquipment_CAR'
        confirmedEquipments:
          type: array
          description: |
            A list of `Confirmed Equipments`

            **Conditional:** Mandatory for a `CONFIRMED` Booking
          items:
            $ref: '#/components/schemas/ConfirmedEquipment'
        transportPlan:
          type: array
          description: |
            A list of `transport` objects describing the entire transport plan including transshipments.
            
            **Conditional:** Mandatory for a `CONFIRMED` Booking
          items:
            $ref: '#/components/schemas/Transport'
        shipmentCutOffTimes:
          type: array
          description: |
            A list of cut-off times provided by the carrier in the booking confirmation. A cut-off time indicates the latest deadline within which a task must be completed. The confirmed schedule cannot be guaranteed if a cut-off time is missed. Customs brokers may set additional cut-off times to receive the export customs documentation, which is not included in the shipment cut-off times of a carrier booking.
            
            **Conditional:** Mandatory for a `CONFIRMED` Booking
          items:
            $ref: '#/components/schemas/ShipmentCutOffTime'
        advanceManifestFilings:
          type: array
          description: |
            A list of `Advance Manifest Filings` provided by the carrier
          items:
            $ref: '#/components/schemas/AdvanceManifestFiling_BKG'
        charges:
          type: array
          description: |
            A list of `Charges`
          items:
            $ref: '#/components/schemas/Charge'
        carrierClauses:
          type: array
          description: |
            Additional clauses for a specific shipment added by the carrier to the Bill of Lading, subject to local rules / guidelines or certain mandatory information required to be shared with the customer.
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/clauseContent'
        requestedChanges:
          type: array
          description: |
            A list of changes requirested by the carrier to the document in order for it to be accepted.
          items:
            $ref: '#/components/schemas/RequestedChange'
        reason:
          $ref: '#/components/schemas/reason_BKG'
      required:
        - bookingStatus
        - receiptTypeAtOrigin
        - deliveryTypeAtDestination
        - cargoMovementTypeAtOrigin
        - cargoMovementTypeAtDestination
        - requestedEquipments
        - isPartialLoadAllowed
        - isExportDeclarationRequired
        - isImportLicenseRequired
        - communicationChannelCode
        - isEquipmentSubstitutionAllowed
        - shipmentLocations
    
    BookingRefStatus:
      type: object
      title: 'Booking Response'
      description: |
        The `carrierBookingReference` or `carrierBookingRequestReference` along with the `bookingStatus` and a possible list of **requsted changes** or a **reason** is returned.
        
        **Condition:** `carrierBookingRequestReference` and/or `carrierBookingReference` must be provided
      properties:
        carrierBookingRequestReference:
          $ref: '#/components/schemas/carrierBookingRequestReference'
        carrierBookingReference:
          $ref: '#/components/schemas/carrierBookingReference'
        bookingStatus:
          $ref: '#/components/schemas/bookingStatus'
        amendedBookingStatus:
          $ref: '#/components/schemas/amendedBookingStatus'
        requestedChanges:
          type: array
          description: |
            A list of changes requirested by the carrier to the document in order for it to be accepted.
          items:
            $ref: '#/components/schemas/RequestedChange'
        reason:
          $ref: '#/components/schemas/reason_BKG'
      required:
        - bookingStatus

    BookingRefCancelledStatus:
      title: 'Cancelled Booking Response'
      description: |
        The `carrierBookingReference` and/or `carrierBookingRequestReference` along with the `bookingStatus`, `amendedBookingStatus` and a possible `reason` is returned.
        
        **Condition:** `carrierBookingReference` and/or `carrierBookingRequestReference` must be provided
      type: object
      properties:
        carrierBookingRequestReference:
          $ref: '#/components/schemas/carrierBookingRequestReference'
        carrierBookingReference:
          $ref: '#/components/schemas/carrierBookingReference'
        bookingStatus:
          type: string
          maxLength: 50
          description: |
            The status of the `Booking`. It can only be:
            
            - `CANCELLED` (in case the entire `Booking` has been cancelled)
            - `CONFIRMED` (in case the `Booking` is still confirmed)
            - `PENDING AMENDMENT` (in case the provider is still waithing for an amendment to a `Booking`)
          example: 'CANCELLED'
        amendedBookingStatus:
          type: string
          maxLength: 50
          description: |
            The status of the amended `Booking`. It can only be `AMENDMENT CANCELLED`.
          example: 'AMENDMENT CANCELLED'
        reason:
          $ref: '#/components/schemas/reason_BKG'
      required:
        - bookingStatus


    ############################
    # Objects needed for booking
    ############################


    #################
    # Dangerous Goods
    #################

    InnerPackaging:
      type: object
      title: 'Inner Packaging'
      description: |
        Object for inner packaging specification
      properties:
        quantity:
          type: integer
          format: int32
          description: |
            Count of `Inner Packagings` of the referenced `Dangerous Goods`.
          example: 20
        material:
          type: string
          maxLength: 100
          description: |
            The `material` used for the `Inner Packaging` of the referenced `Dangerous Goods`.
          example: 'Plastic'
        description:
          type: string
          maxLength: 100
          description: |
            Description of the packaging.
          example: 'Wowen plastic water resistant Bag'
      required:
        - quantity
        - material
        - description

    Limits:
      type: object
      description: |
        Limits for the `Dangerous Goods`. The same `Temperature Unit` needs to apply to all attributes in this structure.
      properties:
        temperatureUnit:
          type: string
          description: |
            The unit for **all attributes in the limits structure** in Celsius or Fahrenheit
            
            - CEL (Celsius)
            - FAH (Fahrenheit)
          enum:
            - CEL
            - FAH
          example: 'CEL'
        flashPoint:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/flashPoint'
        transportControlTemperature:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportControlTemperature'
        transportEmergencyTemperature:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportEmergencyTemperature'
        SADT:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sadt'
        SAPT:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sapt'
      required:
        - temperatureUnit

    EmergencyContactDetails:
      type: object
      title: 'Emergency Contact Details'
      description: |
        24 hr emergency contact details
      properties:
        contact:
          type: string
          maxLength: 255
          description: |
            Name of the Contact person during an emergency.
          example: 'Henrik Larsen'
        provider:
          type: string
          maxLength: 255
          description: |
            Name of the third party vendor providing emergency support
          example: 'GlobeTeam'
        phone:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contactPhone'
        referenceNumber:
          type: string
          maxLength: 255
          description: |
            Contract reference for the emergency support provided by an external third party vendor.
          example: '12234'
      required:
        - contact
        - phone

    DangerousGoods:
      type: object
      title: 'Dangerous Goods'
      oneOf:
        - type: object
          title: UN Number
          properties:
            unNumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/unNumber'
          required:
            - unNumber
        - type: object
          title: NA Number
          properties:
            naNumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/naNumber'
          required:
            - naNumber
      properties:
        codedVariantList:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/codedVariantList'
        properShippingName:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/properShippingName'
        technicalName:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/technicalName'
        imoClass:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/imoClass'
        subsidiaryRisk1:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/subsidiaryRisk'
        subsidiaryRisk2:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/subsidiaryRisk'
        isMarinePollutant:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isMarinePollutant'
        packingGroup:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/packingGroup'
        isLimitedQuantity:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isLimitedQuantity'
        isExceptedQuantity:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isExceptedQuantity'
        isSalvagePackings:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isSalvagePackings'
        isEmptyUncleanedResidue:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isEmptyUncleanedResidue'
        isWaste:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isWaste'
        isHot:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isHot'
        isCompetentAuthorityApprovalProvided:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isCompetentAuthorityApprovalProvided'
        competentAuthorityApproval:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/competentAuthorityApproval'
        segregationGroups:
          type: array
          description: |
            List of the segregation groups applicable to specific hazardous goods according to the IMO IMDG Code.
            
            **Condition:** only applicable to specific hazardous goods.
          items:
            type: string
            maxLength: 2
            # pattern: '^([1-9]|1[0-8])$'
            description: |
              Grouping of Dangerous Goods having certain similar chemical properties. Possible values are:
              
              - `1` (Acids)
              - `2` (Ammonium Compounds)
              - `3` (Bromates)
              - `4` (Chlorates)
              - `5` (Chlorites)
              - `6` (Cyanides)
              - `7` (Heavy metals and their salts)
              - `8` (Hypochlorites)
              - `9` (Lead and its compounds)
              - `10` (Liquid halogenated hydrocarbons)
              - `11` (Mercury and mercury compounds)
              - `12` (Nitrites and their mixtures)
              - `13` (Perchlorates)
              - `14` (Permanganates)
              - `15` (Powdered metals)
              - `16` (Peroxides),
              - `17` (Azides)
              - `18` (Alkalis)
            example: '12'
            # $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/segregationGroup'
        innerPackagings:
          type: array
          minLength: 1
          description: |
            A list of `Inner Packings` contained inside this `outer packaging/overpack`.
          items:
            $ref: '#/components/schemas/InnerPackaging'
        emergencyContactDetails:
          $ref: '#/components/schemas/EmergencyContactDetails'
        EMSNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/EMSNumber'
        endOfHoldingTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/endOfHoldingTime'
        fumigationDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/fumigationDateTime'
        isReportableQuantity:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isReportableQuantity'
        inhalationZone:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/inhalationZone'
        grossWeight:
          type: object
          description: |
            Total weight of the goods carried, including packaging.
          properties:
            value:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/dgGrossWeight'
            unit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
          required:
            - value
            - unit
        netWeight:
          type: object
          description: |
            Total weight of the goods carried, excluding packaging.
          properties:
            value:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/netWeight'
            unit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/netWeightUnit'
          required:
            - value
            - unit
        netExplosiveContent:
          type: object
          description: |
            The total weight of the explosive substances, without the packaging’s, casings, etc.
          properties:
            value:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/netExplosiveContent'
            unit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/netExplosiveContentUnit'
          required:
            - value
            - unit
        volume:
          type: object
          description: |
            The volume of the referenced dangerous goods.
            
            **Condition:** only applicable to liquids and gas.
          properties:
            value:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/dgVolume'
            unit:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnitDG'
        limits:
          $ref: '#/components/schemas/Limits'

    DangerousGoods_BKG:
      type: object
      title: 'Dangerous Goods'
      description: |
        Specification for `Dangerous Goods`. It is mandatory to either provide the `unNumber` or the `naNumber`. Dangerous Goods is based on **IMDG Amendment Version 41-22**.
      properties:
        specialCertificateNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/specialCertificateNumber'
        additionalContainerCargoHandling:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/additionalContainerCargoHandling'
      allOf:
        - $ref: '#/components/schemas/DangerousGoods'
      required:
        - properShippingName
        - imoClass
        - isMarinePollutant
        - isLimitedQuantity
        - isExceptedQuantity
        - isSalvagePackings
        - isEmptyUncleanedResidue
        - isWaste
        - isHot
        - isCompetentAuthorityApprovalProvided
        - isReportableQuantity
        - emergencyContactDetails
        - grossWeight

    #################
    # Outer Packaging
    #################

    OuterPackaging:
      type: object
      title: 'Outer Packaging'
      description: |
        Object for outer packaging/overpack specification. Examples of overpacks are a number of packages stacked on to a pallet and secured by strapping or placed in a protective outer packaging such as a box or crate to form one unit for the convenience of handling and stowage during transport. It is an array of the attributes below.
        
        **Conditional:** Mandatory for DG (Dangerous Goods) cargo.
      properties:
        packageCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/packageCode'
        imoPackagingCode:
          type: string
          pattern: '^[A-Z0-9]{1,5}$'
          description: |
            The code of the packaging as per IMO.
            
            **Condition:** only applicable to dangerous goods if specified in the IMO IMDG code amendment version 41-22. If not available, the `packageCode` as per UN recommendation 21 should be used.
          example: 1A2
        numberOfPackages:
          type: integer
          format: int32
          minimum: 1
          # Extended description of numberOfPackages compared to DCSA_DOMAIN description
          description: |
            Specifies the number of outer packagings/overpacks associated with this `Commodity`.
            
            **Conditional:** In case this `OuterPackaging` includes `Dangerous Goods` the `numberOfPackages` is mandatory to provide
          example: 18
        # unRecomemendation21PackingCode:
        #   type: string
        #   pattern: '^[A-Z0-9]{2}$'
        #   description: |
        #     The code of the packaging as per UN recommendation 21.
            
        #     **Condition:** only applicable to dangerous goods if the IMO packaging code is not available.
        #   example: 1A
        description:
          type: string
          maxLength: 100
          description: |
            Description of the outer packaging/overpack.
          example: Drum, steel
        dangerousGoods:
          type: array
          minLength: 1
          description: |
            A list of `Dangerous Goods` related to the `Commodity`
          items:
            $ref: '#/components/schemas/DangerousGoods_BKG'

    ###########
    # Reference
    ###########

    Reference:
      type: object
      description: |
        References provided by the shipper or freight forwarder at the time of `Booking` or at the time of providing `Shipping Instructions`. Carriers share it back when providing track and trace event updates, some are also printed on the B/L. Customers can use these references to track shipments in their internal systems.
      properties:
        type:
          $ref: '#/components/schemas/referenceType'
        value:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/referenceValue'
      required:
        - type
        - value

    referenceType:
      type: string
      maxLength: 3
      description: |
        The reference type codes defined by DCSA. Possible values are:
        - FF (Freight Forwarder’s Reference)
        - SI (Shipper’s Reference)
        - SPO (Shippers Purchase Order Reference)
        - CPO (Consignees Purchase Order Reference)
        - CR (Customer’s Reference)
        - AAO (Consignee’s Reference)
        - ECR (Empty container release reference)
        - CSI (Customer shipment ID)
        - BPR (Booking party reference number)
        - BID (Booking Request ID)
        - SAC (Shipping Agency Code)
      example: 'FF'

    ###########
    # Commodity
    ###########

    Commodity:
      type: object
      description: |
        Type of goods, defined by its commodity type
      properties:
        commodityType:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/commodityType'
        HSCodes:
          type: array
          description: |
            A list of `HS Codes` that apply to this `commodity`
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/HSCode'
        cargoGrossWeight:
          type: number
          format: float
          example: 36000.0
          minimum: 0
          exclusiveMinimum: true
          description: |
            The estimated grand total gross weight of the cargo, including packaging items being carried, which can be expressed in imperial or metric terms, as provided by the shipper.
        cargoGrossWeightUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        cargoGrossVolume:
          type: number
          format: float
          example: 360.0
          minimum: 0
          exclusiveMinimum: true
          description: |
            The grand total volume of the commodity
        cargoGrossVolumeUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
        exportLicenseIssueDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/exportLicenseIssueDate'
        exportLicenseExpiryDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/exportLicenseExpiryDate'
        outerPackaging:
          $ref: '#/components/schemas/OuterPackaging'
        references:
          type: array
          description: |
            A list of `References`
          items:
            $ref: '#/components/schemas/Reference'
      required:
        - commodityType
        - cargoGrossWeight
        - cargoGrossWeightUnit

    Commodity_CONF:
      type: object
      title: 'Commodity'
      description: |
        Type of goods, defined by its commodity type
      properties:
        commoditySubreference:
          type: string
          maxLength: 100
          pattern: '^\S+(\s+\S+)*$'
          description: |
            A unique reference for this commodity object assigned by the carrier in the booking confirmation. The reference must be provided by the shipper as part of the `Shipping Instructions` for the carrier to link the consignment item to this commodity. A commodity reference is only unique in the context of a booking.
            
            **Conditional:** Mandatory to provide for `CONFIRMED` bookings
          example: 'COM-001'
      allOf:
        - $ref: '#/components/schemas/Commodity'

    ########################
    # Active Reefer Settings
    ########################

    ActiveReeferSettings:
      type: object
      title: 'Active Reefer Settings'
      description: |
        The specifications for a Reefer equipment.
        
        **Condition:** Only applicable when`isNonOperatingReefer` is set to `false`
      properties:
        temperatureSetpoint:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/temperatureSetpoint'
        temperatureUnit:
          type: string
          description: |
            The unit for temperature in Celsius or Fahrenheit
            
            - CEL (Celsius)
            - FAH (Fahrenheit)
            
            **Condition:** Mandatory to provide if `temperatureSetpoint` is provided
          enum:
            - CEL
            - FAH
          example: 'CEL'
        o2Setpoint:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/o2Setpoint'
        co2Setpoint:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/co2Setpoint'
        humiditySetpoint:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/humiditySetpoint'
        airExchangeSetpoint:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/airExchangeSetpoint'
        airExchangeUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/airExchangeUnit'
        isVentilationOpen:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isVentilationOpen'
        isDrainholesOpen:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isDrainholesOpen'
        isBulbMode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isBulbMode'
        isColdTreatmentRequired:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isColdTreatmentRequired'
        isControlledAtmosphereRequired:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isControlledAtmosphereRequired'

    ActiveReeferSettings_BKG:
      type: object
      title: 'Active Reefer Settings'
      properties:
        isPreCoolingRequired:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isPreCoolingRequired'
        isGeneratorSetRequired:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isGeneratorSetRequired'
      allOf:
        - $ref: '#/components/schemas/ActiveReeferSettings'

    #####################
    # Requested Equipment
    #####################

    SocEquipment:
      type: object
      title: 'Shipper owned Equipment'
      properties:
        tareWeight:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/tareWeight'
        tareWeightUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        isShipperOwned:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isShipperOwned'
      required:
        - tareWeight
        - tareWeightUnit
        - isShipperOwned
      
    NonSocEquipment:
      type: object
      title: 'Carrier owned Equipment'
      properties:
        isShipperOwned:
          type: boolean
          description: 'Indicates whether the container is shipper owned (SOC).'
          # Extended example of isShipperOwned compared to DCSA_DOMAIN description (use false value)
          example: false
      required:
        - isShipperOwned

    RequestedEquipment:
      type: object
      title: 'Requested Equipment'
      description: |
        If needed - it is **only** possible to specify a single Reefer setting. If multiple settings are required for the same `equipmentSizeType` then multiple `requestedEquipment` should be specified (one for each Reefer setting).
      properties:
        ISOEquipmentCode:
          type: string
          pattern: '^\S+(\s+\S+)*$'
          maxLength: 4
          description: |
            Unique code for the different equipment size and type used to transport commodities. The code can refer to either the ISO size type (e.g. 22G1) or the ISO type group (e.g. 22GP) following the [ISO 6346](https://en.wikipedia.org/wiki/ISO_6346) standard.
          # Extended example of ISOEquipmentCode compared to DCSA_DOMAIN description (use Reefer code)
          example: '22RT'
        units:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/requestedEquipmentUnits'
        equipmentReferences:
          description: |
            A list of equipments to be used by the shipper if known at the time of booking
          type: array
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
        isNonOperatingReefer:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isNonOperatingReefer'
        activeReeferSettings:
          description: |
            The specifications for a Reefer equipment.
            
            **Condition:** Only applicable when`isNonOperatingReefer` is set to `false`
          allOf:
            - $ref: '#/components/schemas/ActiveReeferSettings_BKG'
          required:
            - temperatureSetpoint
            - temperatureUnit
        references:
          type: array
          description: |
            A list of `References`
          items:
            $ref: '#/components/schemas/Reference'
      oneOf:
        - $ref: '#/components/schemas/SocEquipment'
        - $ref: '#/components/schemas/NonSocEquipment'
      discriminator:
        propertyName: isShipperOwned
        mapping:
          true: '#/components/schemas/SocEquipment'
          false: '#/components/schemas/NonSocEquipment'
      required:
        - ISOEquipmentCode
        - units

    RequestedEquipment_CAR:
      type: object
      title: 'Requested Equipment'
      description: |
        If needed - it is **only** possible to specify a single Reefer setting. If multiple settings are required for the same `equipmentSizeType` then multiple `requestedEquipment` should be specified (one for each Reefer setting).
      properties:
        commodities:
          type: array
          description: |
            A list of `Commodities`
          items:
            $ref: '#/components/schemas/Commodity_CONF'
      allOf:
        - $ref: '#/components/schemas/RequestedEquipment'

    RequestedEquipment_SHI:
      type: object
      title: 'Requested Equipment'
      description: |
        If needed - it is **only** possible to specify a single Reefer setting. If multiple settings are required for the same `equipmentSizeType` then multiple `requestedEquipment` should be specified (one for each Reefer setting).
      properties:
        commodities:
          type: array
          description: |
            A list of `Commodities`
          items:
            $ref: '#/components/schemas/Commodity'
      allOf:
        - $ref: '#/components/schemas/RequestedEquipment'

    #########################
    # Tax and Legal Reference
    #########################

    TaxLegalReference:
      type: object
      title: 'Tax & Legal Reference'
      description: |
        Reference that uniquely identifies a party for tax and/or legal purposes in accordance with the relevant jurisdiction.
        
        A list of examples:
        
        | Type  | Country | Description |
        |-------|:-------:|-------------|
        |PAN|IN|Goods and Services Tax Identification Number in India|
        |GSTIN|IN|Goods and Services Tax Identification Number in India|
        |IEC|IN|Importer-Exported Code in India|
        |RUC|EC|Registro Único del Contribuyente in Ecuador|
        |RUC|PE|Registro Único del Contribuyente in Peru|
        |NIF|MG|Numéro d’Identification Fiscal in Madagascar|
        |NIF|DZ|Numéro d’Identification Fiscal in Algeria|
        
        Allowed combinations of `type` and `country` are maintained in [GitHub](https://github.com/dcsaorg/DCSA-OpenAPI/blob/master/domain/documentation/reference-data/taxandlegalreferences-v300.csv).
      properties:
        type:
          $ref: '#/components/schemas/taxLegalReferenceType'
        countryCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/countryCode'
        value:
          $ref: '#/components/schemas/taxLegalReferenceValue'
      required:
        - type
        - countryCode
        - value

    taxLegalReferenceType:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 50
      description: |
        The reference type code as defined by the relevant tax and/or legal authority.
      example: 'PAN'

    taxLegalReferenceValue:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 100
      description: |
        The value of the `taxLegalReference`
      example: 'AAAAA0000A'

    #######
    # Party
    #######

    codeListProvider:
      type: string
      maxLength: 5
      description: |
        A DCSA provided code for [UN/CEFACT](https://unece.org/fileadmin/DAM/trade/untdid/d16b/tred/tred3055.htm) code list providers:
        - ISO (International Standards Organization)
        - UNECE (United Nations Economic Commission for Europe)
        - LLOYD (Lloyd's register of shipping)
        - BIC (Bureau International des Containeurs)
        - IMO (International Maritime Organization)
        - SCAC (Standard Carrier Alpha Code)
        - ITIGG (International Transport Implementation Guidelines Group)
        - ITU (International Telecommunication Union)
        - SMDG (Shipplanning Message Development Group)
        - NCBH (NCB Hazcheck)
        - FMC (Federal Maritime Commission)
        - CBSA (Canada Border Services Agency)
        - DCSA (Digitial Container Shipping Association)
        - W3C (World Wide Web Consortium)
        - GLEIF (Global Legal Entity Identifier Foundation)
        - EPI (EBL Platform Identifier)
        - ZZZ (Mutually defined)
      example: 'SMDG'
    partyCode:
      type: string
      description: |
        Code to identify the party as provided by the code list provider
      maxLength: 100
      example: MSK
    codeListName:
      type: string
      description: |
        The name of the list, provided by the code list provider
      maxLength: 100
      example: LCL

    IdentifyingCode:
      type: object
      title: 'Identifying Code'
      properties:
        codeListProvider:
          $ref: '#/components/schemas/codeListProvider'
        partyCode:
          $ref: '#/components/schemas/partyCode'
        codeListName:
          $ref: '#/components/schemas/codeListName'
      required:
        - codeListProvider
        - partyCode

    # Used by SUR, ISS and PINT APIs
    partyCodes:
      type: array
      items:
        type: object
        properties:
          partyCode:
            type: string
            maxLength: 100
            minLength: 1
            pattern: '^\S+(\s+\S+)*$'
            description: |
              Code to identify the party as provided by the `partyCodeListProvider` and `codeListName`
            example: '529900T8BM49AURSDO55'
          codeListProvider:
            type: string
            description: |
              Describes the organisation that provides the party code.

               - `EPUI`:The party code is an EBL Platform User Identifier (that is, an identifier provided by a platform, used to transfer eBLs). EPIU should be combined with the `codeListName`, to identify the platform that issued the identifier.
               - `GLEIF`: The party code is issued by Global Legal Entity Identifier Foundation (GLEIF). See https://www.gleif.org/en. The `codeNameList` (if omitted) defaults to `LEI`.
               - `W3C`: The party code is issued by a standard created by World Wide Web Consortium (W3C). See https://www.w3.org/. The `codeNameList` (if omitted) defaults to `DID`.
            enum:
             - GLEIF
             - W3C
             - EPUI
            example: 'EPIU'
          codeListName:
            type: string
            pattern: '^\S+(\s+\S+)*$'
            maxLength: 100
            description: |
              The name of the code list / code generation mechanism / code authority for the party code.
              
              For `EPUI`:
               * `Wave`: An identifier provided by Wave BL.
               * `CargoX`: An identifier provided by CargoX
               * `EdoxOnline`: An identifier provided by EdoxOnline
               * `IQAX`: An identifier provided by IQAX
               * `EssDOCS`: An identifier provided by essDOCS
               * `Bolero`: An identifier provided by Bolero
               * `TradeGO`: An identifierprovided by TradeGo
               * `Secro`: An identifier provided by Secro
               * `GSBN`: An identifier provided by GSBN
               * `WiseTech`: An identifier provided by WiseTech
              
              For `W3C`:
               * `DID`: The party code is a Decentralized Identifier (see https://www.w3.org/TR/did-core/).
              
              For `GLEIF`:
               * `LEI`: The party code is a Legal Entity Identifier (LEI) as issued by Global Legal Entity Identifier Foundation (GLEIF). See https://www.gleif.org/en
            example: 'Bolero'
        required:
          - partyCode
          - codeListProvider

    PartyContactDetail:
      type: object
      title: 'Party Contact Detail'
      description: |
        The contact details of the person to contact. It is mandatory to provide either `phone` and/or `email` along with the `name`.
      example:
        name: 'Henrik'
        phone: '+45 51801234'
      properties:
        name:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contactName'
      anyOf:
        - $ref: '#/components/schemas/PhoneRequired'
        - $ref: '#/components/schemas/EmailRequired'
      required:
        - name

    PhoneRequired:
      type: object
      title: 'Phone required'
      description: |
        `Phone` is mandatory to provide
      properties:
        phone:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contactPhone'
      required:
        - phone

    EmailRequired:
      type: object
      title: 'Email required'
      description: |
        `Email` is mandatory to provide
      properties:
        email:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/email'
      required:
        - email

    Party:
      description: |
        Refers to a company or a legal entity.
      type: object
      properties:
        partyName:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/partyName'
        address:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/address'
        partyContactDetails:
          type: array
          minItems: 1
          description: |
            A list of contact details
          items:
            $ref: '#/components/schemas/PartyContactDetail'
        identifyingCodes:
          type: array
          items:
            $ref: '#/components/schemas/IdentifyingCode'
        taxLegalReferences:
          description: |
            A list of `Tax References` for a `Party`
          type: array
          items:
            $ref: '#/components/schemas/TaxLegalReference'
      required:
        - partyName

    ################
    # Document Party
    ################

    DocumentParty:
      type: object
      title: 'Document Party'
      description: |
        Associates a Party with a role.
      properties:
        party:
          $ref: '#/components/schemas/Party'
        partyFunction:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/partyFunction'
        displayedAddress:
          description: |
            The address to be displayed in the `Transport Document`. The displayed address may be used to match the address provided in the letter of credit. It is mandatory to provide a displayed address if the B/L needs to be switched to paper later in the process
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/addressLine'
        isToBeNotified:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isToBeNotified'
      required:
        - party
        - partyFunction
        - isToBeNotified

    ###################
    # Shipment Location
    ###################

    ShipmentLocation:
      type: object
      title: 'Shipment Location'
      description: |
        maps the relationship between Shipment and Location, e.g., the `Place of Receipt` and the `Place of Delivery` for a specific shipment. This is a reusable object between `Booking` and `Transport Document`
      properties:
        location:
          description: |
            General purpose object to capture the location in the `ShipmentLocation`.
            
            The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
          example:
            locationName: 'CMP Container Terminal Copenhagen'
            locationType: 'FACI'
            UNLocationCode: 'DKCPH'
            facilityCode: 'CMPDK'
            facilityCodeListProvider: 'SMDG'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        locationTypeCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shipmentLocationTypeCode'
        eventDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/eventLocationDateTime'
      required:
        - location
        - locationTypeCode

    #####################
    # Confirmed Equipment
    #####################

    ConfirmedEquipment:
      type: object
      title: 'Confirmed Equipment'
      description: |
        The confirmed equipments for the booking
      properties:
        ISOEquipmentCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/ISOEquipmentCode'
        units:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/confirmedEquipmentUnits'
      required:
        - ISOEquipmentCode
        - units

    ###########
    # Transport
    ###########

    LoadLocation:
      description: |
        General purpose object to capture the `Load Location`.
        
        The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
      example:
        locationName: 'Shanghai Shengdong International Container Terminal'
        locationType: 'FACI'
        UNLocationCode: 'CNSGH'
        facilityCode: 'SHENG'
        facilityCodeListProvider: 'SMDG'
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'

    DischargeLocation:
      description: |
        General purpose object to capture the `Discharge Location`.
        
        The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
      example:
        locationName: 'Transnet Port Terminals Cape Town'
        locationType: 'FACI'
        UNLocationCode: 'ZACPT'
        facilityCode: 'TNCT'
        facilityCodeListProvider: 'SMDG'
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'

    Transport:
      type: object
      description: |
        A list of `transport` objects sorted by ShipmentTransport sequenceNumber
      properties:
        transportPlanStage:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportPlanStage'
        transportPlanStageSequenceNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportPlanStageSequenceNumber'
        loadLocation:
          $ref: '#/components/schemas/LoadLocation'
        dischargeLocation:
          $ref: '#/components/schemas/DischargeLocation'
        plannedDepartureDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/plannedDepartureDate'
        plannedArrivalDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/plannedArrivalDate'
        modeOfTransport:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/modeOfTransport'
        vesselName:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselName'
        vesselIMONumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselIMONumber'
        carrierSerivceCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierServiceCode'
        universalServiceReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalServiceReference'
        carrierImportVoyageNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierImportVoyageNumber'
        universalImportVoyageReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalImportVoyageReference'
        carrierExportVoyageNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierExportVoyageNumber'
        universalExportVoyageReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalExportVoyageReference'
        # No Shipper legs include as part of the TransportPlan
        # isUnderShippersResponsibility:
        #   $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isUnderShippersResponsibility'
      required:
        - transportPlanStage
        - transportPlanStageSequenceNumber
        - loadLocation
        - dischargeLocation
        - plannedDepartureDate
        - plannedArrivalDate

    ########################
    # Shipment Cut-off times
    ########################

    ShipmentCutOffTime:
      type: object
      title: 'Shipment Cut-Off Time'
      description: |
        Cut off times
      properties:
        cutOffDateTimeCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cutOffDateTimeCode'
        cutOffDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cutOffDateTime'
      required:
        - cutOffDateTimeCode
        - cutOffDateTime

    ##########################
    # Advance Manifest Filings
    ##########################

    AdvanceManifestFiling_BKG:
      type: object
      title: 'Advance Manifest Filing'
      description: |
        An Advance Maifest Filing defined by a Manifest type code in combination with a country code.
        
        A list of `manifestTypeCodes` together with `countryCode` is maintained in [GitHub](https://github.com/dcsaorg/DCSA-OpenAPI/blob/master/domain/documentation/reference-data/advancemanifestfilings-v300.csv). A (small) subset can be seen here:
        
        | manifestTypeCode | countryCode | Description |
        |-----------------------|:-------------:|-------------|
        |ACI|EG|Advance Cargo Information in Egypt|
        |ACE|US|Automated Commercial Environment in the United States|
        |AFR|JP|Cargo Summary Notification (CSN)|
      properties:
        manifestTypeCode:
          $ref: '#/components/schemas/manifestTypeCode'
        countryCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/countryCode'
      example:
        manifestTypeCode: ACE
        countryCode: US
      required:
        - manifestTypeCode
        - countryCode
    
    manifestTypeCode:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 50
      description: |
        The Manifest type code as defined by the provider. A list of `manifestTypeCodes` together with `countryCode` is maintained in [GitHub](https://github.com/dcsaorg/DCSA-OpenAPI/blob/master/domain/documentation/reference-data/advancemanifestfilings-v300.csv)
      example: 'ACE'

    ########
    # Charge
    ########

    Charge:
      type: object
      description: |
        addresses the monetary value of freight and other service charges for a `Transport Document`.
      properties:
        chargeName:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/chargeName'
        currencyAmount:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/currencyAmount'
        currencyCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/currencyCode'
        paymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/paymentTermCode'
        calculationBasis:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/calculationBasis'
        unitPrice:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/unitPrice'
        quantity:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/quantity'
      required:
        - chargeName
        - currencyAmount
        - currencyCode
        - paymentTermCode
        - calculationBasis
        - unitPrice
        - quantity


    #####
    # EBL
    #####


    #######################
    # Shipping Instructions
    #######################

    CreateShippingInstructions:
      description: |
        The `Shipping Instructions` is an enrichment to the original booking shared by the Shipper to the Carrier. The information given by the Shipper through the `Shipping Instructions` is the information required to create a `Draft Transport Document`.
      type: object
      title: 'Shipping Instructions'
      properties:
        transportDocumentTypeCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentTypeCode'
        isShippedOnBoardType:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isShippedOnBoardType'
        freightPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/freightPaymentTermCode'
        originChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/originChargesPaymentTermCode'
        destinationChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/destinationChargesPaymentTermCode'
        isElectronic:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isElectronic'
        sendToPlatform:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sendToPlatform'
        isToOrder:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isToOrder'
        numberOfCopiesWithCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfCopiesWithCharges'
        numberOfCopiesWithoutCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfCopiesWithoutCharges'
        numberOfOriginalsWithCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfOriginalsWithCharges'
        numberOfOriginalsWithoutCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfOriginalsWithoutCharges'
        displayedNameForPlaceOfReceipt:
          description: |
            The name to be used in order to specify how the `Place of Receipt` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        displayedNameForPortOfLoad:
          description: |
            The name to be used in order to specify how the `Port of Load` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        displayedNameForPortOfDischarge:
          description: |
            The name to be used in order to specify how the `Port of Discharge` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        displayedNameForPlaceOfDelivery:
          description: |
            The name to be used in order to specify how the `Place of Delivery` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        placeOfIssue:
          type: object
          description: |
            General purpose object to capture where the original Transport Document (`Bill of Lading`) will be issued.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'DCSA Headquarters'
            locationType: 'UNLO'
            UNLocationCode: 'NLAMS'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        invoicePayableAt:
          type: object
          description: |
            General purpose object to capture `Invoice Payable At` location specified as: location where payment by the customer will take place. Usually refers to Basic Ocean Freight alone.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'Eiffel Tower'
            locationType: 'UNLO'
            UNLocationCode: 'FRPAR'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        partyContactDetails:
          type: array
          description: |
            The contact details of the person(s) to contact in relation to the **Transport Document** (changes, notifications etc.) 
          items:
            $ref: '#/components/schemas/PartyContactDetail'
        documentParties:
          type: array
          minLength: 1
          description: |
            A list of `Document Parties`
          items:
            $ref: '#/components/schemas/DocumentParty'
        consignmentItems:
          type: array
          minLength: 1
          description: |
            A list of `ConsignmentItems`
          items:
            $ref: '#/components/schemas/ConsignmentItem_SHI'
        utilizedTransportEquipments:
          type: array
          minLength: 1
          description: |
            A list of `Utilized Transport Equipments` describing the equipment being used.
          items:
            $ref: '#/components/schemas/UtilizedTransportEquipment_SHI'
        references:
          type: array
          description: |
            A list of `References`
          items:
            $ref: '#/components/schemas/Reference'
        customsReferences:
          type: array
          description: |
            A list of `Customs references`
          items:
            $ref: '#/components/schemas/CustomsReference'
        advanceManifestFilings:
          type: array
          description: |
            A list of `Advance Manifest Filings` specified by the Shipper to indicate whom is to do the Filing
          items:
            $ref: '#/components/schemas/AdvanceManifestFiling_EBL'
        requestedCarrierCertificates:
          type: array
          description: |
            Certificate(s) requested by the Shipper for the Carrier to include as part of the shipment documentation pack
          items:
            $ref: '#/components/schemas/RequestedCarrierCertificate'
        requestedCarrierClauses:
          type: array
          description: |
            Clauses requested by the Shipper for the Carrier to include in the `Transport Document` `Carrier clauses`
          items:
            $ref: '#/components/schemas/RequestedCarrierClause'
      required:
        - transportDocumentTypeCode
        - isShippedOnBoardType
        - isElectronic
        - isToOrder
        - freightPaymentTermCode
        - invoicePayableAt
        - partyContactDetails
        - documentParties
        - consignmentItems
        - utilizedTransportEquipments

    UpdateShippingInstructions:
      description: |
         The `Shipping Instructions` to update.
      type: object
      title: 'Shipping Instructions'
      properties:
        shippingInstructionsReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shippingInstructionsReference'
        transportDocumentTypeCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentTypeCode'
        isShippedOnBoardType:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isShippedOnBoardType'
        freightPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/freightPaymentTermCode'
        originChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/originChargesPaymentTermCode'
        destinationChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/destinationChargesPaymentTermCode'
        isElectronic:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isElectronic'
        sendToPlatform:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sendToPlatform'
        isToOrder:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isToOrder'
        numberOfCopiesWithCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfCopiesWithCharges'
        numberOfCopiesWithoutCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfCopiesWithoutCharges'
        numberOfOriginalsWithCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfOriginalsWithCharges'
        numberOfOriginalsWithoutCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfOriginalsWithoutCharges'
        displayedNameForPlaceOfReceipt:
          description: |
            The name to be used in order to specify how the `Place of Receipt` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        displayedNameForPortOfLoad:
          description: |
            The name to be used in order to specify how the `Port of Load` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        displayedNameForPortOfDischarge:
          description: |
            The name to be used in order to specify how the `Port of Discharge` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        displayedNameForPlaceOfDelivery:
          description: |
            The name to be used in order to specify how the `Place of Delivery` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        placeOfIssue:
          type: object
          description: |
            General purpose object to capture where the original Transport Document (`Bill of Lading`) will be issued.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'DCSA Headquarters'
            locationType: 'UNLO'
            UNLocationCode: 'NLAMS'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        invoicePayableAt:
          type: object
          description: |
            General purpose object to capture `Invoice Payable At` location specified as: location where payment by the customer will take place. Usually refers to Basic Ocean Freight alone.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'Eiffel Tower'
            locationType: 'UNLO'
            UNLocationCode: 'FRPAR'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        partyContactDetails:
          type: array
          description: |
            The contact details of the person(s) to contact in relation to the **Transport Document** (changes, notifications etc.) 
          items:
            $ref: '#/components/schemas/PartyContactDetail'
        documentParties:
          type: array
          minLength: 1
          description: |
            A list of `Document Parties`
          items:
            $ref: '#/components/schemas/DocumentParty'
        consignmentItems:
          type: array
          minLength: 1
          description: |
            A list of `ConsignmentItems`
          items:
            $ref: '#/components/schemas/ConsignmentItem_SHI'
        utilizedTransportEquipments:
          type: array
          minLength: 1
          description: |
            A list of `Utilized Transport Equipments` describing the equipment being used.
          items:
            $ref: '#/components/schemas/UtilizedTransportEquipment_SHI'
        references:
          type: array
          description: |
            A list of `References`
          items:
            $ref: '#/components/schemas/Reference'
        customsReferences:
          type: array
          description: |
            A list of `Customs references`
          items:
            $ref: '#/components/schemas/CustomsReference'
        advanceManifestFilings:
          type: array
          description: |
            A list of `Advance Manifest Filings` specified by the Shipper to indicate whom is to do the Filing
          items:
            $ref: '#/components/schemas/AdvanceManifestFiling_EBL'
        requestedCarrierCertificates:
          type: array
          description: |
            Certificate(s) requested by the Shipper for the Carrier to include as part of the shipment documentation pack
          items:
            $ref: '#/components/schemas/RequestedCarrierCertificate'
        requestedCarrierClauses:
          type: array
          description: |
            Clauses requested by the Shipper for the Carrier to include in the `Transport Document` `Carrier clauses`
          items:
            $ref: '#/components/schemas/RequestedCarrierClause'
      required:
        - shippingInstructionsReference
        - transportDocumentTypeCode
        - isShippedOnBoardType
        - isElectronic
        - isToOrder
        - freightPaymentTermCode
        - invoicePayableAt
        - partyContactDetails
        - documentParties
        - consignmentItems
        - utilizedTransportEquipments

    ShippingInstructions:
      description: |
        The `Shipping Instructions` as provided by the Shipper.
      type: object
      title: 'Shipping Instructions'
      properties:
        shippingInstructionsReference:
          $ref: '#/components/schemas/shippingInstructionsReference'
        transportDocumentReference:
          $ref: '#/components/schemas/transportDocumentReference'
        shippingInstructionsStatus:
          $ref: '#/components/schemas/shippingInstructionsStatus'
        updatedShippingInstructionsStatus:
          $ref: '#/components/schemas/updatedShippingInstructionsStatus'
        transportDocumentTypeCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentTypeCode'
        isShippedOnBoardType:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isShippedOnBoardType'
        freightPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/freightPaymentTermCode'
        originChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/originChargesPaymentTermCode'
        destinationChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/destinationChargesPaymentTermCode'
        isElectronic:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isElectronic'
        sendToPlatform:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sendToPlatform'
        isToOrder:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isToOrder'
        numberOfCopiesWithCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfCopiesWithCharges'
        numberOfCopiesWithoutCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfCopiesWithoutCharges'
        numberOfOriginalsWithCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfOriginalsWithCharges'
        numberOfOriginalsWithoutCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfOriginalsWithoutCharges'
        displayedNameForPlaceOfReceipt:
          description: |
            The name to be used in order to specify how the `Place of Receipt` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        displayedNameForPortOfLoad:
          description: |
            The name to be used in order to specify how the `Port of Load` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        displayedNameForPortOfDischarge:
          description: |
            The name to be used in order to specify how the `Port of Discharge` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        displayedNameForPlaceOfDelivery:
          description: |
            The name to be used in order to specify how the `Place of Delivery` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        placeOfIssue:
          type: object
          description: |
            General purpose object to capture where the original Transport Document (`Bill of Lading`) will be issued.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'DCSA Headquarters'
            locationType: 'UNLO'
            UNLocationCode: 'NLAMS'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        invoicePayableAt:
          type: object
          description: |
            General purpose object to capture `Invoice Payable At` location specified as: location where payment by the customer will take place. Usually refers to Basic Ocean Freight alone.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'Eiffel Tower'
            locationType: 'UNLO'
            UNLocationCode: 'FRPAR'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        partyContactDetails:
          type: array
          description: |
            The contact details of the person(s) to contact in relation to the **Transport Document** (changes, notifications etc.) 
          items:
            $ref: '#/components/schemas/PartyContactDetail'
        documentParties:
          type: array
          minLength: 1
          description: |
            A list of `Document Parties`
          items:
            $ref: '#/components/schemas/DocumentParty'
        consignmentItems:
          type: array
          minLength: 1
          description: |
            A list of `ConsignmentItems`
          items:
            $ref: '#/components/schemas/ConsignmentItem_SHI'
        utilizedTransportEquipments:
          type: array
          minLength: 1
          description: |
            A list of `Utilized Transport Equipments` describing the equipment being used.
          items:
            $ref: '#/components/schemas/UtilizedTransportEquipment_SHI'
        references:
          type: array
          description: |
            A list of `References`
          items:
            $ref: '#/components/schemas/Reference'
        customsReferences:
          type: array
          description: |
            A list of `Customs references`
          items:
            $ref: '#/components/schemas/CustomsReference'
        advanceManifestFilings:
          type: array
          description: |
            A list of `Advance Manifest Filings` specified by the Shipper to indicate whom is to do the Filing
          items:
            $ref: '#/components/schemas/AdvanceManifestFiling_EBL'
        requestedCarrierCertificates:
          type: array
          description: |
            Certificate(s) requested by the Shipper for the Carrier to include as part of the shipment documentation pack
          items:
            $ref: '#/components/schemas/RequestedCarrierCertificate'
        requestedCarrierClauses:
          type: array
          description: |
            Clauses requested by the Shipper for the Carrier to include in the `Transport Document` `Carrier clauses`
          items:
            $ref: '#/components/schemas/RequestedCarrierClause'
        requestedChanges:
          type: array
          description: |
            A list of changes requirested by the carrier to the document in order for it to be accepted.
          items:
            $ref: '#/components/schemas/RequestedChange'
        reason:
          $ref: '#/components/schemas/reason_EBL'
      required:
        - shippingInstructionsStatus
        - transportDocumentTypeCode
        - isShippedOnBoardType
        - isElectronic
        - isToOrder
        - freightPaymentTermCode
        - invoicePayableAt
        - partyContactDetails
        - documentParties
        - consignmentItems
        - utilizedTransportEquipments

    ShippingInstructionsRefStatus:
      type: object
      title: 'Shipping Instructions Response'
      description: |
        The `shippingInstructionsReference`, possibly the `transportDocumentReference` along with the `shippingInstructionsStatus` and `updatedShippingInstructionsStatus`, an optional list of `requestedChanges` to be applied to the `Shipping Instructions` and and optional `reason`field is returned.
      properties:
        shippingInstructionsReference:
          $ref: '#/components/schemas/shippingInstructionsReference'
        transportDocumentReference:
          $ref: '#/components/schemas/transportDocumentReference'
        shippingInstructionsStatus:
          $ref: '#/components/schemas/shippingInstructionsStatus'
        updatedShippingInstructionsStatus:
          $ref: '#/components/schemas/updatedShippingInstructionsStatus'
        requestedChanges:
          type: array
          description: |
            A list of changes requirested by the carrier to the document in order for it to be accepted.
          items:
            $ref: '#/components/schemas/RequestedChange'
        reason:
          $ref: '#/components/schemas/reason_EBL'
      required:
        - shippingInstructionsStatus

    ShippingInstructionsRefCancelStatus:
      type: object
      title: 'Shipping Instructions Response'
      description: |
        The `shippingInstructionsReference`, possibly the `transportDocumentReference` along with the `shippingInstructionsStatus` and `updatedShippingInstructionsStatus` and and optional `reason`field is returned.
      properties:
        shippingInstructionsReference:
          $ref: '#/components/schemas/shippingInstructionsReference'
        transportDocumentReference:
          $ref: '#/components/schemas/transportDocumentReference'
        shippingInstructionsStatus:
          $ref: '#/components/schemas/shippingInstructionsStatus'
        updatedShippingInstructionsStatus:
          $ref: '#/components/schemas/shippingInstructionsUpdateCancelledStatus'
        reason:
          $ref: '#/components/schemas/reason_EBL'
      required:
        - shippingInstructionsStatus

    ####################
    # Transport Document
    ####################


    TransportDocument:
      type: object
      title: 'Transport Document'
      description: |
        The document that governs the terms of carriage between shipper and carrier for maritime transportation. Two distinct types of transport documents exist:
        - Bill of Lading
        - Sea Waybill. 
      properties:
        transportDocumentReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentReference'
        shippingInstructionsReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shippingInstructionsReference'
        transportDocumentStatus:
          $ref: '#/components/schemas/transportDocumentStatus'
        transportDocumentTypeCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentTypeCode'
        isShippedOnBoardType:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isShippedOnBoardType'
        freightPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/freightPaymentTermCode'
        originChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/originChargesPaymentTermCode'
        destinationChargesPaymentTermCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/destinationChargesPaymentTermCode'
        isElectronic:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isElectronic'
        isToOrder:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isToOrder'
        numberOfCopiesWithCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfCopiesWithCharges'
        numberOfCopiesWithoutCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfCopiesWithoutCharges'
        numberOfOriginalsWithCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfOriginalsWithCharges'
        numberOfOriginalsWithoutCharges:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfOriginalsWithoutCharges'
        displayedNameForPlaceOfReceipt:
          description: |
            The name to be used in order to specify how the `Place of Receipt` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        displayedNameForPortOfLoad:
          description: |
            The name to be used in order to specify how the `Port of Load` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        displayedNameForPortOfDischarge:
          description: |
            The name to be used in order to specify how the `Port of Discharge` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        displayedNameForPlaceOfDelivery:
          description: |
            The name to be used in order to specify how the `Place of Delivery` should be displayed on the transport document to match the name and/or address provided on the letter of credit.
          type: array
          minItems: 1
          maxItems: 5
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/displayedName'
        # New values compared to SI - START
        shippedOnBoardDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/shippedOnBoardDate'
        # Values from Booking - START
        termsAndConditions:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/termsAndConditions'
        receiptTypeAtOrigin:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/receiptTypeAtOrigin'
        deliveryTypeAtDestination:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryTypeAtDestination'
        cargoMovementTypeAtOrigin:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtOrigin'
        cargoMovementTypeAtDestination:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtDestination'
        # Values from Booking - END
        issueDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/issueDate'
        receivedForShipmentDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/receivedForShipmentDate'
        serviceContractReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/serviceContractReference'
        contractQuotationReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contractQuotationReference'
        declaredValue:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/declaredValue'
        declaredValueCurrency:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/declaredValueCurrency'
        carrierCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCode'
        carrierCodeListProvider:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCodeListProvider'
        issuingParty:
          $ref: '#/components/schemas/Party'
        carrierClauses:
          type: array
          description: |
            Additional clauses for a specific shipment added by the carrier to the Bill of Lading, subject to local rules / guidelines or certain mandatory information required to be shared with the customer.
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/clauseContent'
        numberOfRiderPages:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfRiderPages'
        transports:
          $ref: '#/components/schemas/Transports'
        charges:
          type: array
          description: |
            A list of `Charges`
          items:
            $ref: '#/components/schemas/Charge'
        # New values compared to SI - END
        placeOfIssue:
          type: object
          description: |
            General purpose object to capture where the original Transport Document (`Bill of Lading`) will be issued.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'DCSA Headquarters'
            locationType: 'UNLO'
            UNLocationCode: 'NLAMS'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        invoicePayableAt:
          type: object
          description: |
            General purpose object to capture `Invoice Payable At` location specified as: location where payment by the customer will take place. Usually refers to Basic Ocean Freight alone.
            
            The location can be specified in **one** of the following ways: `UN Location Code` or an `Address`.
          example:
            locationName: 'Eiffel Tower'
            locationType: 'UNLO'
            UNLocationCode: 'FRPAR'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        partyContactDetails:
          type: array
          description: |
            The contact details of the person(s) to contact in relation to the **Transport Document** (changes, notifications etc.) 
          items:
            $ref: '#/components/schemas/PartyContactDetail'
        documentParties:
          type: array
          minLength: 1
          description: |
            A list of `Document Parties`
          items:
            $ref: '#/components/schemas/DocumentParty'
        consignmentItems:
          type: array
          minLength: 1
          description: |
            A list of `ConsignmentItems`
          items:
            $ref: '#/components/schemas/ConsignmentItem_CAR'
        # Includes calculated fields!
        utilizedTransportEquipments:
          type: array
          minLength: 1
          description: |
            A list of `Utilized Transport Equipments` describing the equipment being used.
          items:
            $ref: '#/components/schemas/UtilizedTransportEquipment_CAR'
        references:
          type: array
          description: |
            A list of `References`
          items:
            $ref: '#/components/schemas/Reference'
        customsReferences:
          type: array
          description: |
            A list of `Customs references`
          items:
            $ref: '#/components/schemas/CustomsReference'
        # advanceManifestFilings:
        #   type: array
        #   description: |
        #     A list of `Advance Manifest Filings` specified by the Shipper to indicate whom is to do the Filing
        #   items:
        #     $ref: '#/components/schemas/AdvanceManifestFiling_EBL'
        # requestedCarrierCertificates:
        #   type: array
        #   description: |
        #     Certificate(s) requested by the Shipper for the Carrier to include as part of the shipment documentation pack
        #   items:
        #     $ref: '#/components/schemas/RequestedCarrierCertificate'
        # requestedCarrierClauses:
        #   type: array
        #   description: |
        #     Clauses requested by the Shipper for the Carrier to include in the `Transport Document` `Carrier clauses`
        #   items:
        #     $ref: '#/components/schemas/RequestedCarrierClause'
      required:
        - transportDocumentReference
        - transportDocumentStatus
        - transportDocumentTypeCode
        - isShippedOnBoardType
        - isElectronic
        - isToOrder
        - freightPaymentTermCode
        - invoicePayableAt
        - partyContactDetails
        - documentParties
        - consignmentItems
        - utilizedTransportEquipments
        - termsAndConditions
        - receiptTypeAtOrigin
        - deliveryTypeAtDestination
        - cargoMovementTypeAtOrigin
        - cargoMovementTypeAtDestination
        - carrierCode
        - carrierCodeListProvider
        - issuingParty
        - transports

    TransportDocumentRefStatus:
      type: object
      title: 'Transport Document Response'
      description: |
        The `transportDocumentReference` along with the `transportDocumentStatus` for the `Transport Document` is returned.
      properties:
        transportDocumentReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentReference'
        transportDocumentStatus:
          $ref: '#/components/schemas/transportDocumentStatus'
      required:
        - transportDocumentReference
        - transportDocumentStatus

    #############
    # EBL objects
    #############

    ############
    # Transports
    ############

    PlaceOfReceipt:
      description: |
        General purpose object to capture `Place of Receipt` location specified as: the location where the cargo is handed over by the shipper, or his agent, to the shipping line. This indicates the point at which the shipping line takes on responsibility for carriage of the container.
        
        **Condition:** Only when pre-carriage is done by the carrier.
        
        The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
      example:
        locationName: 'Hamburg'
        locationType: 'UNLO'
        UNLocationCode: 'DEHAM'
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'

    PortOfLoading:
      description: |
        General purpose object to capture `Port of Loading` location specified as: the location where the cargo is loaded onto a first sea-going vessel for water transportation.
        
        The location can be specified in **one** of the following ways: `UN Location Code` or `City and Country`.
      example:
        locationName: 'Hamburg'
        locationType: 'UNLO'
        UNLocationCode: 'DEHAM'
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/cityLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
      discriminator:
        propertyName: locationType
        mapping:
          CITY: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/cityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'

    PortOfDischarge:
      description: |
        General purpose object to capture `Port of Discharge` location specified as: the location where the cargo is discharged from the last sea-going vessel.
        
        The location can be specified in **one** of the following ways: `UN Location Code` or `City and Country`.
      example:
        locationName: 'Hamburg'
        locationType: 'UNLO'
        UNLocationCode: 'DEHAM'
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/cityLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
      discriminator:
        propertyName: locationType
        mapping:
          CITY: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/cityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'

    PlaceOfDelivery:
      description: |
        General purpose object to capture `Place of Delivery` location specified as: the location where the cargo is handed over to the consignee, or his agent, by the shipping line and where responsibility of the shipping line ceases.
        
        **Condition:** Only when onward transport is done by the carrier
        
        The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
      example:
        locationName: 'Hamburg'
        locationType: 'UNLO'
        UNLocationCode: 'DEHAM'
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'

    OnwardInlandRouting:
      description: |
        General purpose object to capture `Onward Inland Routing` location specified as the end location of the inland movement that takes place after the container(s) being delivered to the port of discharge/place of delivery for account and risk of merchant (merchant haulage).
        
        The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
      example:
        locationName: 'Hamburg'
        locationType: 'UNLO'
        UNLocationCode: 'DEHAM'
      oneOf:
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
        - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
      discriminator:
        propertyName: locationType
        mapping:
          ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
          FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
          UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'

    Transports:
      type: object
      properties:
        plannedArrivalDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/plannedArrivalDate'
        plannedDepartureDate:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/plannedDepartureDate'
        preCarriageBy:
          type: string
          maxLength: 50
          description: |
            Mode of transportation for pre-carriage when transport to the port of loading is organized by the carrier. If this attributes is populated, then a Place of Receipt must also be defined. The currently supported values include:
            - VESSEL
            - RAIL
            - TRUCK
            - BARGE
          example: 'RAIL'
        onCarriageBy:
          type: string
          maxLength: 50
          description: |
            Mode of transportation for on-carriage when transport from the port of discharge is organized by the carrier. If this attributes is populated, then a Place of Delivery must also be defined. The currently supported values include:
            - VESSEL
            - RAIL
            - TRUCK
            - BARGE
          example: 'TRUCK'
        placeOfReceipt:
          $ref: '#/components/schemas/PlaceOfReceipt'
        portOfLoading:
          $ref: '#/components/schemas/PortOfLoading'
        portOfDischarge:
          $ref: '#/components/schemas/PortOfDischarge'
        placeOfDelivery:
          $ref: '#/components/schemas/PlaceOfDelivery'
        onwardInlandRouting:
          $ref: '#/components/schemas/OnwardInlandRouting'
        # Extending vesselName to be first seagoing vessel name
        vesselName:
          type: string
          pattern: '^\S+(\s+\S+)*$'
          maxLength: 35
          description: |
            The name of the first sea going Vessel on board which the cargo is loaded or intended to be loaded
          example: 'King of the Seas'
        carrierExportVoyageNumber:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierExportVoyageNumber'
        universalExportVoyageReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalExportVoyageReference'
      required:
        - plannedArrivalDate
        - plannedDepartureDate
        - portOfLoading
        - portOfDischarge
        - vesselName
        - carrierExportVoyageNumber

    ##################
    # Custom Reference
    ##################

    CustomsReference:
      type: object
      title: 'Custom Reference'
      description: |
        Reference associated with customs and/or excise purposes required by the relevant authorities for the import, export, or transit of the goods.

        A (small) list of examples:
        
        | Type  | Country | Description |
        |-------|:-------:|-------------|
        |ACID|EG|Advance Cargo Information Declaration in Egypt|
        |CERS|CA|Canadian Export Reporting System|
        |ITN|US|Internal Transaction Number in US|
        |PEB|ID|PEB reference number|
        |CSN|IN|Cargo Summary Notification (CSN)|
        
        Allowed combinations of `type` and `country` are maintained in [GitHub](https://github.com/dcsaorg/DCSA-OpenAPI/blob/master/domain/documentation/reference-data/customsreferences-v300.csv).
      properties:
        type:
          $ref: '#/components/schemas/customsReferenceType'
        countryCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/countryCode'
        value:
          $ref: '#/components/schemas/customsReferenceValue'
      required:
        - type
        - countryCode
        - value

    customsReferenceType:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 50
      description: |
        The reference type code as defined in the relevant customs jurisdiction.
      example: 'ACID'

    customsReferenceValue:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 100
      description: |
        The value of the `customsReference`
      example: '4988470982020120017'

    #####################
    # Dangerous Goods EBL
    #####################

    DangerousGoods_CAR:
      type: object
      title: 'Dangerous Goods'
      description: |
        Specification for `Dangerous Goods`. It is mandatory to either provide the `unNumber` or the `naNumber`. Dangerous Goods is based on **IMDG Amendment Version 41-22**.
      allOf:
        - $ref: '#/components/schemas/DangerousGoods'
      required:
        - properShippingName
        - imoClass

    ################
    # Outerpackaging
    ################

    # Object used for the POST Shipping Instructions - here it is **not** possible to modify DG attributes
    # Compared to the outerPackaging of the Booking - this object also contains the `packageCode`
    OuterPackaging_SHI:
      type: object
      title: 'Outer Packaging'
      description: |
        Object for outer packaging/overpack specification. Examples of overpacks are a number of packages stacked on to a pallet and secured by strapping or placed in a protective outer packaging such as a box or crate to form one unit for the convenience of handling and stowage during transport. It is an array of the attributes below.
      properties:
        packageCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/packageCode'
        numberOfPackages:
          type: integer
          format: int32
          minimum: 1
          # Extended description of numberOfPackages compared to DCSA_DOMAIN description
          description: |
            Specifies the number of outer packagings/overpacks associated with this `Cargo Item`.
          example: 18
        description:
          type: string
          maxLength: 100
          description: |
            Description of the outer packaging/overpack.
          example: Drum, steel
      required:
        - numberOfPackages

    OuterPackaging_CAR:
      type: object
      title: 'Outer Packaging'
      description: |
        Object for outer packaging/overpack specification. Examples of overpacks are a number of packages stacked on to a pallet and secured by strapping or placed in a protective outer packaging such as a box or crate to form one unit for the convenience of handling and stowage during transport. It is an array of the attributes below.
      properties:
        imoPackagingCode:
          type: string
          pattern: '^[A-Z0-9]{1,5}$'
          description: |
            The code of the packaging as per IMO.
            
            **Condition:** only applicable to dangerous goods if specified in the IMO IMDG code amendment version 41-22. If not available, the package code as per UN recommendation 21 should be used.
          example: 1A2
        dangerousGoods:
          type: array
          description: |
            A list of `Dangerous Goods`
          items:
            $ref: '#/components/schemas/DangerousGoods_CAR'
      allOf:
        - $ref: '#/components/schemas/OuterPackaging_SHI'
      required:
        - description


    ################
    # Shipping Marks
    ################

    ShippingMarks:
      type: array
      minItems: 1
      description: |
        A list of the `ShippingMarks` applicable to this `cargoItem`
      items:
        type: string
        maxLength: 500
        description: |
          The identifying details of a package or the actual markings that appear on the package(s). This information is provided by the customer.
        example: 'Made in China'

    ############
    # Cargo Item
    ############

    CargoItem_CAR:
      type: object
      title: 'Cargo Item'
      description: |
        A `cargoItem` is the smallest unit used by stuffing. A `cargoItem` cannot be split across containers.
      properties:
        shippingMarks:
          $ref: '#/components/schemas/ShippingMarks'
        equipmentReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
        weight:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weight'
        volume:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volume'
        weightUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        volumeUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
        outerPackaging:
          $ref: '#/components/schemas/OuterPackaging_CAR'
        customsReferences:
          type: array
          description: |
            A list of `Customs references`
          items:
            $ref: '#/components/schemas/CustomsReference'
      required:
        - equipmentReference
        - weight
        - weightUnit
        - outerPackaging

    CargoItem_SHI:
      type: object
      title: 'Cargo Item'
      description: |
        A `cargoItem` is the smallest unit used by stuffing. A `cargoItem` cannot be split across containers.
      properties:
        shippingMarks:
          $ref: '#/components/schemas/ShippingMarks'
        equipmentReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
        weight:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weight'
        volume:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volume'
        weightUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        volumeUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
        outerPackaging:
          $ref: '#/components/schemas/OuterPackaging_SHI'
        customsReferences:
          type: array
          description: |
            A list of `Customs references`
          items:
            $ref: '#/components/schemas/CustomsReference'
      required:
        - equipmentReference
        - weight
        - weightUnit
        - outerPackaging

    ##################
    # Consignment Item
    ##################

    ConsignmentItem:
      type: object
      title: 'Consignment Item'
      description: |
        Defines a list of `CargoItems` belonging together and the associated `Booking`. A `ConsignmentItem` can be split across multiple containers (`UtilizedTransportEquipment`) by referencing multiple `CargoItems`
      properties:
        carrierBookingReference:
          type: string
          pattern: '^\S+(\s+\S+)*$'
          maxLength: 35
          # Extended description of carrierBookingReference compared to DCSA_DOMAIN description
          description: |
            The associated booking number provided by the carrier for this `Consignment Item`.
            
            When multiple `carrierBookingReferences` are used then the bookings referred to must all contain the same:
            - transportPlan
            - shipmentLocations
            - receiptTypeAtOrigin
            - deliveryTypeAtDestination
            - cargoMovementTypeAtOrigin
            - cargoMovementTypeAtDestination
            - serviceContractReference
            - termsAndConditions
            - Place of B/L Issue (if provided)
          example: 'ABC709951'
        weight:
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
          # Extended description of weight compared to DCSA_DOMAIN description
          description: |
            The total weight of all the `CargoItems` listed in the `ConsignmentItem`. Excludes the tare weight of the container(s).
          example: 13000.3
        weightUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        volume:
          type: number
          format: float
          minimum: 0
          exclusiveMinimum: true
          # Extended description of volume compared to DCSA_DOMAIN description
          description: |
            The total volume of all the `CargoItems` listed in the `ConsignmentItem`.
          example: 12.0
        volumeUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
        descriptionOfGoods:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/descriptionOfGoods'
        HSCodes:
          type: array
          minLength: 1
          description: |
            A list of `HS Codes` that apply to this `consignmentItem`
          items:
            $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/HSCode'
        references:
          type: array
          description: |
            A list of `References`
          items:
            $ref: '#/components/schemas/Reference'
        customsReferences:
          type: array
          description: |
            A list of `Customs references`
          items:
            $ref: '#/components/schemas/CustomsReference'
      required:
        - carrierBookingReference
        - weight
        - weightUnit
        - descriptionOfGoods
        - HSCodes
        - cargoItems

    ConsignmentItem_CAR:
      type: object
      title: 'Consignment Item'
      description: |
        Defines a list of `CargoItems` belonging together and the associated `Booking`. A `ConsignmentItem` can be split across multiple containers (`UtilizedTransportEquipment`) by referencing multiple `CargoItems`
      properties:
        cargoItems:
          type: array
          minItems: 1
          description: |
            A list of all `cargoItems`
          items:
            $ref: '#/components/schemas/CargoItem_CAR'
      allOf:
        - $ref: '#/components/schemas/ConsignmentItem'
      required:
        - cargoItems

    ConsignmentItem_SHI:
      type: object
      title: 'Consignment Item'
      description: |
        Defines a list of `CargoItems` belonging together and the associated `Booking`. A `ConsignmentItem` can be split across multiple containers (`UtilizedTransportEquipment`) by referencing multiple `CargoItems`
      properties:
        commoditySubreference:
          type: string
          maxLength: 100
          pattern: '^\S+(\s+\S+)*$'
          description: |
            A unique reference to the commodity object assigned by the carrier in the booking confirmation. The reference must be provided by the shipper as part of the `Shipping Instructions` for the carrier to link this consignment item to the commodity. A commodity reference is only unique in the context of a booking.
          example: 'COM-001'
        cargoItems:
          type: array
          minItems: 1
          description: |
            A list of all `cargoItems`
          items:
            $ref: '#/components/schemas/CargoItem_SHI'
      allOf:
        - $ref: '#/components/schemas/ConsignmentItem'
      required:
        - cargoItems
        - commoditySubreference

    ###########
    # Equipment
    ###########

    Equipment:
      type: object
      description: |
        Used for storing cargo in/on during transport. The equipment size/type is defined by the ISO 6346 code. The most common equipment size/type is 20'/40'/45' DRY Freight Container, but several different versions exist.
      properties:
        equipmentReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
        ISOEquipmentCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/ISOEquipmentCode'
        tareWeight:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/tareWeight'
        weightUnit:
          type: string
          description: |
            The unit of measure which can be expressed in imperial or metric terms
            - KGM (Kilograms)
            - LBR (Pounds)
            
            **Conditional:** Mandatory to provide if `tareWeight` is provided
          enum:
            - KGM
            - LBR
          example: 'KGM'
      required:
        - equipmentReference

    RequiredEquipment:
      type: object
      title: 'Equipment'
      description: |
        Used for storing cargo in/on during transport. The equipment size/type is defined by the ISO 6346 code. The most common equipment size/type is 20'/40'/45' DRY Freight Container, but several different versions exist.
      allOf:
        - $ref: '#/components/schemas/Equipment'
      required:
        - equipmentReference
        - ISOEquipmentCode
        - tareWeight
        - weightUnit

    ######
    # Seal
    ######

    Seal:
      type: object
      description: |
        Addresses the seal-related information associated with the shipment equipment. A seal is put on a shipment equipment once it is loaded. This `Seal` is meant to stay on until the shipment equipment reaches its final destination.
      properties:
        number:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sealNumber'
        source:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sealSource'
        type:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sealType'
      required:
        - number

    ##############################
    # Utilized Transport Equipment
    ##############################

    # Calculated fields have been removed
    UtilizedTransportEquipment_CAR:
      type: object
      title: 'Utilized Transport Equipment'
      description: |
        Specifies the container (`equipment`), the total `weight`, total `volume`, possible `ActiveReeferSettings`, `seals` and `references`
      properties:
        equipment:
          $ref: '#/components/schemas/Equipment'
        cargoGrossWeight:
          type: number
          format: float
          example: 12000.0
          minimum: 0
          exclusiveMinimum: true
          description: |
            The grand total weight of the cargo and weight per container including packaging, which can be expressed in imperial or metric terms, as provided by the shipper. Excludes the tare weight of the container.
          # $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoGrossWeight'
        cargoGrossWeightUnit:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
        cargoGrossVolume:
          type: number
          format: float
          example: 120.0
          minimum: 0
          exclusiveMinimum: true
          description: |
            The grand total volume of the cargo per container, which can be expressed in imperial or metric terms, as provided by the shipper.
          # $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoGrossVolume'
        cargoGrossVolumeUnit:
          type: string 
          description: |
            The unit of measure which can be expressed in either imperial or metric terms
            - FTQ (Cubic foot)
            - MTQ (Cubic meter)
            
            **Conditional:** if `cargoGrossVolume` is provided then `cargoGrossVolumeUnit` is required
          enum:
            - MTQ
            - FTQ
          example: 'MTQ'
          # $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
        isShipperOwned:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isShipperOwned'
        isNonOperatingReefer:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isNonOperatingReefer'
        activeReeferSettings:
          $ref: '#/components/schemas/ActiveReeferSettings'
        seals:
          type: array
          minLength: 1
          description: |
            A list of `Seals`
          items:
            $ref: '#/components/schemas/Seal'
        references:
          type: array
          description: |
            A list of `References`
          items:
            $ref: '#/components/schemas/Reference'
        customsReferences:
          type: array
          description: |
            A list of `Customs references`
          items:
            $ref: '#/components/schemas/CustomsReference'
      required:
        - equipment
        - cargoGrossWeight
        - cargoGrossWeightUnit
        - isShipperOwned
        - seals

    UtilizedTransportEquipment_SHI:
      type: object
      title: 'Utilized Transport Equipment'
      description: |
        Specifies the container (`Equipment`), `Seals` and `References`
      properties:
        seals:
          type: array
          minLength: 1
          description: |
            A list of `Seals`
          items:
            $ref: '#/components/schemas/Seal'
        references:
          type: array
          description: |
            A list of `References`
          items:
            $ref: '#/components/schemas/Reference'
        customsReferences:
          type: array
          description: |
            A list of `Customs references`
          items:
            $ref: '#/components/schemas/CustomsReference'
      oneOf:
        - $ref: '#/components/schemas/UTEquipment'
        - $ref: '#/components/schemas/UTEquipmentReference'
      discriminator:
        propertyName: isShipperOwned
        mapping:
          true: '#/components/schemas/UTEquipment'
          false: '#/components/schemas/UTEquipmentReference'
      required:
        - seals

    UTEquipment:
      type: object
      title: 'Shipper Owned Equipment (SoC)'
      description: |
        To be used for SoC (Shipper owned Containers). If `isShipperOwned` is true then the equipment used needs to be specified
      properties:
        isShipperOwned:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isShipperOwned'
        equipment:
          $ref: '#/components/schemas/RequiredEquipment'
      required:
        - isShipperOwned
        - equipment

    UTEquipmentReference:
      type: object
      title: 'Carrier Owned Equipment'
      description: |
        To be used when referring to carrier owned containers (`isShipperOwned` is false). In this case it is only necessary to provide `equipmentReference`
      properties:
        isShipperOwned:
          type: boolean
          description: 'Indicates whether the container is shipper owned (SOC).'
          # Extended example of isShipperOwned compared to DCSA_DOMAIN description (use false value)
          example: false
        equipmentReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
      required:
        - isShipperOwned
        - equipmentReference

    ##########################
    # Advance Manifest Filings
    ##########################

    AdvanceManifestFiling_EBL:
      type: object
      title: 'Advance Manifest Filing'
      properties:
        advanceManifestFilingsHouseBLPerformedBy:
          type: string
          description: |
            Indicates whether the shipper (`SHIPPER`) will perform the advance manifest filing(s) for the House BL directly or if the carrier (`CARRIER`) should file them on their behalf. Allowed values are:
            
            - `SHIPPER` (the shipper does the filing)
            - `CARRIER` (the carrier does the filing)
            
            In case of self-filing (`SHIPPER`), the shipper can provide their `selfFilerCode` for each manifest.
        
            **Condition:** The `selfFilerCode` must be provided when `manifestTypeCode` is either `ACE` (US) or `ACI` (CA) and the `advanceManifestFilingsHouseBLPerformedBy` is set to `SHIPPER`.
          enum:
            - SHIPPER
            - CARRIER
          example: 'SHIPPER'
        selfFilerCode:
          $ref: '#/components/schemas/selfFilerCode'
      allOf:
        - $ref: '#/components/schemas/AdvanceManifestFiling_BKG'
      required:
        - advanceManifestFilingsHouseBLPerformedBy

    selfFilerCode:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 100
      description: |
        Code identifying the party who will submit the advance manifest filing(s) for the House BL.
        
        **Mandatory** if `manifestTypeCode` is either `ACE` (US) or `ACI` (CA) and `advanceManifestFilingsHouseBLPerformedBy` is set to `SHIPPER`.
      example: 'FLXP'

    ################################
    # Requested Carrier Certificates
    ################################

    RequestedCarrierCertificate:
      type: string
      maxLength: 100
      title: 'Requested Carrier Certificate'
      description: |
        Name of the certificate. Detailed information about carrier certificates can be found [here](https://dcsa.org/wp-content/uploads/2023/12/28-12-2023_Carrier-Certificates-shipment-voyage-particulars-and-vessel-particulars.pdf). Possible values are:
        - `SHIPMENT_VOYAGE_PARTICULARS_1` (Shipment-Voyage Particulars 1)
        - `SHIPMENT_VOYAGE_PARTICULARS_2` (Shipment-Voyage Particulars 2)
        - `SHIPMENT_VOYAGE_PARTICULARS_3` (Shipment-Voyage Particulars 3)
        - `SHIPMENT_VOYAGE_PARTICULARS_4` (Shipment-Voyage Particulars 4)
        - `SHIPMENT_VOYAGE_PARTICULARS_5` (Shipment-Voyage Particulars 5)
        - `SHIPMENT_VOYAGE_PARTICULARS_6` (Shipment-Voyage Particulars 6)
        - `SHIPMENT_VOYAGE_PARTICULARS_7` (Shipment-Voyage Particulars 7)
        - `VESSEL_PARTICULARS_1` (Vessel Particulars 1)
        - `VESSEL_PARTICULARS_2` (Vessel Particulars 2)
        - `VESSEL_PARTICULARS_3` (Vessel Particulars 3)
        - `VESSEL_PARTICULARS_4` (Vessel Particulars 4)
        - `VESSEL_PARTICULARS_5` (Vessel Particulars 5)
        - `VESSEL_PARTICULARS_6` (Vessel Particulars 6)
        - `VESSEL_PARTICULARS_7` (Vessel Particulars 7)
        - `VESSEL_PARTICULARS_8` (Vessel Particulars 8)
        - `VESSEL_PARTICULARS_9` (Vessel Particulars 9)
        - `VESSEL_PARTICULARS_10` (Vessel Particulars 10)
        - `VESSEL_PARTICULARS_11` (Vessel Particulars 11)
        - `VESSEL_PARTICULARS_12` (Vessel Particulars 12)
        - `VESSEL_PARTICULARS_13` (Vessel Particulars 13)
        - `VESSEL_PARTICULARS_14` (Vessel Particulars 14)
        - `VESSEL_PARTICULARS_15` (Vessel Particulars 15)
        - `VESSEL_PARTICULARS_16` (Vessel Particulars 16)
        - `VESSEL_PARTICULARS_17` (Vessel Particulars 17)
        - `VESSEL_PARTICULARS_18` (Vessel Particulars 18)

        More details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Edocumentation/blob/master/edocumentation-domain/src/main/resources/validations/carriercertificates.csv).
      example: 'VESSEL_PARTICULARS_1'

    ###########################
    # Requested Carrier Clauses
    ###########################

    RequestedCarrierClause:
      type: string
      maxLength: 100
      title: 'Requested Carrier Clause'
      description: |
        A clause to request from the carrier. Detailed information about the carrier clauses can be found [here](https://dcsa.org/wp-content/uploads/2023/12/202312-Standardised-Clauses-BL.pdf). Possible values are:
        - `CARGO_CARGOSPECIFICS` (Cargo/Cargo specifics)
        - `VESSELCONVEYANCE_COUNTRYSPECIFIC` (Vessel conveyance/Country Specific)
        - `CARGO_RETURNOFEMPTYCONTAINER` (Cargo/Return of Empty Container)
        - `CARGO_CARGOVALUE` (Cargo/Cargo value)
        - `CARGO_REEFERTEMPERATURE` (Cargo/Reefer temperature)
        - `CARGO_CONFLICTINGTEMPERATURES_MIXEDLOADS` (Cargo/Conflicting temperatures / Mixed loads)
        
        More infomation can be read [here](https://dcsa.org/wp-content/uploads/2023/12/202312-Standardised-Clauses-BL.pdf)
      example: 'CARGO_CARGOSPECIFICS'


    ################################
    # Document Party Related objects
    ################################

    carrierPartyReference:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 100
      description: |
        The carrier specific reference to a `Party`
      example: '1003000HHL'

    legalName:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 100
      description: |
        Legal name of the Party.
      example: 'IKEA'

    leiCode:
      type: string
      minLength: 20
      maxLength: 20
      pattern: '^[0-9A-Z]{18}[0-9]{2}$'
      description: |
        A Legal Entity Identifier (LEI), is a code that is unique to a legal entity such as a Limited Company, Fund or trust or any organisation.
      example: '89450073R2PZATKEBZ08'

    displayedAddress:
      description: |
        If switch to paper is needed then the `displayedAddress` object **MUST** be provided. In case it is missing it is not possible to switch the B/L to paper later in the process.
      type: array
      minItems: 1
      maxItems: 5
      items:
        $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/addressLine'

    bookingParty:
      description: |
        A party handling the booking
      type: object
      allOf:
        - type: object
          properties:
            legalName:
              $ref: '#/components/schemas/legalName'
        - type: object
          properties:
            address:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/address'
      required:
        - legalName
        - address

    invoiceParty:
      description: |
        A party handling the invoice
      type: object
      allOf:
        - $ref: '#/components/schemas/bookingParty'
        - type: object
          properties:
            displayedAddress:
              $ref: '#/components/schemas/displayedAddress'

    notifyParty:
      description: |
        A party which is to be notified. A NotifyParty will always be notified about the arrival of the cargo.
      type: object
      allOf:
        - $ref: '#/components/schemas/invoiceParty'
        - type: object
          properties:
            partyContactDetails:
              description: |
                Contact information for a Party
              type: object
              properties:
                name:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contactName'
                phone:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/contactPhone'
                email:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/email'
              required:
                - name
        - type: object
          properties:
            identifyingCodes:
              type: object
              description: |
                The identifying codes for the Party.
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
                leiCode:
                  $ref: '#/components/schemas/leiCode'
                taxLegalReferences:
                  type: array
                  description: |
                    A list of tax references for the `Party`
                  items:
                    $ref: '#/components/schemas/TaxLegalReference'
      required:
        # - legalName
        # - address
        - partyContactDetails

    generalParty:
      description: |
        A general purpose party
      type: object
      allOf:
        - $ref: '#/components/schemas/notifyParty'
        - type: object
          properties:
            isToBeNotified:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isToBeNotified'
      required:
        - isToBeNotified
        
    specializedParty:
      description: |
        A specialized version of the general purpose party containing EBL Solution Provier information
      type: object
      allOf:
        - $ref: '#/components/schemas/generalParty'
        - type: object
          properties:
            identifyingCodes:
              properties:
                eblPlatformIdentifier:
                  type: string
                  maxLength: 100
                  pattern: '^\S+(\s+\S+)*$'
                  description: |
                    the ebl platform identifier
                  example: 'foo@wave.com'

    originalShipper:
      type: object
      description: |
        The original supplier of the goods.
      allOf:
        - $ref: '#/components/schemas/specializedParty'
      
    shipperForwardingAgent:
      type: object
      description: |
        Identification of freight forwarder giving services to the consignor (shipper).
      allOf:
        - $ref: '#/components/schemas/specializedParty'

    consignee:
      type: object
      description: |
        Party to which goods are consigned
      allOf:
        - $ref: '#/components/schemas/specializedParty'

    consigneeForwardingAgent:
      type: object
      description: |
        Identification of freight forwarder giving services to the consignee
      allOf:
        - $ref: '#/components/schemas/specializedParty'

    shipperInvoiceParty:
      type: object
      description: |
        Invoice payer is a third party acting on behalf of the consignor (shipper).
      allOf:
        - $ref: '#/components/schemas/invoiceParty'

    consigneeInvoiceParty:
      type: object
      description: |
        Invoice payer is a third party acting on behalf of the consignee.
      allOf:
        - $ref: '#/components/schemas/invoiceParty'

    carrierBookingOffice:
      type: object
      description: |
        The carrier office responsible for processing the booking
      allOf:
        - $ref: '#/components/schemas/bookingParty'

    serviceContractOwner:
      type: object
      description: |
        The party signing the service contract with the carrier
      allOf:
        - $ref: '#/components/schemas/generalParty'

    notifyPartyResponse:
      allOf:
        - $ref: '#/components/schemas/notifyParty'
        - $ref: '#/components/schemas/partyResponseRequired'

    envelopeReceiver:
      type: object
      description: |
        The `envelopeReceiver` is a party that will receive the eBL and additional documentation, but is not directly involved in the process (like a broker or forwarder)
      allOf:
        - $ref: '#/components/schemas/generalParty'

    partyResponseRequired:
      type: object
      properties:
        identifyingCodes:
          type: object
          description: |
            The identifying codes for the Party.
          properties:
            carrierPartyReference:
              $ref: '#/components/schemas/carrierPartyReference'
          required:
            - carrierPartyReference
      required:
        - identifyingCodes

    documentParties_Response:
      description: |
        Defines the parties involved. Either the `originalShipper` or the `shipperForwardingAgent` is mandatory to provide
      type: object
      oneOf:
        - type: object
          description: |
            The `originalShipper` is mandatory to provide, the `shipperForwardingAgent` is optional to provide in case both are needed
          properties:
            originalShipper:
              allOf:
                - $ref: '#/components/schemas/originalShipper'
                - $ref: '#/components/schemas/partyResponseRequired'
            shipperForwardingAgent:
              allOf:
                - $ref: '#/components/schemas/shipperForwardingAgent'
                - $ref: '#/components/schemas/partyResponseRequired'
          required:
            - originalShipper
        - type: object
          description: |
            The `shipperForwardingAgent` is mandatory to provide
          properties:
            shipperForwardingAgent:
              allOf:
                - $ref: '#/components/schemas/shipperForwardingAgent'
                - $ref: '#/components/schemas/partyResponseRequired'
          required:
            - shipperForwardingAgent
      allOf:
        - type: object
          properties:
            consignee:
              allOf:
                - $ref: '#/components/schemas/consignee'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            consigneeForwardingAgent:
              allOf:
                - $ref: '#/components/schemas/consigneeForwardingAgent'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            shipperInvoiceParty:
              allOf:
                - $ref: '#/components/schemas/shipperInvoiceParty'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            consigneeInvoiceParty:
              allOf:
                - $ref: '#/components/schemas/consigneeInvoiceParty'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            bookingParty:
              allOf:
                - $ref: '#/components/schemas/bookingParty'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            carrierBookingOffice:
              allOf:
                - $ref: '#/components/schemas/carrierBookingOffice'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            serviceContractOwner:
              allOf:
                - $ref: '#/components/schemas/serviceContractOwner'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            envelopeReceiver:
              allOf:
                - $ref: '#/components/schemas/envelopeReceiver'
                - $ref: '#/components/schemas/partyResponseRequired'
        - type: object
          properties:
            notifyParties:
              type: array
              description: |
                The party/parties which is to be notified. A NotifyParty will always be notified about the arrival of the cargo.
              items:
                allOf:
                  - $ref: '#/components/schemas/notifyPartyResponse'

    documentParties_Request:
      description: |
        Defines the parties involved. Either the `originalShipper` or the `shipperForwardingAgent` is mandatory to provide.
        
        For each party it is possible to either provide:
        
        - a reference to the Party defined by the carrier
        - specify the entire Party object
      type: object
      oneOf:
        - type: object
          description: |
            The `originalShipper` is mandatory to provide, the `shipperForwardingAgent` is optional to provide in case both are needed
          properties:
            originalShipper:
              oneOf:
                - type: object
                  properties:
                    carrierPartyReference:
                      $ref: '#/components/schemas/carrierPartyReference'
                  required:
                    - carrierPartyReference
                - $ref: '#/components/schemas/originalShipper'
            shipperForwardingAgent:
              oneOf:
                - type: object
                  properties:
                    carrierPartyReference:
                      $ref: '#/components/schemas/carrierPartyReference'
                  required:
                    - carrierPartyReference
                - $ref: '#/components/schemas/shipperForwardingAgent'
          required:
            - originalShipper
        - type: object
          description: |
            The `shipperForwardingAgent` is mandatory to provide
          properties:
            shipperForwardingAgent:
              oneOf:
                - type: object
                  properties:
                    carrierPartyReference:
                      $ref: '#/components/schemas/carrierPartyReference'
                  required:
                    - carrierPartyReference
                - $ref: '#/components/schemas/shipperForwardingAgent'
          required:
            - shipperForwardingAgent
      properties:
        consignee:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/consignee'
        consigneeForwardingAgent:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/consigneeForwardingAgent'
        shipperInvoiceParty:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/shipperInvoiceParty'
        consigneeInvoiceParty:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/consigneeInvoiceParty'
        bookingParty:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/bookingParty'
        carrierBookingOffice:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/carrierBookingOffice'
        serviceContractOwner:
          oneOf:
            - type: object
              properties:
                carrierPartyReference:
                  $ref: '#/components/schemas/carrierPartyReference'
              required:
                - carrierPartyReference
            - $ref: '#/components/schemas/serviceContractOwner'
        notifyParties:
          type: array
          description: |
            The party/parties which is to be notified.
          items:
            allOf:
              - type: object
                oneOf:
                  - type: object
                    properties:
                      carrierPartyReference:
                        $ref: '#/components/schemas/carrierPartyReference'
                    required:
                      - carrierPartyReference
                  - $ref: '#/components/schemas/notifyParty'


    ################
    # Arrival Notice
    ################
    
    arrivalNotice:
      type: object
      description: |
        Notification on the estimated arrival time of the shipment for the consignee to initiate customs clearance and other import procedures.
      properties:
        # arrivalNoticeReference:
        #   $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/arrivalNoticeReference'
        etaAtPlaceOfDeliveryDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/etaAtPlaceOfDeliveryDateTime'
        etaAtPortOfDischargeDateTime:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/etaAtPortOfDischargeDateTime'
        freetime:
          type: array
          description: |
            List of freetime applicable to this shipment at destination.
          items:
            type: object
            properties:
              freetimeTypeCode:
                type: string
                description: |
                  Description of the freetime type applied. It can be one of the following codes:
                  - DET (Detention)
                  - DEM (Demurrage)
                  - PDM (Per Diem)
                  - STO (Storage)
                  
                # For a complete list of supported `freetimeTypeCodes` please visit [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/freetimetypecodes.csv).
                example: 'DET'
              isoEquipmentCode:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/ISOEquipmentCode'
              modeOfTransportCode:
                type: string
                description: |
                  The mode of transport for which the freetime object appllies to as defined by DCSA. Can be one of the following values:
                  - VESSEL
                  - RAIL
                  - TRUCK
                  - BARGE
                example: 'VESSEL'
              quantity:
                type: number
                format: float
                description: |
                  The number of units for which this freetime item applies.
              unitOfMeasure:
                type: string
                description: |
                  The unit used for the corresponding freetime item, such as calendar days, working days. Can be one of the following values:
                  - CD (Calendar Days)
                  - WD (Working Days)
                  - HR (Hours)
                  - DOD (Day of discharge)
                  
                # For a complete list of supported `unitOfMeasure` please visit [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/unitofmeasures.csv).
                example: 'WOR'
              calculationBasis:
                type: string
                pattern: '^\S+(\s+\S+)*$'
                maxLength: 1000
                description: |
                  Description of the conditions under which this freetime item applies. It can include reference to carrier website or individual charge as per service contract/agreement.
                example: 'Please see...'
            required:
              - freetimeTypeCode
              - isoEquipmentCode
              - quantity
              - unitOfMeasure
              - calculationBasis
        pickupLocation:
          type: object
          description: |
            General purpose object to capture `Pick-up` location specified as: specific equipment handling facility where container is to be picked up by the consignee or its logistics partners.
            
            The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
          example:
            locationName: 'HHLA Altenwerder, Hamburg'
            locationType: 'FACI'
            UNLocationCode: 'DEHAM'
            facilityCode: 'CTA'
            facilityCodeListProvider: 'SMDG'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        returnLocation:
          description: |
            General purpose object to capture `Return` location specified as: specific equipment handling facility where container is to be returned by the consignee.
            
            The location can be specified in **one** of the following ways: `UN Location Code`, `Facility` or an `Address`.
            
            **Condition:** only applicable if there are Carrier Owned Containers (no SOC).
          example:
            locationName: 'Hamburg'
            locationType: 'UNLO'
            UNLocationCode: 'DEHAM'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        returnDescription:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/returnDescription'
        customsImportDeclarationProcedure:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/customsImportDeclarationProcedure'
        additionalInformation:
          type: string
          pattern: '^\S+(\s+\S+)*$'
          maxLength: 500
          description: |
            Free text field to provide additional required information for the consignee to prepare for the shipment arrival e.g. additional required documents to prepare and present for shipment release – country specific.
          example: 'Please also provide...'
        carrierContactInformation:
          $ref: '#/components/schemas/PartyContactDetail'
        transportDocument:
          type: object
          properties:
            transportDocumentReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentReference'
            transportDocumentTypeCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentTypeCode'
            isElectronic:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/isElectronic'
            deliveryTypeAtDestination:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryTypeAtDestination'
            cargoMovementTypeAtDestination:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoMovementTypeAtDestination'
            vessel:
              type: object
              properties:
                name:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselName'
                flag:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselFlag'
                vesselIMONumber:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/vesselIMONumber'
              required:
                - name
            carrierImportVoyageNumber:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierImportVoyageNumber'
            universalImportVoyageReference:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/universalImportVoyageReference'
            termsAndConditions:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/termsAndConditions'
            carrierCode:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCode'
            carrierCodeListProvider:
              $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCodeListProvider'
            transports:
              type: object
              properties:
                plannedArrivalDate:
                  $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/plannedArrivalDate'
                departureDate:
                  type: string
                  format: date-time
                  description: |
                    The date of departure from the location where the cargo is handed over by the shipper, or his agent, to the shipping line. This can refer either to the Place of Receipt or the Port of Loading. 
                  example: '2021-11-03T09:41:00-08:30'
                placeOfReceipt:
                  $ref: '#/components/schemas/PlaceOfReceipt'
                portOfLoading:
                  $ref: '#/components/schemas/PortOfLoading'
                portOfDischarge:
                  $ref: '#/components/schemas/PortOfDischarge'
                placeOfDelivery:
                  $ref: '#/components/schemas/PlaceOfDelivery'
              required:
                - plannedArrivalDate
                - departureDate
                - portOfLoading
                - portOfDischarge
            charges:
              $ref: '#/components/schemas/arnCharge'
            invoicePayableAt:
              description: |
                General purpose object to capture `Invoice Payable At` location. The location can be specified in **any** of the following ways: `UN Location Code` or an `Address`.
              example:
                locationName: 'Eiffel Tower'
                locationType: 'UNLO'
                UNLocationCode: 'FRPAR'
              oneOf:
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
                - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
              discriminator:
                propertyName: locationType
                mapping:
                  ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
                  UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
            carrierClauses:
              type: array
              maxLength: 1
              description: |
                Additional clauses for a specific shipment added by the carrier to the Bill of Lading, subject to local rules / guidelines or certain mandatory information required to be shared with the customer.
              items:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/clauseContent'
            documentParties:
              type: array
              items:
                $ref: '#/components/schemas/DocumentParty'
            utilizedTransportEquipments:
              type: array
              minItems: 1
              description: |
                A list of `Utilized Transport Equipments` describing the equipment being used.
              items:
                type: object
                properties:
                  equipmentReference:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
                  cargoGrossWeight:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/cargoGrossWeight'
                  cargoGrossWeightUnit:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
                  isoEquipmentCode:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/ISOEquipmentCode'
                  emptyIndicatorCode:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/emptyIndicatorCode'
                  sealNumbers:
                    type: array
                    minItems: 1
                    items:
                      $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/sealNumber'
                required:
                  - equipmentReference
                  - cargoGrossWeight
                  - cargoGrossWeightUnit
                  - emptyIndicatorCode
                  - sealNumbers
            consignmentItems:
              type: array
              minItems: 1
              items:
                type: object
                properties:
                  carrierBookingReference:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierBookingReference'
                  weight:
                    type: number
                    format: float
                    minimum: 0
                    exclusiveMinimum: true
                    # Extended description of weight compared to DCSA_DOMAIN description
                    description: |
                      The total weight of all the `CargoItems` listed in the `ConsignmentItem`. Excludes the tare weight of the container(s).
                    example: 13000.3
                  volume:
                    type: number
                    format: float
                    minimum: 0
                    exclusiveMinimum: true
                    # Extended description of weight compared to DCSA_DOMAIN description
                    description: |
                      The total volume of all the `CargoItems` listed in the `ConsignmentItem`.
                    example: 12.0
                  weightUnit:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
                  volumeUnit:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/volumeUnit'
                  descriptionOfGoods:
                    $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/descriptionOfGoods'
                  HSCodes:
                    type: array
                    minLength: 1
                    description: |
                      A list of `HS Codes` that apply to this `consignmentItem`
                    items:
                      $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/HSCode'
                  cargoItems:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        shippingMarks:
                          $ref: '#/components/schemas/ShippingMarks'
                        equipmentReference:
                          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
                        numberOfPackages:
                          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/numberOfPackages'
                      required:
                        - equipmentReference
                        - numberOfPackages
                required:
                  - carrierBookingReference
                  - weight
                  - weightUnit
                  - descriptionOfGoods
                  - HSCode
                  - cargoItems
          required:
            - transportDocumentReference
            - transportDocumentTypeCode
            - isElectronic
            - receiptTypeAtOrigin
            - deliveryTypeAtDestination
            - cargoMovementTypeAtOrigin
            - cargoMovementTypeAtDestination
            - vessel
            - termsAndConditions
            - carrierCode
            - carrierCodeListProvider
            - issueDate
            - placeOfIssue
            - invoicePayableAt
            - transportPlan
            - utilizedTransportEquipments
      required:
        - arrivalNoticeReference
        - etaAtPlaceOfDeliveryDateTime
        - etaAtPortOfDischargeDateTime
        - carrierContactInformation
        - transportDocument
      
    arnCharge:
      type: object
      description: |
        Addresses the monetary value of freight and other service charges for a transport document.
      allOf:
        - $ref: '#/components/schemas/Charge'
        - type: object
          properties:
            invoiceReference:
              $ref: '#/components/schemas/invoiceReference'

    ######################
    # Delivery Instruction
    ######################
    
    deliveryInstruction:
      type: object
      description: |
        `Delivery Instructions` sent to the carrier.
        
        **TODO**
      properties:
        deliveryInstructionReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryInstructionReference'

    ################
    # Delivery Order
    ################
    
    deliveryOrder:
      type: object
      description: |
        Instructions for the `Delivery Order`
        
        **TODO**
      properties:
        deliveryOrderReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/deliveryOrderReference'
        additionalInformation:
          type: string
          pattern: '^\S+(\s+\S+)*$'
          maxLength: 500
          description: |
            Free text field to provide additional required information for the haulier to prepare operational delivery of a shipment to the consignee – country specific.
          example: 'Please also provide...'
        repleaseParty:
          $ref: '#/components/schemas/Party'
        transportDocumentReference:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/transportDocumentReference'
        carrierCode:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCode'
        carrierCodeListProvider:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/carrierCodeListProvider'
        utilizedTransportEquipments:
          type: array
          minItems: 1
          description: |
            A list of `Utilized Transport Equipments` describing the equipment being used.
          items:
            type: object
            properties:
              equipmentReference:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/equipmentReference'
              totalContainerWeight:
                type: number
                format: float
                minimum: 0
                description: |
                  Includes Cargo Gross Weight plus Container Tare Weight. It is populated based on data in the fields cargo gross weight and container tare weight.
                example: 10783
              totalContainerWeightUnit:
                $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/weightUnit'
            required:
              - equipmentReference
        pickupLocation:
          type: object
          description: |
            General purpose object to capture `Pick-up` location. The location can be specified in **one** of the following ways: `UN Location Code`, `facility` or an `Address`.
          example:
            locationName: 'HHLA Altenwerder, Hamburg'
            locationType: 'FACI'
            UNLocationCode: 'DEHAM'
            facilityCode: 'CTA'
            facilityCodeListProvider: 'SMDG'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        returnLocation:
          description: |
            General purpose object to capture `Return` location. The location can be specified in **one** of the following ways: `UN Location Code`, `facility` or an `Address`.
          example:
            locationName: 'Hamburg'
            locationType: 'UNLO'
            UNLocationCode: 'DEHAM'
          oneOf:
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
            - $ref: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
          discriminator:
            propertyName: locationType
            mapping:
              ADDR: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/addressLocation'
              FACI: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/facilityLocation'
              UNLO: 'https://api.swaggerhub.com/domains/dcsaorg/LOCATION_DOMAIN/4.0.0#/components/schemas/unLocationLocation'
        returnDescription:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/returnDescription'
        customsImportDeclarationProcedure:
          $ref: 'https://api.swaggerhub.com/domains/dcsaorg/DCSA_DOMAIN/3.1.0#/components/schemas/customsImportDeclarationProcedure'
        requestedReleaseDateTime:
          type: string
          format: date-time
          description: |
            Time at which the container is expected to be released from the terminal or another specified destination.
            
            **NB:** This field corresponds with the field called `Requested time of release` in the IFS
          example: '2021-11-03T09:41:00-08:30'
        releasePINCode:
          type: string
          pattern: '^\d+$'
          description: |
            A code that the recipient must provide at the location of release in Order to receive the container (specific per terminal)
          example: '57953'
        deliveryOrderExpiryDateTime:
          type: string
          format: date-time
          description: |
            The date when the delivery order expires. Conditional on local practices
          example: '2021-11-03T09:41:00-08:30'
      required:
        - transportDocumentReference
        - carrierCode
        - carrierCodeListProvider
        - utilizedTransportEquipments
        - pickupLocation
        - returnLocation
        - requestedReleaseDateTime

    ##############
    # Simple types
    ##############

    invoiceReference:
      type: string
      maxLength: 100
      pattern: '^\S+(\s+\S+)*$'
      description: |
        Identifier of the invoice towards the consignee in relation to the shipment. 
      example: 'INV51XX80YY'


    carrierBookingRequestReference:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 100
      description: |
        A reference to the booking during the booking request phase.
        
        **Conditional:** `carrierBookingRequestReference` and/or `carrierBookingReference` must be provided
      example: '24595eb0-5cfc-4381-9c3a-cedc1975e9aa'
    carrierBookingReference:
      type: string
      pattern: '^\S+(\s+\S+)*$'
      maxLength: 35
      description: |
        The `carrierBookingReference` if know. Often this will not be known until the booking has been confirmed. Is available during a booking amendment.
        
        **Conditional:** `carrierBookingRequestReference` and/or `carrierBookingReference` must be provided
      example: 'ABC709951'

    reason_BKG:
      type: string
      title: reason
      maxLength: 5000
      description: |
        This field can be used to explain `bookingStatus` and/or `amendedBookingStatus`.
      example: 'Rejected because of strike...'

    reason_EBL:
      type: string
      title: reason
      maxLength: 5000
      description: |
        This field can be used to explain `shippingInstructionsStatus` and/or `updatedShippingInstructionsStatus`.
      example: 'Rejected because of of wrong equipmentReference'

    ##################################
    # Booking specialized simple types
    ##################################
    
    amendedBookingStatus:
      type: string
      maxLength: 50
      description: |
        The status of latest amendment added to the `Booking`. If no amendment has been requested - then this field is empty. Possible values are:
        - `AMENDMENT RECEIVED` (An amendment has been received and is awaiting to be processed)
        - `AMENDMENT CONFIRMED` (Amendment is confirmed)
        - `AMENDMENT DECLINED` (Amendment discontinued by provider)
        - `AMENDMENT CANCELLED` (Amendment discontinued by consumer)
    bookingStatus:
      type: string
      maxLength: 50
      description: |
        The status of the `Booking`. Possible values are:
        - `RECEIVED` (Booking request has been received)
        - `PENDING UPDATE` (An update is required to the Booking)
        - `UPDATE RECEIVED` (An update has been received and is awaiting to be processed)
        - `CONFIRMED` (Booking has been Confirmed)
        - `PENDING AMENDMENT` (An amendment is required to the Booking)
        - `REJECTED` (Booking discontinued by carrier before it has been Confirmed)
        - `DECLINED` (Booking discontinued by carrier after it has been Confirmed)
        - `CANCELLED` (Booking discontinued by consumer)
        - `COMPLETED` (The Transport Document this Booking is connected to has been Surrendered for Delivery)
      example: 'RECEIVED'

    ##############################
    # eBL specialized simple types
    ##############################
      
    shippingInstructionsStatus:
      type: string
      maxLength: 50
      description: |
        The status of the `Shipping Instructions`. Possible values are:
        - `RECEIVED` (Shipping Instructions has been received)
        - `PENDING UPDATE` (An update is required to the Shipping Instructions)
        - `COMPLETED` (The Shipping Instructions can no longer be modified - the related Transport Document has been surrendered for delivery)
      example: 'RECEIVED'
    updatedShippingInstructionsStatus:
      type: string
      maxLength: 50
      description: |
        The status of the latest update to the `Shipping Instructions`. If no update has been requested - then this field is empty. Possible values are:
        - `UPDATE RECEIVED` (An update to a Shipping Instructions is waiting to be processed)
        - `UPDATE CONFIRMED` (An update to a Shipping Instructions has been confirmed)
        - `UPDATE CANCELLED` (An update to a Shipping Instructions is discontinued by consumer)
        - `UPDATE DECLINED` (An update to a Shipping Instructions is discontinued by provider)
      example: 'UPDATE RECEIVED'

    shippingInstructionsUpdateCancelledStatus:
      type: string
      maxLength: 50
      description: |
        The status of the `Updated Shipping Instructions`. It can only be `UPDATE CANCELLED`
      example: 'UPDATE CANCELLED'


    shippingInstructionsReference:
      type: string
      pattern: ^\S+(\s+\S+)*$
      maxLength: 100
      description: |
        The identifier for a `Shipping Instructions` provided by the carrier for system purposes.

        **Conditional:** `shippingInstructionsReference` and/or `transportDocumentReference` is required to provide
      example: e0559d83-00e2-438e-afd9-fdd610c1a008
    transportDocumentReference:
      type: string
      pattern: ^\S+(\s+\S+)*$
      maxLength: 20
      description: |
        A unique number allocated by the shipping line to the transport document and the main number used for the tracking of the status of the shipment.

        **Conditional:** `shippingInstructionsReference` and/or `transportDocumentReference` is required to provide
      example: HHL71800000


    transportDocumentApprovedStatus:
      type: string
      maxLength: 50
      description: |
        The status of the `Transport Document`. It can only be `APPROVED`
      example: 'APPROVED'

    transportDocumentStatus:
      type: string
      maxLength: 50
      description: |
        The status of the `Transport Document`. Possible values are:
        - DRAFT
        - APPROVED
        - ISSUED
        - PENDING SURRENDER FOR AMENDMENT
        - SURRENDER FOR AMENDMENT
        - PENDING SURRENDER FOR DELIVERY
        - SURRENDER FOR DELIVERY
        - VOIDED
      example: 'DRAFT'

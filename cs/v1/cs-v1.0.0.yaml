openapi: 3.0.3
x-stoplight:
  id: 3674xgyacnizs
info:
  title: DCSA OpenAPI specification for Commercial Schedules
  version: 1.0.0
  description: |-
    API specification issued by DCSA.org.

    For a changelog please click [here](https://github.com/dcsaorg/DCSA-OpenAPI/tree/master/cs/v1#v100). Please also [create a GitHub issue](https://github.com/dcsaorg/DCSA-OpenAPI/issues/new) if you have any questions/comments.
  license:
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
    name: Apache 2.0
  contact:
    name: Digital Container Shipping Association (DCSA)
    url: 'https://dcsa.org/'
    email: info@dcsa.org
servers:
  - url: 'http://localhost:3000'
paths:
  /v1/point-to-point-routes:
    get:
      summary: Point to Point Routing
      tags:
        - Point To Point
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PointToPoint'
          headers:
            API-Version:
              $ref: ../../models/CommonComponents.yaml#/components/headers/API-Version
      operationId: get-v1-point-to-point
      parameters:
        - schema:
            type: string
            pattern: '^[A-Z]{2}[A-Z2-9]{3}$'
            minLength: 5
            maxLength: 5
          in: query
          name: placeOfReceipt
          description: The UN Location code specifying where the place is located.
          required: true
        - schema:
            type: string
            pattern: '^[A-Z]{2}[A-Z2-9]{3}$'
            minLength: 5
            maxLength: 5
          in: query
          name: placeOfDelivery
          description: The UN Location code specifying where the place is located.
          required: true
        - schema:
            type: string
            format: date-time
            example: '2021-04-01T14:12:56-01:00'
          in: query
          name: departureDateTime
          description: |
            `:gte` (≥ Greater than or equal) OR `:lte` (≤ Less than or equal)\
            `departureDateTime:gte=2021-04-01T14:12:56-01:00`
        - schema:
            type: string
            format: date-time
            example: '2021-04-01T14:12:56-01:00'
          in: query
          name: arrivalDateTime
          description: |
            `:gte` (≥ Greater than or equal) OR `:lte` (≤ Less than or equal) \
            `arrivalDateTime:gte=2021-04-01T14:12:56-01:00`
        - schema:
            type: boolean
            example: false
          in: query
          name: isTranshipment
          description: 'Specifies wheter the proposed routing can have a transhipmentin or not. By default is TRUE and responses can have either direct routings or routings with transhipment. If FALSE, only direct routings can be proposed in the response. Transhipment: A terminal operation whereby containers or cargo are transferred from one vessel to another to reach their final destination, compared to a direct service from the load port of origin to the discharge port of destination.'
        - $ref: ../../models/CommonComponents.yaml#/components/parameters/Limit
      description: Provides the product offering of single or multiple estimated end-to-end route options for a shipment in the pre-booking phase.
  /v1/port-schedule:
    get:
      summary: Port Schedule
      tags:
        - Port Schedule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortSchedule'
      operationId: get-v1-port-schedules
      description: 'Provides, for a required specific port and starting date, the set of all vessels arriving and departing from the port with the corresponding estimated timestamps.'
      parameters:
        - schema:
            type: string
            maxLength: 5
            example: NLRTM
            pattern: '^[A-Z]{2}[A-Z2-9]{3}$'
            minLength: 5
          in: query
          name: port
          description: The UN Location code specifying where the place is located.
          required: true
        - schema:
            type: string
            format: date
            pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
            example: '2023-07-01'
          in: query
          name: date
          description: The date since when the estimated arrival and departures of vessels in a given port is required
          required: true
    parameters: []
  /v1/vessel-schedule:
    get:
      summary: Vessel Schedule
      tags:
        - Vessel Schedule
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceSchedule'
          headers:
            API-Version:
              $ref: ../../models/CommonComponents.yaml#/components/headers/API-Version
      operationId: get-v1-vessel-schedule
      x-stoplight:
        id: lj963wbx8i5m9
      parameters:
        - schema:
            type: string
            maxLength: 7
          in: query
          name: vesselIMONumber
          required: true
          description: The identifier of a vessel. The result will only return schedules including the vessel with the specified `IMO number`.  It is not a requirement for dummy vessels to have an `IMO Number`.
        - schema:
            type: string
          in: query
          name: vesselName
          description: The name of a vessel. The result will only return schedules including the vessel with the specified name.  Be aware that the vesselName is not unique and might match multiple vessels.
        - schema:
            type: string
          in: query
          name: date
          required: true
          description: The date since when the scheduled arrival and departure dates for a vessel are required.
      description: 'Provides, for a required specific vessel and starting date, the timetable of estimated departure and arrival times for each port call on the rotation of a vessel.'
components:
  schemas:
    Place:
      title: Place
      type: object
      description: The Location specifying where the place is located.
      properties:
        facilityTypeCode:
          description: The code to identify the specific type of facility. The code indicates which role the facility plays during the transportCall.
          example: POTE
          enum:
            - BORD
            - CLOC
            - COFS
            - OFFD
            - DEPO
            - INTE
            - POTE
            - RAMP
            - WAYP
        location:
          oneOf:
            - $ref: ../../models/UnLocationLocation.yaml
            - $ref: ../../models/FacilitySMDGLocation.yaml
            - $ref: ../../models/AddressLocation.yaml
        datatime:
          type: string
          format: date-time
          example: '2019-08-24T14:15:22Z'
      required:
        - facilityTypeCode
        - location
        - datatime
    PointToPoint:
      title: PointToPoint
      x-stoplight:
        id: f0nefg6xj9093
      type: object
      description: Leg of the Point-to-Point routing. The object "Legs" can be conformed by as many legs as needed and this legs must be identified with a sequence number.
      properties:
        placeOfReceipt:
          $ref: '#/components/schemas/Place'
        placeOfDelivery:
          $ref: '#/components/schemas/Place'
        transitTime:
          type: integer
          x-stoplight:
            id: n94kpnvpk6zsn
          description: The estimated total time in **days** that it takes a shipment to move from place of receipt to place of delivery. Transit time includes stop-over time during transshipments and waiting time at connection points.
          format: int64
          example: 10
        cutOffs:
          type: array
          x-stoplight:
            id: htdwqv6o6e9js
          items:
            $ref: '#/components/schemas/CutOff'
        legs:
          x-stoplight:
            id: w4k1wtp4z5j6i
          type: array
          items:
            x-stoplight:
              id: qv568k3ep7gvd
            anyOf:
              - $ref: '#/components/schemas/Ocean'
              - $ref: '#/components/schemas/Hinterland'
      required:
        - placeOfReceipt
        - placeOfDelivery
        - legs
    CutOff:
      title: CutOff
      x-stoplight:
        id: x028nov3x6li9
      type: object
      properties:
        cuttOffTypeCode:
          x-stoplight:
            id: uhq420gns96bq
          type: string
          enum:
            - DCO
            - VCO
            - FCO
            - LCO
            - EFC
        cutOffDateTime:
          type: string
          x-stoplight:
            id: jdz9ry8qnguxs
          format: date-time
          pattern: '2019-11-12T07:41:00-08:30'
      required:
        - cuttOffTypeCode
        - cutOffDateTime
    Ocean:
      title: Ocean
      x-stoplight:
        id: r70pyme3qud40
      type: object
      properties:
        sequenceNumber:
          type: integer
          x-stoplight:
            id: 4z9lhffp3cyjs
          format: int64
        modeOfTransport:
          x-stoplight:
            id: 9atywo7bqza4b
          type: string
          enum:
            - VESSEL
            - BARGE
          description: The mode of transport as defined by DCSA.
        vesselOperatorSMDGLinerCode:
          type: string
          x-stoplight:
            id: p7rb8ih6ttymi
          description: The carrier who is in charge of the vessel operation based on the SMDG code.
          pattern: ^\S+(\s+\S+)*$
          maxLength: 10
          example: HLC
        vesselIMONumber:
          type: string
          x-stoplight:
            id: o2ovfknig1oap
          description: "The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd's register code, which does not change during the lifetime of the vessel\r\n\r\nCondition: If the vessel is not dummy, there needs to be an IMO. If the vessel is dummy, the IMO is optional."
          example: '9321483'
          pattern: '^\d{7}$'
          maxLength: 7
        vesselName:
          type: string
          x-stoplight:
            id: xfeizdvobewab
          description: The name of the Vessel given by the Vessel Operator and registered with IMO.
          example: King of the Seas
          maxLength: 35
          pattern: ^\S+(\s+\S+)*$
        vesselBuildYear:
          type: string
          x-stoplight:
            id: ii5w50fjhtz6w
        vesselCallSign:
          type: string
          x-stoplight:
            id: rhvp6vwcc5elg
          description: 'A unique alphanumeric identity that belongs to the vessel and is assigned by the International Telecommunication Union (ITU). It consists of a threeletter alphanumeric prefix that indicates nationality, followed by one to four characters to identify the individual vessel. For instance, vessels registered under Denmark are assigned the prefix ranges 5PA-5QZ, OUAOZZ, and XPA-XPZ. The Call Sign changes whenever a vessel changes its flag.'
          pattern: ^\S+(\s+\S+)*$
          maxLength: 10
          example: NCVV
        vesselFlag:
          type: string
          x-stoplight:
            id: rm5libnl8kal6
        carrierServiceName:
          type: string
          x-stoplight:
            id: 4f73nmpx0tgcd
          description: The name of the service.
          maxLength: 50
          example: Great Lion Service
        universalServiceReference:
          type: string
          x-stoplight:
            id: v00rf5pn6sfs3
          description: 'A global unique service reference, as per DCSA standard, agreed by VSA partners for the service. The service reference must match the regular expression pattern: SR\d{5}[A-Z]. The letters SR followed by 5 digits, followed by a checksum-character as a capital letter from A to Z.'
          example: SR12345A
          pattern: '^SR\d{5}[A-Z]$'
          maxLength: 8
        carrierServiceCode:
          type: string
          x-stoplight:
            id: 6ejiom7wmncco
          description: The carrier-specific code of the service for which the schedule details are published.
          pattern: ^\S+(\s+\S+)*$
          maxLength: 11
          example: FE1
        universalImportVoyageReference:
          type: string
          x-stoplight:
            id: 6dyfm23y5ct2x
          description: 'A global unique voyage reference for the import Voyage, as per DCSA standard, agreed by VSA partners for the voyage.'
          pattern: '^\d{2}[0-9A-Z]{2}[NEWSR]$'
          example: 2103N
        universalExportVoyageReference:
          type: string
          x-stoplight:
            id: ns0d83qpotc73
          description: 'A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage.'
          pattern: '^\d{2}[0-9A-Z]{2}[NEWSR]$'
          example: 2103N
        carrierImportVoyageNumber:
          type: string
          x-stoplight:
            id: e9np9hrh7c934
          maxLength: 50
          pattern: ^\S+(\s+\S+)*$
          example: 2103S
          description: The identifier of an import voyage. The carrier-specific identifier of the import Voyage.
        carrierExportVoyageNumber:
          type: string
          x-stoplight:
            id: 5u650xz8q6zfm
          example: 2103N
          maxLength: 50
          pattern: ^\S+(\s+\S+)*$
          description: The identifier of an export voyage. The carrier-specific identifier of the export Voyage.
        departure:
          $ref: '#/components/schemas/Place'
        arrival:
          $ref: '#/components/schemas/Place'
      required:
        - sequenceNumber
        - modeOfTransport
        - vesselIMONumber
        - vesselName
        - carrierServiceName
        - carrierServiceCode
        - carrierImportVoyageNumber
        - carrierExportVoyageNumber
        - departure
        - arrival
    Hinterland:
      title: Hinterland
      x-stoplight:
        id: jqzpnmixsji3k
      type: object
      properties:
        sequenceNumber:
          type: integer
          format: int64
        modeOfTransport:
          enum:
            - BARGE
            - RAIL
            - TRUCK
          type: string
          description: The mode of transport as defined by DCSA.
        departure:
          $ref: '#/components/schemas/Place'
        arrival:
          $ref: '#/components/schemas/Place'
      required:
        - sequenceNumber
        - departure
        - arrival
    PortSchedule:
      title: PortSchedule
      type: object
      properties:
        location:
          x-stoplight:
            id: ksjcrliv4kobm
          oneOf:
            - $ref: ../../models/UnLocationLocation.yaml
            - $ref: ../../models/FacilitySMDGLocation.yaml
        vesselSchedules:
          type: array
          x-stoplight:
            id: oqtnha66e947j
          minItems: 0
          items:
            $ref: '#/components/schemas/Schedule'
      required:
        - location
    Schedule:
      title: Schedule
      x-stoplight:
        id: zrkqj89okumax
      type: object
      properties:
        carrierServiceName:
          type: string
          x-stoplight:
            id: g8e6j84n6mcw8
          description: The name of the service.
          maxLength: 50
          example: Great Lion Service
        carrierServiceCode:
          type: string
          x-stoplight:
            id: ys8adwf0o370o
          description: The carrier-specific code of the service for which the schedule details are published.
          pattern: ^\S+(\s+\S+)*$
          maxLength: 11
          example: FE1
        universalServiceReference:
          type: string
          x-stoplight:
            id: 18655doinhur2
          description: 'A global unique service reference, as per DCSA standard, agreed by VSA partners for the service. The service reference must match the regular expression pattern: SR\d{5}[A-Z]. The letters SR followed by 5 digits, followed by a checksum-character as a capital letter from A to Z.'
          example: SR12345A
          pattern: '^SR\d{5}[A-Z]$'
          maxLength: 8
        vesselIMONumber:
          type: string
          x-stoplight:
            id: emnq4ndujb496
          description: "The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd's register code, which does not change during the lifetime of the vessel\r\n\r\nCondition: If the vessel is not dummy, there needs to be an IMO. If the vessel is dummy, the IMO is optional."
          example: '9321483'
          pattern: '^\d{7}$'
          maxLength: 7
        vesselName:
          type: string
          x-stoplight:
            id: yrtql880q13gj
          description: The name of the Vessel given by the Vessel Operator and registered with IMO.
          example: King of the Seas
          maxLength: 35
          pattern: ^\S+(\s+\S+)*$
        vesselFlag:
          type: string
          x-stoplight:
            id: kb0qouqf81aoa
        vesselYearBuilt:
          type: string
          x-stoplight:
            id: gdhtxd2pqgull
        carrierImportVoyageNumber:
          type: string
          x-stoplight:
            id: g5k2j8ieu07oq
          maxLength: 50
          pattern: ^\S+(\s+\S+)*$
          example: 2103S
          description: The identifier of an import voyage. The carrier-specific identifier of the import Voyage.
        carrierExportVoyageNumber:
          type: string
          x-stoplight:
            id: dj9o6n46dqdas
          example: 2103N
          maxLength: 50
          pattern: ^\S+(\s+\S+)*$
          description: The identifier of an export voyage. The carrier-specific identifier of the export Voyage.
        universalImportVoyageReference:
          type: string
          x-stoplight:
            id: 6lhyeoynmhgm7
          description: 'A global unique voyage reference for the import Voyage, as per DCSA standard, agreed by VSA partners for the voyage.'
          pattern: '^\d{2}[0-9A-Z]{2}[NEWSR]$'
          example: 2103N
        universalExportVoyageReference:
          type: string
          x-stoplight:
            id: a41ztcfgnzf22
          description: 'A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage.'
          pattern: '^\d{2}[0-9A-Z]{2}[NEWSR]$'
          example: 2103N
        timestamp:
          $ref: '#/components/schemas/Timestamp'
        cutOffTimes:
          x-stoplight:
            id: nrm0rslp6zqrr
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/CutOff'
      required:
        - carrierServiceName
        - carrierServiceCode
        - vesselIMONumber
        - carrierImportVoyageNumber
        - carrierExportVoyageNumber
        - timestamp
    Timestamp:
      title: Timestamp
      x-stoplight:
        id: ver8ymezdhtxv
      type: object
      description: Always the latest timestamp available.
      properties:
        eventTypeCode:
          x-stoplight:
            id: lg6nct99zkt2v
          enum:
            - ARRI
            - DEPA
          description: Identifier for type of Transport event.
        eventClassifierCode:
          x-stoplight:
            id: 51t71zwukesws
          description: Code for the event classifier.
          enum:
            - PLN
            - EST
            - ACT
        eventDatetime:
          type: string
          x-stoplight:
            id: q511u7kwj3v69
          description: The estimated local date time in the timestamp.
          format: date-time
      required:
        - eventTypeCode
        - eventClassifierCode
        - eventDatetime
    TransportCall:
      title: TransportCall
      x-stoplight:
        id: z6ma0rjy1bydz
      type: object
      x-internal: false
      properties:
        portVisitReference:
          type: string
          x-stoplight:
            id: cd5lalxkwxmp2
          description: The unique reference that can be used to link different `transportCallReferences` to the same port visit. The reference is provided by the port to uniquely identify a port call.
          maxLength: 50
          example: NLRTM1234589
          pattern: ^\S+(\s+\S+)*$
        transportCallReference:
          type: string
          x-stoplight:
            id: qcmcz7jjht5mh
          pattern: ^\S+(\s+\S+)*$
          maxLength: 100
          description: 'The unique reference for a transport call. It’s the vessel operator responsibility to provide the Transport Call Reference, other parties are obliged to pick it up and use it.'
        carrierImportVoyageNumber:
          type: string
          x-stoplight:
            id: 4x4hvlsau7ue4
          pattern: ^\S+(\s+\S+)*$
          maxLength: 50
          example: 2103N
          description: The identifier of an import voyage. The carrier-specific identifier of the import Voyage.
        carrierExportVoyageNumber:
          type: string
          x-stoplight:
            id: jvibcpyoy1a3i
          pattern: ^\S+(\s+\S+)*$
          maxLength: 50
          example: 2103S
          description: The identifier of an export voyage. The carrier-specific identifier of the export Voyage.
        universalImportVoyageReference:
          type: string
          x-stoplight:
            id: gxutqo82oej8i
          pattern: '^\d{2}[0-9A-Z]{2}[NEWSR]$'
          example: 2103N
          description: 'A global unique voyage reference for the import Voyage, as per DCSA standard, agreed by VSA partners for the voyage.'
          maxLength: 5
        universalExportVoyageReference:
          type: string
          x-stoplight:
            id: qi9m0kpgyredl
          pattern: '^\d{2}[0-9A-Z]{2}[NEWSR]$'
          example: 2103N
          maxLength: 5
        location:
          x-stoplight:
            id: d7jg2e23zhjnb
          oneOf:
            - $ref: ../../models/UnLocationLocation.yaml
            - $ref: ../../models/FacilitySMDGLocation.yaml
            - $ref: ../../models/AddressLocation.yaml
          description: 'General purpose object to capture location-related data, the location can be specified in one of the following ways: `UN Location Code`, a `Facility` or an `Address`.'
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
      required:
        - transportCallReference
        - carrierImportVoyageNumber
        - timestamp
    TimeStamp:
      title: TimeStamp
      x-stoplight:
        id: 0s7ssgfku9hid
      type: object
      properties:
        eventTypeCode:
          x-stoplight:
            id: 1wp4wgtbaiqrs
          enum:
            - ARRI
            - DEPA
          description: "Identifier for type of transportEvent\r\n\r\n- ARRI (Arrived)\r\n- DEPA (Departed)"
          readOnly: true
        eventClassifierCode:
          x-stoplight:
            id: 7zogujur5x685
          enum:
            - PLN
            - EST
            - ACT
          description: Code for the event classifier. Values can vary depending on eventType
          readOnly: true
        eventDateTime:
          type: string
          x-stoplight:
            id: 8o5gse4ovp1ah
          format: date-time
          description: Time in the timstamp
          example: '2025-01-14T09:21:00+01:00'
        delayReasonCode:
          type: string
          x-stoplight:
            id: w4q7bto11x4xs
          pattern: ^\S+(\s+\S+)*$
          maxLength: 3
          example: WEA
          description: Reason code for the delay. See SMDG Code list DELAY for a list of valid codes to be used for this attribute.
      required:
        - eventTypeCode
        - eventClassifierCode
        - eventDateTime
    VesselSchedule:
      title: VesselSchedule
      x-stoplight:
        id: muv0lg6w14ore
      type: object
      properties:
        vesselOperatorSMDGLinerCode:
          type: string
          x-stoplight:
            id: dore13e0yltxc
          pattern: ^\S+(\s+\S+)*$
          maxLength: 10
          example: HLC
          description: The carrier who is in charge of the vessel operation based on the `SMDG code`.
        vesselIMONumber:
          type: string
          x-stoplight:
            id: tx0a6mhyaohct
          description: "The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd's register code, which does not change during the lifetime of the vessel\r\n\r\nCondition: If the vessel is not dummy, there needs to be an IMO. If the vessel is dummy, the IMO is optional."
          pattern: '^\d{7}$'
          maxLength: 7
          example: '9321483'
        vesselName:
          type: string
          x-stoplight:
            id: sjxoamy8akix5
          description: The name of the Vessel given by the Vessel Operator and registered with IMO.
          pattern: ^\S+(\s+\S+)*$
          maxLength: 35
          example: King of the Seas
        vesselCallSign:
          type: string
          x-stoplight:
            id: 4vw8dszljv2x7
          pattern: ^\S+(\s+\S+)*$
          maxLength: 10
          example: NCVV
          description: 'A unique alphanumeric identity that belongs to the vessel and is assigned by the International Telecommunication Union (ITU). It consists of a threeletter alphanumeric prefix that indicates nationality, followed by one to four characters to identify the individual vessel. For instance, vessels registered under Denmark are assigned the prefix ranges 5PA-5QZ, OUAOZZ, and XPA-XPZ. The Call Sign changes whenever a vessel changes its flag.'
        isDummyVessel:
          type: boolean
          x-stoplight:
            id: furrqtk4xkza1
          description: Is this a dummy vessel. In case no vessel has been asigned yet - this property can be set to `true` indicating that the vesselIMONumber does not exist.
        vesselYearBuilt:
          type: string
          x-stoplight:
            id: 1gchcu011vsm6
          description: The year in which the vessel was built.
        vesselFlag:
          type: string
          x-stoplight:
            id: fs8q0c0x443cx
          description: The flag of the nation whose laws the vessel is registered under. This is the ISO 3166 two-letter country code.
          maxLength: 2
        vesselClass:
          type: string
          x-stoplight:
            id: elv5nr917oa61
          description: 'The group to which the vessel belongs based on size (tonnage), use (cargo), and design.'
        norminalTEU:
          type: string
          x-stoplight:
            id: eqsec6embi58d
          description: The nominal capacity of the vessel in TEU (twenty foot equivalent unit).
        transportCalls:
          type: array
          x-stoplight:
            id: bf4cuvo4d89vq
          items:
            $ref: '#/components/schemas/TransportCall'
      required:
        - isDummyVessel
    ServiceSchedule:
      title: ServiceSchedule
      x-stoplight:
        id: ie0jcqodlylah
      type: object
      properties:
        carrierServiceName:
          type: string
          x-stoplight:
            id: 2b1m51pfjlvu6
          description: The name of the service.
          maxLength: 50
          example: Great Lion Service
        carrierServiceCode:
          type: string
          x-stoplight:
            id: 6iw2bwqz9fi1y
          pattern: ^\S+(\s+\S+)*$
          maxLength: 11
          example: FE1
          description: The carrier-specific code of the service for which the schedule details are published.
        universalServiceReference:
          type: string
          x-stoplight:
            id: l8yh5dy09liba
          pattern: '^SR\d{5}[A-Z]$'
          maxLength: 8
          example: SR12345A
          description: 'A global unique service reference, as per DCSA standard, agreed by VSA partners for the service.'
        vesselSchedules:
          type: array
          x-stoplight:
            id: lrom88da9uo6f
          items:
            $ref: '#/components/schemas/VesselSchedule'
      required:
        - carrierServiceName
        - vesselSchedules
tags:
  - name: Point To Point
    description: ' '
  - name: Port Schedule
    description: ' '
  - name: Vessel Schedule
    description: ' '
